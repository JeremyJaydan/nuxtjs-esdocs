[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "packages/.external-ecmascript.js",
    "static": true,
    "longname": "packages/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "packages/babel-preset-app/src/index.js",
    "content": "const coreJsMeta = {\n  2: {\n    prefixes: {\n      es6: 'es6',\n      es7: 'es7'\n    },\n    builtIns: require.resolve('@babel/compat-data/corejs2-built-ins')\n  },\n  3: {\n    prefixes: {\n      es6: 'es',\n      es7: 'es'\n    },\n    builtIns: require.resolve('core-js-compat/data')\n  }\n}\n\nfunction getMajorVersion (version) {\n  if (typeof version === 'number') {\n    return Math.floor(version)\n  } else {\n    return Number(version.split('.')[0])\n  }\n}\n\nfunction getDefaultPolyfills (corejs) {\n  const { prefixes: { es6, es7 } } = coreJsMeta[getMajorVersion(corejs.version)]\n  return [\n    // Promise polyfill alone doesn't work in IE,\n    // Needs this as well. see: #1642\n    `${es6}.array.iterator`,\n    // This is required for webpack code splitting, vuex etc.\n    `${es6}.promise`,\n    // this is needed for object rest spread support in templates\n    // as vue-template-es2015-compiler 1.8+ compiles it to Object.assign() calls.\n    `${es6}.object.assign`,\n    // #2012 es7.promise replaces native Promise in FF and causes missing finally\n    `${es7}.promise.finally`\n  ]\n}\n\nfunction getPolyfills (targets, includes, { ignoreBrowserslistConfig, configPath, corejs }) {\n  const { default: getTargets, isRequired } = require('@babel/helper-compilation-targets')\n  const builtInsList = require(coreJsMeta[getMajorVersion(corejs.version)].builtIns)\n  const builtInTargets = getTargets(targets, {\n    ignoreBrowserslistConfig,\n    configPath\n  })\n\n  return includes.filter(item => isRequired(\n    'nuxt-polyfills',\n    builtInTargets,\n    {\n      compatData: { 'nuxt-polyfills': builtInsList[item] }\n    }\n  ))\n}\n\nmodule.exports = (api, options = {}) => {\n  const presets = []\n  const plugins = []\n\n  const envName = api.env()\n\n  const {\n    bugfixes,\n    polyfills: userPolyfills,\n    loose = false,\n    debug = false,\n    useBuiltIns = 'usage',\n    modules = false,\n    spec,\n    ignoreBrowserslistConfig = envName === 'modern',\n    configPath,\n    include,\n    exclude,\n    shippedProposals,\n    forceAllTransforms,\n    decoratorsBeforeExport,\n    decoratorsLegacy,\n    absoluteRuntime\n  } = options\n\n  let { corejs = { version: 2 } } = options\n\n  if (typeof corejs !== 'object') {\n    corejs = { version: Number(corejs) }\n  }\n\n  if (corejs.proposals === undefined) {\n    corejs.proposals = true\n  }\n\n  const defaultTargets = {\n    server: { node: 'current' },\n    client: { ie: 9 },\n    modern: { esmodules: true }\n  }\n\n  let { targets = defaultTargets[envName] } = options\n\n  // modern mode can only be { esmodules: true }\n  if (envName === 'modern') {\n    targets = defaultTargets.modern\n  }\n\n  const polyfills = []\n\n  if (envName === 'client' && useBuiltIns === 'usage') {\n    polyfills.push(\n      ...getPolyfills(\n        targets,\n        userPolyfills || getDefaultPolyfills(corejs),\n        {\n          ignoreBrowserslistConfig,\n          configPath,\n          corejs\n        }\n      )\n    )\n    plugins.push([require('./polyfills-plugin'), { polyfills }])\n  }\n\n  // Pass options along to babel-preset-env\n  presets.push([\n    require('@babel/preset-env'), {\n      bugfixes,\n      spec,\n      loose,\n      debug,\n      modules,\n      targets,\n      useBuiltIns,\n      corejs,\n      ignoreBrowserslistConfig,\n      configPath,\n      include,\n      exclude: polyfills.concat(exclude || []),\n      shippedProposals,\n      forceAllTransforms\n    }\n  ])\n\n  // JSX\n  if (options.jsx !== false) {\n    presets.push([require('@vue/babel-preset-jsx'), Object.assign({}, options.jsx)])\n  }\n\n  plugins.push(\n    [require('@babel/plugin-proposal-decorators'), {\n      decoratorsBeforeExport,\n      legacy: decoratorsLegacy !== false\n    }],\n    [require('@babel/plugin-proposal-class-properties'), { loose: true }]\n  )\n\n  // Transform runtime, but only for helpers\n  plugins.push([require('@babel/plugin-transform-runtime'), {\n    regenerator: useBuiltIns !== 'usage',\n    corejs: false,\n    helpers: useBuiltIns === 'usage',\n    useESModules: envName !== 'server',\n    absoluteRuntime\n  }])\n\n  // https://github.com/nuxt/nuxt.js/issues/7722\n  if (envName === 'server') {\n    plugins.push(require('@babel/plugin-proposal-optional-chaining'))\n    plugins.push(require('@babel/plugin-proposal-nullish-coalescing-operator'))\n  }\n\n  return {\n    sourceType: 'unambiguous',\n    presets,\n    plugins\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/babel-preset-app/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "coreJsMeta",
    "memberof": "packages/babel-preset-app/src/index.js",
    "static": true,
    "longname": "packages/babel-preset-app/src/index.js~coreJsMeta",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{\"2\": *, \"3\": *}"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "getMajorVersion",
    "memberof": "packages/babel-preset-app/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/babel-preset-app/src/index.js~getMajorVersion",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "getDefaultPolyfills",
    "memberof": "packages/babel-preset-app/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/babel-preset-app/src/index.js~getDefaultPolyfills",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "corejs",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "getPolyfills",
    "memberof": "packages/babel-preset-app/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/babel-preset-app/src/index.js~getPolyfills",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "targets",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "includes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "packages/babel-preset-app/src/polyfills-plugin.js",
    "content": "// Add polyfill imports to the first file encountered.\nconst { addSideEffect } = require('@babel/helper-module-imports')\n\nconst modulePathMap = {\n  'regenerator-runtime': 'regenerator-runtime/runtime.js'\n}\n\nfunction getModulePath (mod) {\n  return modulePathMap[mod] || 'core-js/modules/' + mod + '.js'\n}\n\nfunction createImport (path, mod) {\n  return addSideEffect(path, getModulePath(mod))\n}\n\nmodule.exports = ({ types }) => {\n  let entryFile\n  return {\n    name: 'inject-polyfills',\n    visitor: {\n      Program (path, state) {\n        if (!entryFile) {\n          entryFile = state.filename\n        } else if (state.filename !== entryFile) {\n          return\n        }\n\n        const { polyfills } = state.opts\n\n        // Imports are injected in reverse order\n        polyfills.slice().reverse().forEach((p) => {\n          createImport(path, p)\n        })\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/babel-preset-app/src/polyfills-plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "addSideEffect",
    "memberof": "packages/babel-preset-app/src/polyfills-plugin.js",
    "static": true,
    "longname": "packages/babel-preset-app/src/polyfills-plugin.js~addSideEffect",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/polyfills-plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "modulePathMap",
    "memberof": "packages/babel-preset-app/src/polyfills-plugin.js",
    "static": true,
    "longname": "packages/babel-preset-app/src/polyfills-plugin.js~modulePathMap",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/polyfills-plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{\"regenerator-runtime\": string}"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "getModulePath",
    "memberof": "packages/babel-preset-app/src/polyfills-plugin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/babel-preset-app/src/polyfills-plugin.js~getModulePath",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/polyfills-plugin.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mod",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "createImport",
    "memberof": "packages/babel-preset-app/src/polyfills-plugin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/babel-preset-app/src/polyfills-plugin.js~createImport",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/babel-preset-app/src/polyfills-plugin.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mod",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "packages/builder/package.js",
    "content": "export default {\n  build: true,\n  ignoreUnused: [\n    // used for legacy _ in template context\n    'lodash'\n  ]\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/builder/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "packages/builder/src/builder.js",
    "content": "import path from 'path'\nimport chalk from 'chalk'\nimport chokidar from 'chokidar'\nimport consola from 'consola'\nimport fsExtra from 'fs-extra'\nimport Glob from 'glob'\nimport hash from 'hash-sum'\nimport pify from 'pify'\nimport upath from 'upath'\nimport { debounce, omit, template, uniq, uniqBy } from 'lodash'\nimport {\n  r,\n  createRoutes,\n  relativeTo,\n  waitFor,\n  determineGlobals,\n  stripWhitespace,\n  isIndexFileAndFolder,\n  scanRequireTree,\n  TARGETS\n} from '@nuxt/utils'\n\nimport { template as VueAppTemplate } from '@nuxt/vue-app'\nimport { BundleBuilder as WebpackBuilder } from '@nuxt/webpack'\n\nimport Ignore from './ignore'\nimport BuildContext from './context/build'\nimport TemplateContext from './context/template'\n\nconst glob = pify(Glob)\nexport default class Builder {\n  constructor (nuxt, bundleBuilder) {\n    this.nuxt = nuxt\n    this.plugins = []\n    this.options = nuxt.options\n    this.globals = determineGlobals(nuxt.options.globalName, nuxt.options.globals)\n    this.watchers = {\n      files: null,\n      custom: null,\n      restart: null\n    }\n\n    this.supportedExtensions = ['vue', 'js', ...(this.options.build.additionalExtensions || [])]\n\n    // Helper to resolve build paths\n    this.relativeToBuild = (...args) => relativeTo(this.options.buildDir, ...args)\n\n    this._buildStatus = STATUS.INITIAL\n\n    // Hooks for watch lifecycle\n    if (this.options.dev) {\n      // Start watching after initial render\n      this.nuxt.hook('build:done', () => {\n        consola.info('Waiting for file changes')\n        this.watchClient()\n        this.watchRestart()\n      })\n\n      // Enable HMR for serverMiddleware\n      this.serverMiddlewareHMR()\n\n      // Close hook\n      this.nuxt.hook('close', () => this.close())\n    }\n\n    if (this.options.build.analyze) {\n      this.nuxt.hook('build:done', () => {\n        consola.warn('Notice: Please do not deploy bundles built with \"analyze\" mode, they\\'re for analysis purposes only.')\n      })\n    }\n\n    // Resolve template\n    this.template = this.options.build.template || VueAppTemplate\n    if (typeof this.template === 'string') {\n      this.template = this.nuxt.resolver.requireModule(this.template).template\n    }\n\n    // Create a new bundle builder\n    this.bundleBuilder = this.getBundleBuilder(bundleBuilder)\n\n    this.ignore = new Ignore({\n      rootDir: this.options.srcDir,\n      ignoreArray: this.options.ignore\n    })\n  }\n\n  getBundleBuilder (BundleBuilder) {\n    if (typeof BundleBuilder === 'object') {\n      return BundleBuilder\n    }\n\n    const context = new BuildContext(this)\n\n    if (typeof BundleBuilder !== 'function') {\n      BundleBuilder = WebpackBuilder\n    }\n\n    return new BundleBuilder(context)\n  }\n\n  forGenerate () {\n    this.options.target = TARGETS.static\n    this.bundleBuilder.forGenerate()\n  }\n\n  async build () {\n    // Avoid calling build() method multiple times when dev:true\n    if (this._buildStatus === STATUS.BUILD_DONE && this.options.dev) {\n      return this\n    }\n    // If building\n    if (this._buildStatus === STATUS.BUILDING) {\n      await waitFor(1000)\n      return this.build()\n    }\n    this._buildStatus = STATUS.BUILDING\n\n    if (this.options.dev) {\n      consola.info('Preparing project for development')\n      consola.info('Initial build may take a while')\n    } else {\n      consola.info('Production build')\n      if (this.options.render.ssr) {\n        consola.info(`Bundling for ${chalk.bold.yellow('server')} and ${chalk.bold.green('client')} side`)\n      } else {\n        consola.info(`Bundling only for ${chalk.bold.green('client')} side`)\n      }\n      consola.info(`Target: ${chalk.bold.cyan(this.options.target)}`)\n    }\n\n    // Wait for nuxt ready\n    await this.nuxt.ready()\n\n    // Call before hook\n    await this.nuxt.callHook('build:before', this, this.options.build)\n\n    await this.validatePages()\n\n    consola.success('Builder initialized')\n\n    consola.debug(`App root: ${this.options.srcDir}`)\n\n    // Create or empty .nuxt/, .nuxt/components and .nuxt/dist folders\n    await fsExtra.emptyDir(r(this.options.buildDir))\n    const buildDirs = [r(this.options.buildDir, 'components')]\n    if (!this.options.dev) {\n      buildDirs.push(\n        r(this.options.buildDir, 'dist', 'client'),\n        r(this.options.buildDir, 'dist', 'server')\n      )\n    }\n    await Promise.all(buildDirs.map(dir => fsExtra.emptyDir(dir)))\n\n    // Call ready hook\n    await this.nuxt.callHook('builder:prepared', this, this.options.build)\n\n    // Generate routes and interpret the template files\n    await this.generateRoutesAndFiles()\n\n    // Add vue-app template dir to watchers\n    this.options.build.watch.push(this.globPathWithExtensions(this.template.dir))\n\n    await this.resolvePlugins()\n\n    // Start bundle build: webpack, rollup, parcel...\n    await this.bundleBuilder.build()\n\n    // Flag to set that building is done\n    this._buildStatus = STATUS.BUILD_DONE\n\n    // Call done hook\n    await this.nuxt.callHook('build:done', this)\n\n    return this\n  }\n\n  // Check if pages dir exists and warn if not\n  async validatePages () {\n    this._nuxtPages = typeof this.options.build.createRoutes !== 'function'\n\n    if (\n      !this._nuxtPages ||\n      await fsExtra.exists(path.resolve(this.options.srcDir, this.options.dir.pages))\n    ) {\n      return\n    }\n\n    const dir = this.options.srcDir\n    if (await fsExtra.exists(path.join(this.options.srcDir, '..', this.options.dir.pages))) {\n      throw new Error(\n        `No \\`${this.options.dir.pages}\\` directory found in ${dir}. Did you mean to run \\`nuxt\\` in the parent (\\`../\\`) directory?`\n      )\n    }\n\n    this._defaultPage = true\n    consola.warn(`No \\`${this.options.dir.pages}\\` directory found in ${dir}. Using the default built-in page.`)\n  }\n\n  globPathWithExtensions (path) {\n    return `${path}/**/*.{${this.supportedExtensions.join(',')}}`\n  }\n\n  createTemplateContext () {\n    return new TemplateContext(this, this.options)\n  }\n\n  async generateRoutesAndFiles () {\n    consola.debug('Generating nuxt files')\n\n    this.plugins = Array.from(await this.normalizePlugins())\n\n    const templateContext = this.createTemplateContext()\n\n    await Promise.all([\n      this.resolveLayouts(templateContext),\n      this.resolveRoutes(templateContext),\n      this.resolveStore(templateContext),\n      this.resolveMiddleware(templateContext)\n    ])\n\n    this.addOptionalTemplates(templateContext)\n\n    await this.resolveCustomTemplates(templateContext)\n\n    await this.resolveLoadingIndicator(templateContext)\n\n    await this.compileTemplates(templateContext)\n\n    consola.success('Nuxt files generated')\n  }\n\n  async normalizePlugins () {\n    // options.extendPlugins allows for returning a new plugins array\n    if (typeof this.options.extendPlugins === 'function') {\n      const extendedPlugins = this.options.extendPlugins(this.options.plugins)\n\n      if (Array.isArray(extendedPlugins)) {\n        this.options.plugins = extendedPlugins\n      }\n    }\n\n    // extendPlugins hook only supports in-place modifying\n    await this.nuxt.callHook('builder:extendPlugins', this.options.plugins)\n\n    const modes = ['client', 'server']\n    const modePattern = new RegExp(`\\\\.(${modes.join('|')})(\\\\.\\\\w+)*$`)\n    return uniqBy(\n      this.options.plugins.map((p) => {\n        if (typeof p === 'string') {\n          p = { src: p }\n        }\n        const pluginBaseName = path.basename(p.src, path.extname(p.src)).replace(\n          /[^a-zA-Z?\\d\\s:]/g,\n          ''\n        )\n\n        if (p.ssr === false) {\n          p.mode = 'client'\n        } else if (p.mode === undefined) {\n          p.mode = 'all'\n          p.src.replace(modePattern, (_, mode) => {\n            if (modes.includes(mode)) {\n              p.mode = mode\n            }\n          })\n        } else if (!['client', 'server', 'all'].includes(p.mode)) {\n          consola.warn(`Invalid plugin mode (server/client/all): '${p.mode}'. Falling back to 'all'`)\n          p.mode = 'all'\n        }\n\n        return {\n          src: this.nuxt.resolver.resolveAlias(p.src),\n          mode: p.mode,\n          name: 'nuxt_plugin_' + pluginBaseName + '_' + hash(p.src)\n        }\n      }),\n      p => p.name\n    )\n  }\n\n  addOptionalTemplates (templateContext) {\n    if (this.options.build.indicator) {\n      templateContext.templateFiles.push('components/nuxt-build-indicator.vue')\n    }\n\n    if (this.options.loading !== false) {\n      templateContext.templateFiles.push('components/nuxt-loading.vue')\n    }\n  }\n\n  async resolveFiles (dir, cwd = this.options.srcDir) {\n    return this.ignore.filter(await glob(this.globPathWithExtensions(dir), {\n      cwd,\n      follow: this.options.build.followSymlinks\n    }))\n  }\n\n  async resolveRelative (dir) {\n    const dirPrefix = new RegExp(`^${dir}/`)\n    return (await this.resolveFiles(dir)).map(file => ({ src: file.replace(dirPrefix, '') }))\n  }\n\n  async resolveLayouts ({ templateVars, templateFiles }) {\n    if (!this.options.features.layouts) {\n      return\n    }\n\n    if (await fsExtra.exists(path.resolve(this.options.srcDir, this.options.dir.layouts))) {\n      for (const file of await this.resolveFiles(this.options.dir.layouts)) {\n        const name = file\n          .replace(new RegExp(`^${this.options.dir.layouts}/`), '')\n          .replace(new RegExp(`\\\\.(${this.supportedExtensions.join('|')})$`), '')\n\n        // Layout Priority: module.addLayout > .vue file > other extensions\n        if (name === 'error') {\n          if (!templateVars.components.ErrorPage) {\n            templateVars.components.ErrorPage = this.relativeToBuild(\n              this.options.srcDir,\n              file\n            )\n          }\n        } else if (this.options.layouts[name]) {\n          consola.warn(`Duplicate layout registration, \"${name}\" has been registered as \"${this.options.layouts[name]}\"`)\n        } else if (!templateVars.layouts[name] || /\\.vue$/.test(file)) {\n          templateVars.layouts[name] = this.relativeToBuild(\n            this.options.srcDir,\n            file\n          )\n        }\n      }\n    }\n\n    // If no default layout, create its folder and add the default folder\n    if (!templateVars.layouts.default) {\n      await fsExtra.mkdirp(r(this.options.buildDir, 'layouts'))\n      templateFiles.push('layouts/default.vue')\n      templateVars.layouts.default = './layouts/default.vue'\n    }\n  }\n\n  async resolveRoutes ({ templateVars }) {\n    consola.debug('Generating routes...')\n    const { routeNameSplitter, trailingSlash } = this.options.router\n\n    if (this._defaultPage) {\n      templateVars.router.routes = createRoutes({\n        files: ['index.vue'],\n        srcDir: this.template.dir + '/pages',\n        routeNameSplitter,\n        trailingSlash\n      })\n    } else if (this._nuxtPages) {\n      // Use nuxt createRoutes bases on pages/\n      const files = {}\n      const ext = new RegExp(`\\\\.(${this.supportedExtensions.join('|')})$`)\n      for (const page of await this.resolveFiles(this.options.dir.pages)) {\n        const key = page.replace(ext, '')\n        // .vue file takes precedence over other extensions\n        if (/\\.vue$/.test(page) || !files[key]) {\n          files[key] = page.replace(/(['\"])/g, '\\\\$1')\n        }\n      }\n      templateVars.router.routes = createRoutes({\n        files: Object.values(files),\n        srcDir: this.options.srcDir,\n        pagesDir: this.options.dir.pages,\n        routeNameSplitter,\n        supportedExtensions: this.supportedExtensions,\n        trailingSlash\n      })\n    } else { // If user defined a custom method to create routes\n      templateVars.router.routes = await this.options.build.createRoutes(\n        this.options.srcDir\n      )\n    }\n\n    await this.nuxt.callHook(\n      'build:extendRoutes',\n      templateVars.router.routes,\n      r\n    )\n    // router.extendRoutes method\n    if (typeof this.options.router.extendRoutes === 'function') {\n      // let the user extend the routes\n      const extendedRoutes = await this.options.router.extendRoutes(\n        templateVars.router.routes,\n        r\n      )\n      // Only overwrite routes when something is returned for backwards compatibility\n      if (extendedRoutes !== undefined) {\n        templateVars.router.routes = extendedRoutes\n      }\n    }\n\n    // Make routes accessible for other modules and webpack configs\n    this.routes = templateVars.router.routes\n  }\n\n  async resolveStore ({ templateVars, templateFiles }) {\n    // Add store if needed\n    if (!this.options.features.store || !this.options.store) {\n      return\n    }\n\n    templateVars.storeModules = (await this.resolveRelative(this.options.dir.store))\n      .sort(({ src: p1 }, { src: p2 }) => {\n        // modules are sorted from low to high priority (for overwriting properties)\n        let res = p1.split('/').length - p2.split('/').length\n        if (res === 0 && p1.includes('/index.')) {\n          res = -1\n        } else if (res === 0 && p2.includes('/index.')) {\n          res = 1\n        }\n        return res\n      })\n\n    templateFiles.push('store.js')\n  }\n\n  async resolveMiddleware ({ templateVars, templateFiles }) {\n    if (!this.options.features.middleware) {\n      return\n    }\n\n    const middleware = await this.resolveRelative(this.options.dir.middleware)\n    const extRE = new RegExp(`\\\\.(${this.supportedExtensions.join('|')})$`)\n    templateVars.middleware = middleware.map(({ src }) => {\n      const name = src.replace(extRE, '')\n      const dst = this.relativeToBuild(this.options.srcDir, this.options.dir.middleware, src)\n      return { name, src, dst }\n    })\n\n    templateFiles.push('middleware.js')\n  }\n\n  async resolveCustomTemplates (templateContext) {\n    // Sanitize custom template files\n    this.options.build.templates = this.options.build.templates.map((t) => {\n      const src = t.src || t\n      return {\n        src: r(this.options.srcDir, src),\n        dst: t.dst || path.basename(src),\n        custom: true,\n        ...(typeof t === 'object' ? t : undefined)\n      }\n    })\n\n    const customTemplateFiles = this.options.build.templates.map(t => t.dst || path.basename(t.src || t))\n\n    const templatePaths = uniq([\n      // Modules & user provided templates\n      // first custom to keep their index\n      ...customTemplateFiles,\n      // @nuxt/vue-app templates\n      ...templateContext.templateFiles\n    ])\n\n    const appDir = path.resolve(this.options.srcDir, this.options.dir.app)\n\n    templateContext.templateFiles = await Promise.all(templatePaths.map(async (file) => {\n      // Use custom file if provided in build.templates[]\n      const customTemplateIndex = customTemplateFiles.indexOf(file)\n      const customTemplate = customTemplateIndex !== -1 ? this.options.build.templates[customTemplateIndex] : null\n      let src = customTemplate ? (customTemplate.src || customTemplate) : r(this.template.dir, file)\n\n      // Allow override templates using a file with same name in ${srcDir}/app\n      const customAppFile = path.resolve(this.options.srcDir, this.options.dir.app, file)\n      const customAppFileExists = customAppFile.startsWith(appDir) && await fsExtra.exists(customAppFile)\n      if (customAppFileExists) {\n        src = customAppFile\n      }\n\n      return {\n        src,\n        dst: file,\n        custom: Boolean(customAppFileExists || customTemplate),\n        options: (customTemplate && customTemplate.options) || {}\n      }\n    }))\n  }\n\n  async resolveLoadingIndicator ({ templateFiles }) {\n    if (!this.options.loadingIndicator.name) {\n      return\n    }\n    let indicatorPath = path.resolve(\n      this.template.dir,\n      'views/loading',\n      this.options.loadingIndicator.name + '.html'\n    )\n\n    let customIndicator = false\n    if (!await fsExtra.exists(indicatorPath)) {\n      indicatorPath = this.nuxt.resolver.resolveAlias(\n        this.options.loadingIndicator.name\n      )\n\n      if (await fsExtra.exists(indicatorPath)) {\n        customIndicator = true\n      } else {\n        indicatorPath = null\n      }\n    }\n\n    if (!indicatorPath) {\n      consola.error(\n        `Could not fetch loading indicator: ${\n          this.options.loadingIndicator.name\n        }`\n      )\n      return\n    }\n\n    templateFiles.push({\n      src: indicatorPath,\n      dst: 'loading.html',\n      custom: customIndicator,\n      options: this.options.loadingIndicator\n    })\n  }\n\n  async compileTemplates (templateContext) {\n    // Prepare template options\n    const { templateVars, templateFiles, templateOptions } = templateContext\n\n    await this.nuxt.callHook('build:templates', {\n      templateVars,\n      templatesFiles: templateFiles,\n      resolve: r\n    })\n\n    templateOptions.imports = {\n      ...templateOptions.imports,\n      resolvePath: this.nuxt.resolver.resolvePath,\n      resolveAlias: this.nuxt.resolver.resolveAlias,\n      relativeToBuild: this.relativeToBuild\n    }\n\n    // Interpret and move template files to .nuxt/\n    await Promise.all(\n      templateFiles.map(async (templateFile) => {\n        const { src, dst, custom } = templateFile\n\n        // Add custom templates to watcher\n        if (custom) {\n          this.options.build.watch.push(src)\n        }\n\n        // Render template to dst\n        const fileContent = await fsExtra.readFile(src, 'utf8')\n\n        let content\n        try {\n          const templateFunction = template(fileContent, templateOptions)\n          content = stripWhitespace(\n            templateFunction({\n              ...templateVars,\n              ...templateFile\n            })\n          )\n        } catch (err) {\n          throw new Error(`Could not compile template ${src}: ${err.message}`)\n        }\n\n        // Ensure parent dir exits and write file\n        const relativePath = r(this.options.buildDir, dst)\n        await fsExtra.outputFile(relativePath, content, 'utf8')\n      })\n    )\n  }\n\n  resolvePlugins () {\n    // Check plugins exist then set alias to their real path\n    return Promise.all(this.plugins.map(async (p) => {\n      const ext = '{?(.+([^.])),/index.+([^.])}'\n      const pluginFiles = await glob(`${p.src}${ext}`)\n\n      if (!pluginFiles || pluginFiles.length === 0) {\n        throw new Error(`Plugin not found: ${p.src}`)\n      }\n\n      if (pluginFiles.length > 1 && !isIndexFileAndFolder(pluginFiles)) {\n        consola.warn({\n          message: `Found ${pluginFiles.length} plugins that match the configuration, suggest to specify extension:`,\n          additional: '\\n' + pluginFiles.map(x => `- ${x}`).join('\\n')\n        })\n      }\n\n      p.src = this.relativeToBuild(p.src)\n    }))\n  }\n\n  // TODO: Uncomment when generateConfig enabled again\n  // async generateConfig() {\n  //   const config = path.resolve(this.options.buildDir, 'build.config.js')\n  //   const options = omit(this.options, Options.unsafeKeys)\n  //   await fsExtra.writeFile(\n  //     config,\n  //     `export default ${JSON.stringify(options, null, '  ')}`,\n  //     'utf8'\n  //   )\n  // }\n\n  createFileWatcher (patterns, events, listener, watcherCreatedCallback) {\n    const options = this.options.watchers.chokidar\n    const watcher = chokidar.watch(patterns, options)\n\n    for (const event of events) {\n      watcher.on(event, listener)\n    }\n\n    // TODO: due to fixes in chokidar this isnt used anymore and could be removed in Nuxt v3\n    const { rewatchOnRawEvents } = this.options.watchers\n    if (rewatchOnRawEvents && Array.isArray(rewatchOnRawEvents)) {\n      watcher.on('raw', (_event) => {\n        if (rewatchOnRawEvents.includes(_event)) {\n          watcher.close()\n\n          listener()\n          this.createFileWatcher(patterns, events, listener, watcherCreatedCallback)\n        }\n      })\n    }\n\n    if (typeof watcherCreatedCallback === 'function') {\n      watcherCreatedCallback(watcher)\n    }\n  }\n\n  assignWatcher (key) {\n    return (watcher) => {\n      if (this.watchers[key]) {\n        this.watchers[key].close()\n      }\n      this.watchers[key] = watcher\n    }\n  }\n\n  watchClient () {\n    let patterns = [\n      r(this.options.srcDir, this.options.dir.layouts),\n      r(this.options.srcDir, this.options.dir.middleware)\n    ]\n\n    if (this.options.store) {\n      patterns.push(r(this.options.srcDir, this.options.dir.store))\n    }\n\n    if (this._nuxtPages && !this._defaultPage) {\n      patterns.push(r(this.options.srcDir, this.options.dir.pages))\n    }\n\n    patterns = patterns.map((path, ...args) => upath.normalizeSafe(this.globPathWithExtensions(path), ...args))\n\n    const refreshFiles = debounce(() => this.generateRoutesAndFiles(), 200)\n\n    // Watch for src Files\n    this.createFileWatcher(patterns, ['add', 'unlink'], refreshFiles, this.assignWatcher('files'))\n\n    // Watch for custom provided files\n    const customPatterns = uniq([\n      ...this.options.build.watch,\n      ...Object.values(omit(this.options.build.styleResources, ['options']))\n    ]).map(upath.normalizeSafe)\n\n    if (customPatterns.length === 0) {\n      return\n    }\n\n    this.createFileWatcher(customPatterns, ['change'], refreshFiles, this.assignWatcher('custom'))\n\n    // Watch for app/ files\n    this.createFileWatcher([r(this.options.srcDir, this.options.dir.app)], ['add', 'change', 'unlink'], refreshFiles, this.assignWatcher('app'))\n  }\n\n  serverMiddlewareHMR () {\n    // Check nuxt.server dependency\n    if (!this.nuxt.server) {\n      return\n    }\n\n    // Get registered server middleware with path\n    const entries = this.nuxt.server.serverMiddlewarePaths()\n\n    // Resolve dependency tree\n    const deps = new Set()\n    const dep2Entry = {}\n\n    for (const entry of entries) {\n      for (const dep of scanRequireTree(entry)) {\n        deps.add(dep)\n        if (!dep2Entry[dep]) {\n          dep2Entry[dep] = new Set()\n        }\n        dep2Entry[dep].add(entry)\n      }\n    }\n\n    // Create watcher\n    this.createFileWatcher(\n      Array.from(deps),\n      ['all'],\n      debounce((event, fileName) => {\n        if (!dep2Entry[fileName]) {\n          return // #7097\n        }\n        for (const entry of dep2Entry[fileName]) {\n          // Reload entry\n          let newItem\n          try {\n            newItem = this.nuxt.server.replaceMiddleware(entry, entry)\n          } catch (error) {\n            consola.error(error)\n            consola.error(`[HMR Error]: ${error}`)\n          }\n\n          if (!newItem) {\n            // Full reload if HMR failed\n            return this.nuxt.callHook('watch:restart', { event, path: fileName })\n          }\n\n          // Log\n          consola.info(`[HMR] ${chalk.cyan(newItem.route || '/')} (${chalk.grey(fileName)})`)\n        }\n        // Tree may be changed so recreate watcher\n        this.serverMiddlewareHMR()\n      }, 200),\n      this.assignWatcher('serverMiddleware')\n    )\n  }\n\n  watchRestart () {\n    const nuxtRestartWatch = [\n      // Custom watchers\n      ...this.options.watch\n    ].map(this.nuxt.resolver.resolveAlias)\n\n    if (this.ignore.ignoreFile) {\n      nuxtRestartWatch.push(this.ignore.ignoreFile)\n    }\n\n    if (this.options._envConfig && this.options._envConfig.dotenv) {\n      nuxtRestartWatch.push(this.options._envConfig.dotenv)\n    }\n\n    // If default page displayed, watch for first page creation\n    if (this._nuxtPages && this._defaultPage) {\n      nuxtRestartWatch.push(path.join(this.options.srcDir, this.options.dir.pages))\n    }\n    // If store not activated, watch for a file in the directory\n    if (!this.options.store) {\n      nuxtRestartWatch.push(path.join(this.options.srcDir, this.options.dir.store))\n    }\n\n    this.createFileWatcher(\n      nuxtRestartWatch,\n      ['all'],\n      async (event, fileName) => {\n        if (['add', 'change', 'unlink'].includes(event) === false) {\n          return\n        }\n        await this.nuxt.callHook('watch:fileChanged', this, fileName) // Legacy\n        await this.nuxt.callHook('watch:restart', { event, path: fileName })\n      },\n      this.assignWatcher('restart')\n    )\n  }\n\n  unwatch () {\n    for (const watcher in this.watchers) {\n      this.watchers[watcher].close()\n    }\n  }\n\n  async close () {\n    if (this.__closed) {\n      return\n    }\n    this.__closed = true\n\n    // Unwatch\n    this.unwatch()\n\n    // Close bundleBuilder\n    if (typeof this.bundleBuilder.close === 'function') {\n      await this.bundleBuilder.close()\n    }\n  }\n}\n\nconst STATUS = {\n  INITIAL: 1,\n  BUILD_DONE: 2,\n  BUILDING: 3\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/builder/src/builder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "glob",
    "memberof": "packages/builder/src/builder.js",
    "static": true,
    "longname": "packages/builder/src/builder.js~glob",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/builder/src/builder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "Builder",
    "memberof": "packages/builder/src/builder.js",
    "static": true,
    "longname": "packages/builder/src/builder.js~Builder",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/builder/src/builder.js",
    "importStyle": "Builder",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 62,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "bundleBuilder",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "nuxt",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#nuxt",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "plugins",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#plugins",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "options",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#options",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "globals",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#globals",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "watchers",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#watchers",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "{\"files\": *, \"custom\": *, \"restart\": *}"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "supportedExtensions",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#supportedExtensions",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "relativeToBuild",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#relativeToBuild",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "_buildStatus",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#_buildStatus",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "template",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#template",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "bundleBuilder",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#bundleBuilder",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "ignore",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#ignore",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getBundleBuilder",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#getBundleBuilder",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "BundleBuilder",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "forGenerate",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#forGenerate",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "params": [],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "build",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#build",
    "access": "public",
    "description": "",
    "lineNumber": 106,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "validatePages",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#validatePages",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "_nuxtPages",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#_nuxtPages",
    "access": "private",
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "_defaultPage",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#_defaultPage",
    "access": "private",
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "globPathWithExtensions",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#globPathWithExtensions",
    "access": "public",
    "description": "",
    "lineNumber": 199,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "createTemplateContext",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#createTemplateContext",
    "access": "public",
    "description": "",
    "lineNumber": 203,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "generateRoutesAndFiles",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#generateRoutesAndFiles",
    "access": "public",
    "description": "",
    "lineNumber": 207,
    "params": [],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "normalizePlugins",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#normalizePlugins",
    "access": "public",
    "description": "",
    "lineNumber": 232,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "addOptionalTemplates",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#addOptionalTemplates",
    "access": "public",
    "description": "",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateContext",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "resolveFiles",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveFiles",
    "access": "public",
    "description": "",
    "lineNumber": 291,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "cwd",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "resolveRelative",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveRelative",
    "access": "public",
    "description": "",
    "lineNumber": 298,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "resolveLayouts",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveLayouts",
    "access": "public",
    "description": "",
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "resolveRoutes",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveRoutes",
    "access": "public",
    "description": "",
    "lineNumber": 341,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "routes",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#routes",
    "access": "public",
    "description": null,
    "lineNumber": 396,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "resolveStore",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveStore",
    "access": "public",
    "description": "",
    "lineNumber": 399,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "resolveMiddleware",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveMiddleware",
    "access": "public",
    "description": "",
    "lineNumber": 420,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "resolveCustomTemplates",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveCustomTemplates",
    "access": "public",
    "description": "",
    "lineNumber": 436,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateContext",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "resolveLoadingIndicator",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolveLoadingIndicator",
    "access": "public",
    "description": "",
    "lineNumber": 482,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "compileTemplates",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#compileTemplates",
    "access": "public",
    "description": "",
    "lineNumber": 522,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateContext",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "resolvePlugins",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#resolvePlugins",
    "access": "public",
    "description": "",
    "lineNumber": 572,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "createFileWatcher",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#createFileWatcher",
    "access": "public",
    "description": null,
    "lineNumber": 604,
    "undocument": true,
    "params": [
      {
        "name": "patterns",
        "types": [
          "*"
        ]
      },
      {
        "name": "events",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      },
      {
        "name": "watcherCreatedCallback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "assignWatcher",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#assignWatcher",
    "access": "public",
    "description": "",
    "lineNumber": 630,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "watchClient",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#watchClient",
    "access": "public",
    "description": "",
    "lineNumber": 639,
    "params": [],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "serverMiddlewareHMR",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#serverMiddlewareHMR",
    "access": "public",
    "description": "",
    "lineNumber": 676,
    "params": [],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "watchRestart",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#watchRestart",
    "access": "public",
    "description": "",
    "lineNumber": 732,
    "params": [],
    "return": null
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "unwatch",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#unwatch",
    "access": "public",
    "description": "",
    "lineNumber": 769,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "close",
    "memberof": "packages/builder/src/builder.js~Builder",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#close",
    "access": "public",
    "description": "",
    "lineNumber": 775,
    "params": [],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "__closed",
    "memberof": "packages/builder/src/builder.js~Builder",
    "static": false,
    "longname": "packages/builder/src/builder.js~Builder#__closed",
    "access": "private",
    "description": null,
    "lineNumber": 779,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "STATUS",
    "memberof": "packages/builder/src/builder.js",
    "static": true,
    "longname": "packages/builder/src/builder.js~STATUS",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/builder/src/builder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 791,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{\"INITIAL\": number, \"BUILD_DONE\": number, \"BUILDING\": number}"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "packages/builder/src/context/build.js",
    "content": "export default class BuildContext {\n  constructor (builder) {\n    this._builder = builder\n    this.nuxt = builder.nuxt\n    this.options = builder.nuxt.options\n    this.target = builder.nuxt.options.target\n  }\n\n  get buildOptions () {\n    return this.options.build\n  }\n\n  get plugins () {\n    return this._builder.plugins\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/builder/src/context/build.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "BuildContext",
    "memberof": "packages/builder/src/context/build.js",
    "static": true,
    "longname": "packages/builder/src/context/build.js~BuildContext",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/builder/src/context/build.js",
    "importStyle": "BuildContext",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/builder/src/context/build.js~BuildContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/context/build.js~BuildContext#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 2,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "builder",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "_builder",
    "memberof": "packages/builder/src/context/build.js~BuildContext",
    "static": false,
    "longname": "packages/builder/src/context/build.js~BuildContext#_builder",
    "access": "private",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "nuxt",
    "memberof": "packages/builder/src/context/build.js~BuildContext",
    "static": false,
    "longname": "packages/builder/src/context/build.js~BuildContext#nuxt",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "options",
    "memberof": "packages/builder/src/context/build.js~BuildContext",
    "static": false,
    "longname": "packages/builder/src/context/build.js~BuildContext#options",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "target",
    "memberof": "packages/builder/src/context/build.js~BuildContext",
    "static": false,
    "longname": "packages/builder/src/context/build.js~BuildContext#target",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "get",
    "name": "buildOptions",
    "memberof": "packages/builder/src/context/build.js~BuildContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/context/build.js~BuildContext#buildOptions",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "get",
    "name": "plugins",
    "memberof": "packages/builder/src/context/build.js~BuildContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/context/build.js~BuildContext#plugins",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "packages/builder/src/context/template.js",
    "content": "import hash from 'hash-sum'\nimport consola from 'consola'\nimport { uniqBy } from 'lodash'\nimport serialize from 'serialize-javascript'\n\nimport devalue from '@nuxt/devalue'\nimport { r, wp, wChunk, serializeFunction, isFullStatic, requireModule } from '@nuxt/utils'\n\nexport default class TemplateContext {\n  constructor (builder, options) {\n    this.templateFiles = Array.from(builder.template.files)\n    this.templateVars = {\n      nuxtOptions: options,\n      features: options.features,\n      extensions: options.extensions\n        .map(ext => ext.replace(/^\\./, ''))\n        .join('|'),\n      messages: options.messages,\n      splitChunks: options.build.splitChunks,\n      uniqBy,\n      isDev: options.dev,\n      isTest: options.test,\n      isFullStatic: isFullStatic(options),\n      debug: options.debug,\n      buildIndicator: options.dev && options.build.indicator,\n      vue: { config: options.vue.config },\n      fetch: options.fetch,\n      mode: options.mode,\n      router: options.router,\n      env: options.env,\n      head: options.head,\n      store: options.features.store ? options.store : false,\n      globalName: options.globalName,\n      globals: builder.globals,\n      css: options.css,\n      plugins: builder.plugins,\n      appPath: './App.js',\n      layouts: Object.assign({}, options.layouts),\n      loading:\n        typeof options.loading === 'string'\n          ? builder.relativeToBuild(options.srcDir, options.loading)\n          : options.loading,\n      pageTransition: options.pageTransition,\n      layoutTransition: options.layoutTransition,\n      rootDir: options.rootDir,\n      srcDir: options.srcDir,\n      dir: options.dir,\n      components: {\n        ErrorPage: options.ErrorPage\n          ? builder.relativeToBuild(options.ErrorPage)\n          : null\n      }\n    }\n  }\n\n  get templateOptions () {\n    let lodash = null\n\n    return {\n      imports: {\n        serialize,\n        serializeFunction,\n        devalue,\n        hash,\n        r,\n        wp,\n        wChunk,\n        // Legacy support: https://github.com/nuxt/nuxt.js/issues/4350\n        _: new Proxy({}, {\n          get (target, prop) {\n            if (!lodash) {\n              consola.warn('Avoid using _ inside templates')\n              lodash = requireModule('lodash')\n            }\n            return lodash[prop]\n          }\n        })\n      },\n      interpolate: /<%=([\\s\\S]+?)%>/g\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/builder/src/context/template.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "class",
    "name": "TemplateContext",
    "memberof": "packages/builder/src/context/template.js",
    "static": true,
    "longname": "packages/builder/src/context/template.js~TemplateContext",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/builder/src/context/template.js",
    "importStyle": "TemplateContext",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 120,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/builder/src/context/template.js~TemplateContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/context/template.js~TemplateContext#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "builder",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "templateFiles",
    "memberof": "packages/builder/src/context/template.js~TemplateContext",
    "static": false,
    "longname": "packages/builder/src/context/template.js~TemplateContext#templateFiles",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "templateVars",
    "memberof": "packages/builder/src/context/template.js~TemplateContext",
    "static": false,
    "longname": "packages/builder/src/context/template.js~TemplateContext#templateVars",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"nuxtOptions\": *, \"features\": *, \"extensions\": *, \"messages\": *, \"splitChunks\": *, \"uniqBy\": *, \"isDev\": *, \"isTest\": *, \"isFullStatic\": *, \"debug\": *, \"buildIndicator\": *, \"vue\": *, \"fetch\": *, \"mode\": *, \"router\": *, \"env\": *, \"head\": *, \"store\": *, \"globalName\": *, \"globals\": *, \"css\": *, \"plugins\": *, \"appPath\": string, \"layouts\": *, \"loading\": *, \"pageTransition\": *, \"layoutTransition\": *, \"rootDir\": *, \"srcDir\": *, \"dir\": *, \"components\": *}"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "get",
    "name": "templateOptions",
    "memberof": "packages/builder/src/context/template.js~TemplateContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/context/template.js~TemplateContext#templateOptions",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "packages/builder/src/ignore.js",
    "content": "import path from 'path'\nimport fs from 'fs-extra'\nimport ignore from 'ignore'\n\nexport default class Ignore {\n  constructor (options) {\n    this.rootDir = options.rootDir\n    this.ignoreOptions = options.ignoreOptions\n    this.ignoreArray = options.ignoreArray\n    this.addIgnoresRules()\n  }\n\n  static get IGNORE_FILENAME () {\n    return '.nuxtignore'\n  }\n\n  findIgnoreFile () {\n    if (!this.ignoreFile) {\n      const ignoreFile = path.resolve(this.rootDir, Ignore.IGNORE_FILENAME)\n      if (fs.existsSync(ignoreFile) && fs.statSync(ignoreFile).isFile()) {\n        this.ignoreFile = ignoreFile\n        this.ignore = ignore(this.ignoreOptions)\n      }\n    }\n    return this.ignoreFile\n  }\n\n  readIgnoreFile () {\n    if (this.findIgnoreFile()) {\n      return fs.readFileSync(this.ignoreFile, 'utf8')\n    }\n  }\n\n  addIgnoresRules () {\n    const content = this.readIgnoreFile()\n    if (content) {\n      this.ignore.add(content)\n    }\n    if (this.ignoreArray && this.ignoreArray.length > 0) {\n      if (!this.ignore) {\n        this.ignore = ignore(this.ignoreOptions)\n      }\n      this.ignore.add(this.ignoreArray)\n    }\n  }\n\n  filter (paths) {\n    if (this.ignore) {\n      return this.ignore.filter([].concat(paths || []))\n    }\n    return paths\n  }\n\n  reload () {\n    delete this.ignore\n    delete this.ignoreFile\n    this.addIgnoresRules()\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/builder/src/ignore.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "Ignore",
    "memberof": "packages/builder/src/ignore.js",
    "static": true,
    "longname": "packages/builder/src/ignore.js~Ignore",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/builder/src/ignore.js",
    "importStyle": "Ignore",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 126,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "rootDir",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#rootDir",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "ignoreOptions",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#ignoreOptions",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "ignoreArray",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#ignoreArray",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "IGNORE_FILENAME",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/builder/src/ignore.js~Ignore.IGNORE_FILENAME",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "findIgnoreFile",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#findIgnoreFile",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "ignoreFile",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#ignoreFile",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "ignore",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#ignore",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "readIgnoreFile",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#readIgnoreFile",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "addIgnoresRules",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#addIgnoresRules",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "filter",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#filter",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "reload",
    "memberof": "packages/builder/src/ignore.js~Ignore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/builder/src/ignore.js~Ignore#reload",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "params": [],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "packages/builder/src/index.js",
    "content": "import Builder from './builder'\nexport { default as Builder } from './builder'\n\nexport function getBuilder (nuxt) {\n  return new Builder(nuxt)\n}\n\nexport function build (nuxt) {\n  return getBuilder(nuxt).build()\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/builder/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "getBuilder",
    "memberof": "packages/builder/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/builder/src/index.js~getBuilder",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/builder/src/index.js",
    "importStyle": "{getBuilder}",
    "description": "",
    "lineNumber": 4,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "build",
    "memberof": "packages/builder/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/builder/src/index.js~build",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/builder/src/index.js",
    "importStyle": "{build}",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "packages/builder/test/__utils__/index.js",
    "content": "export const createNuxt = () => ({\n  options: {\n    globalName: 'global_name',\n    globals: [],\n    build: {\n      watch: []\n    },\n    render: {\n      ssr: true\n    },\n    router: {},\n    dir: {\n      app: 'app'\n    }\n  },\n  ready: jest.fn(),\n  hook: jest.fn(),\n  callHook: jest.fn(),\n  resolver: {\n    requireModule: jest.fn(),\n    resolveAlias: jest.fn(src => `resolveAlias(${src})`),\n    resolvePath: jest.fn(src => `resolvePath(${src})`)\n  }\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/builder/test/__utils__/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "createNuxt",
    "memberof": "packages/builder/test/__utils__/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/builder/test/__utils__/index.js~createNuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/builder/test/__utils__/index.js",
    "importStyle": "{createNuxt}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "packages/cli/bin/nuxt-cli.js",
    "content": "#!/usr/bin/env node\n\nrequire('../dist/cli.js').run()\n  .catch((error) => {\n    require('consola').fatal(error)\n    require('exit')(2)\n  })\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/bin/nuxt-cli.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "packages/cli/package.js",
    "content": "export default {\n  build: true,\n  ignoreUnused: ['crc'],\n  externals: ['crc/lib/crc32']\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "packages/cli/src/command.js",
    "content": "\nimport path from 'path'\nimport consola from 'consola'\nimport minimist from 'minimist'\nimport Hookable from 'hable'\nimport { name, version } from '../package.json'\nimport { forceExit } from './utils'\nimport { loadNuxtConfig } from './utils/config'\nimport { indent, foldLines, colorize } from './utils/formatting'\nimport { startSpaces, optionSpaces, forceExitTimeout } from './utils/constants'\nimport * as imports from './imports'\n\nexport default class NuxtCommand extends Hookable {\n  constructor (cmd = { name: '', usage: '', description: '' }, argv = process.argv.slice(2), hooks = {}) {\n    super(consola)\n    this.addHooks(hooks)\n\n    if (!cmd.options) {\n      cmd.options = {}\n    }\n    this.cmd = cmd\n\n    this._argv = Array.from(argv)\n    this._parsedArgv = null // Lazy evaluate\n  }\n\n  static run (cmd, argv, hooks) {\n    return NuxtCommand.from(cmd, argv, hooks).run()\n  }\n\n  static from (cmd, argv, hooks) {\n    if (cmd instanceof NuxtCommand) {\n      return cmd\n    }\n    return new NuxtCommand(cmd, argv, hooks)\n  }\n\n  async run () {\n    await this.callHook('run:before', {\n      argv: this._argv,\n      cmd: this.cmd,\n      rootDir: path.resolve(this.argv._[0] || '.')\n    })\n\n    if (this.argv.help) {\n      this.showHelp()\n      return\n    }\n\n    if (this.argv.version) {\n      this.showVersion()\n      return\n    }\n\n    if (typeof this.cmd.run !== 'function') {\n      throw new TypeError('Invalid command! Commands should at least implement run() function.')\n    }\n\n    let cmdError\n\n    try {\n      await this.cmd.run(this)\n    } catch (e) {\n      cmdError = e\n    }\n\n    if (this.argv.lock) {\n      await this.releaseLock()\n    }\n\n    if (this.argv['force-exit']) {\n      const forceExitByUser = this.isUserSuppliedArg('force-exit')\n      if (cmdError) {\n        consola.fatal(cmdError)\n      }\n      forceExit(this.cmd.name, forceExitByUser ? false : forceExitTimeout)\n      if (forceExitByUser) {\n        return\n      }\n    }\n\n    if (cmdError) {\n      throw cmdError\n    }\n  }\n\n  showVersion () {\n    process.stdout.write(`${name} v${version}\\n`)\n  }\n\n  showHelp () {\n    process.stdout.write(this._getHelp())\n  }\n\n  get argv () {\n    if (!this._parsedArgv) {\n      const minimistOptions = this._getMinimistOptions()\n      this._parsedArgv = minimist(this._argv, minimistOptions)\n    }\n    return this._parsedArgv\n  }\n\n  async getNuxtConfig (extraOptions = {}) {\n    // Flag to indicate nuxt is running with CLI (not programmatic)\n    extraOptions._cli = true\n\n    const context = {\n      command: this.cmd.name,\n      dev: !!extraOptions.dev\n    }\n\n    const config = await loadNuxtConfig(this.argv, context)\n    const options = Object.assign(config, extraOptions)\n\n    for (const name of Object.keys(this.cmd.options)) {\n      this.cmd.options[name].prepare && this.cmd.options[name].prepare(this, options, this.argv)\n    }\n\n    await this.callHook('config', options)\n\n    return options\n  }\n\n  async getNuxt (options) {\n    const { Nuxt } = await imports.core()\n\n    const nuxt = new Nuxt(options)\n    await nuxt.ready()\n\n    return nuxt\n  }\n\n  async getBuilder (nuxt) {\n    const { Builder } = await imports.builder()\n    const { BundleBuilder } = await imports.webpack()\n    return new Builder(nuxt, BundleBuilder)\n  }\n\n  async getGenerator (nuxt) {\n    const { Generator } = await imports.generator()\n    const builder = await this.getBuilder(nuxt)\n    return new Generator(nuxt, builder)\n  }\n\n  async setLock (lockRelease) {\n    if (lockRelease) {\n      if (this._lockRelease) {\n        consola.warn(`A previous unreleased lock was found, this shouldn't happen and is probably an error in 'nuxt ${this.cmd.name}' command. The lock will be removed but be aware of potential strange results`)\n\n        await this.releaseLock()\n        this._lockRelease = lockRelease\n      } else {\n        this._lockRelease = lockRelease\n      }\n    }\n  }\n\n  async releaseLock () {\n    if (this._lockRelease) {\n      await this._lockRelease()\n      this._lockRelease = undefined\n    }\n  }\n\n  isUserSuppliedArg (option) {\n    return this._argv.includes(`--${option}`) || this._argv.includes(`--no-${option}`)\n  }\n\n  _getDefaultOptionValue (option) {\n    return typeof option.default === 'function' ? option.default(this.cmd) : option.default\n  }\n\n  _getMinimistOptions () {\n    const minimistOptions = {\n      alias: {},\n      boolean: [],\n      string: [],\n      default: {}\n    }\n\n    for (const name of Object.keys(this.cmd.options)) {\n      const option = this.cmd.options[name]\n\n      if (option.alias) {\n        minimistOptions.alias[option.alias] = name\n      }\n      if (option.type) {\n        minimistOptions[option.type].push(option.alias || name)\n      }\n      if (option.default) {\n        minimistOptions.default[option.alias || name] = this._getDefaultOptionValue(option)\n      }\n    }\n\n    return minimistOptions\n  }\n\n  _getHelp () {\n    const options = []\n    let maxOptionLength = 0\n\n    for (const name in this.cmd.options) {\n      const option = this.cmd.options[name]\n\n      let optionHelp = '--'\n      optionHelp += option.type === 'boolean' && this._getDefaultOptionValue(option) ? 'no-' : ''\n      optionHelp += name\n      if (option.alias) {\n        optionHelp += `, -${option.alias}`\n      }\n\n      maxOptionLength = Math.max(maxOptionLength, optionHelp.length)\n      options.push([optionHelp, option.description])\n    }\n\n    const _opts = options.map(([option, description]) => {\n      const i = indent(maxOptionLength + optionSpaces - option.length)\n      return foldLines(\n        option + i + description,\n        startSpaces + maxOptionLength + optionSpaces * 2,\n        startSpaces + optionSpaces\n      )\n    }).join('\\n')\n\n    const usage = foldLines(`Usage: nuxt ${this.cmd.usage} [options]`, startSpaces)\n    const description = foldLines(this.cmd.description, startSpaces)\n    const opts = foldLines('Options:', startSpaces) + '\\n\\n' + _opts\n\n    let helpText = colorize(`${usage}\\n\\n`)\n    if (this.cmd.description) {\n      helpText += colorize(`${description}\\n\\n`)\n    }\n    if (options.length) {\n      helpText += colorize(`${opts}\\n\\n`)\n    }\n\n    return helpText\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "class",
    "name": "NuxtCommand",
    "memberof": "packages/cli/src/command.js",
    "static": true,
    "longname": "packages/cli/src/command.js~NuxtCommand",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/command.js",
    "importStyle": "NuxtCommand",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "hable~Hookable"
    ]
  },
  {
    "__docId__": 148,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{[object Object],[object Object],[object Object]}",
        "defaultRaw": "{[object Object],[object Object],[object Object]}",
        "name": "cmd",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "argv",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "hooks",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "cmd",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#cmd",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "_argv",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#_argv",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "_parsedArgv",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#_parsedArgv",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "run",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/command.js~NuxtCommand.run",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "hooks",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "from",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/command.js~NuxtCommand.from",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "hooks",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "run",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#run",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "showVersion",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#showVersion",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "params": [],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "showHelp",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#showHelp",
    "access": "public",
    "description": "",
    "lineNumber": 91,
    "params": [],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "get",
    "name": "argv",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#argv",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "getNuxtConfig",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#getNuxtConfig",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "extraOptions",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "getNuxt",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#getNuxt",
    "access": "public",
    "description": "",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "getBuilder",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#getBuilder",
    "access": "public",
    "description": "",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "getGenerator",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#getGenerator",
    "access": "public",
    "description": "",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "setLock",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#setLock",
    "access": "public",
    "description": "",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "lockRelease",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "_lockRelease",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#_lockRelease",
    "access": "private",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "releaseLock",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#releaseLock",
    "access": "public",
    "description": "",
    "lineNumber": 158,
    "params": [],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "isUserSuppliedArg",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#isUserSuppliedArg",
    "access": "public",
    "description": "",
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "option",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "_getDefaultOptionValue",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#_getDefaultOptionValue",
    "access": "private",
    "description": "",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "option",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "_getMinimistOptions",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#_getMinimistOptions",
    "access": "private",
    "description": "",
    "lineNumber": 173,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "_getHelp",
    "memberof": "packages/cli/src/command.js~NuxtCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/cli/src/command.js~NuxtCommand#_getHelp",
    "access": "private",
    "description": "",
    "lineNumber": 198,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "packages/cli/src/commands/build.js",
    "content": "import consola from 'consola'\nimport { MODES, TARGETS } from '@nuxt/utils'\nimport { common, locking } from '../options'\nimport { createLock } from '../utils'\n\nexport default {\n  name: 'build',\n  description: 'Compiles the application for production deployment',\n  usage: 'build <dir>',\n  options: {\n    ...common,\n    ...locking,\n    analyze: {\n      alias: 'a',\n      type: 'boolean',\n      description: 'Launch webpack-bundle-analyzer to optimize your bundles',\n      prepare (cmd, options, argv) {\n        // Analyze option\n        options.build = options.build || {}\n        if (argv.analyze && typeof options.build.analyze !== 'object') {\n          options.build.analyze = true\n        }\n      }\n    },\n    devtools: {\n      type: 'boolean',\n      default: false,\n      description: 'Enable Vue devtools',\n      prepare (cmd, options, argv) {\n        options.vue = options.vue || {}\n        options.vue.config = options.vue.config || {}\n        if (argv.devtools) {\n          options.vue.config.devtools = true\n        }\n      }\n    },\n    generate: {\n      type: 'boolean',\n      default: true,\n      description: 'Don\\'t generate static version for SPA mode (useful for nuxt start)'\n    },\n    quiet: {\n      alias: 'q',\n      type: 'boolean',\n      description: 'Disable output except for errors',\n      prepare (cmd, options, argv) {\n        // Silence output when using --quiet\n        options.build = options.build || {}\n        if (argv.quiet) {\n          options.build.quiet = Boolean(argv.quiet)\n        }\n      }\n    },\n    standalone: {\n      type: 'boolean',\n      default: false,\n      description: 'Bundle all server dependencies (useful for nuxt-start)',\n      prepare (cmd, options, argv) {\n        if (argv.standalone) {\n          options.build.standalone = true\n        }\n      }\n    }\n  },\n  async run (cmd) {\n    const config = await cmd.getNuxtConfig({ dev: false, server: false, _build: true })\n    config.server = (config.mode === MODES.spa || config.ssr === false) && cmd.argv.generate !== false\n    const nuxt = await cmd.getNuxt(config)\n\n    if (cmd.argv.lock) {\n      await cmd.setLock(await createLock({\n        id: 'build',\n        dir: nuxt.options.buildDir,\n        root: config.rootDir\n      }))\n    }\n\n    // TODO: remove if in Nuxt 3\n    if (nuxt.options.mode === MODES.spa && nuxt.options.target === TARGETS.server && cmd.argv.generate !== false) {\n      // Build + Generate for static deployment\n      const generator = await cmd.getGenerator(nuxt)\n      await generator.generate({ build: true })\n    } else {\n      // Build only\n      const builder = await cmd.getBuilder(nuxt)\n      await builder.build()\n\n      const nextCommand = nuxt.options.target === TARGETS.static ? 'nuxt generate' : 'nuxt start'\n      consola.info('Ready to run `' + (nextCommand) + '`')\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/build.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "packages/cli/src/commands/dev.js",
    "content": "import consola from 'consola'\nimport chalk from 'chalk'\nimport opener from 'opener'\nimport { common, server } from '../options'\nimport { eventsMapping, formatPath } from '../utils'\nimport { showBanner } from '../utils/banner'\nimport { showMemoryUsage } from '../utils/memory'\n\nexport default {\n  name: 'dev',\n  description: 'Start the application in development mode (e.g. hot-code reloading, error reporting)',\n  usage: 'dev <dir>',\n  options: {\n    ...common,\n    ...server,\n    open: {\n      alias: 'o',\n      type: 'boolean',\n      description: 'Opens the server listeners url in the default browser'\n    }\n  },\n\n  async run (cmd) {\n    const { argv } = cmd\n\n    await this.startDev(cmd, argv, argv.open)\n  },\n\n  async startDev (cmd, argv) {\n    let nuxt\n    try {\n      nuxt = await this._listenDev(cmd, argv)\n    } catch (error) {\n      consola.fatal(error)\n      return\n    }\n\n    try {\n      await this._buildDev(cmd, argv, nuxt)\n    } catch (error) {\n      await nuxt.callHook('cli:buildError', error)\n      consola.error(error)\n    }\n\n    return nuxt\n  },\n\n  async _listenDev (cmd, argv) {\n    const config = await cmd.getNuxtConfig({ dev: true, _build: true })\n    const nuxt = await cmd.getNuxt(config)\n\n    // Setup hooks\n    nuxt.hook('watch:restart', payload => this.onWatchRestart(payload, { nuxt, cmd, argv }))\n    nuxt.hook('bundler:change', changedFileName => this.onBundlerChange(changedFileName))\n\n    // Wait for nuxt to be ready\n    await nuxt.ready()\n\n    // Start listening\n    await nuxt.server.listen()\n\n    // Show banner when listening\n    showBanner(nuxt, false)\n\n    // Opens the server listeners url in the default browser (only once)\n    if (argv.open) {\n      argv.open = false\n      const openerPromises = nuxt.server.listeners.map(listener => opener(listener.url))\n      await Promise.all(openerPromises)\n    }\n\n    // Return instance\n    return nuxt\n  },\n\n  async _buildDev (cmd, argv, nuxt) {\n    // Create builder instance\n    const builder = await cmd.getBuilder(nuxt)\n\n    // Start Build\n    await builder.build()\n\n    // Print memory usage\n    showMemoryUsage()\n\n    // Display server urls after the build\n    for (const listener of nuxt.server.listeners) {\n      consola.info(chalk.bold('Listening on: ') + listener.url)\n    }\n\n    // Return instance\n    return nuxt\n  },\n\n  logChanged ({ event, path }) {\n    const { icon, color, action } = eventsMapping[event] || eventsMapping.change\n\n    consola.log({\n      type: event,\n      icon: chalk[color].bold(icon),\n      message: `${action} ${chalk.cyan(formatPath(path))}`\n    })\n  },\n\n  async onWatchRestart ({ event, path }, { nuxt, cmd, argv }) {\n    this.logChanged({ event, path })\n\n    await nuxt.close()\n\n    await this.startDev(cmd, argv)\n  },\n\n  onBundlerChange (path) {\n    this.logChanged({ event: 'change', path })\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/dev.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "packages/cli/src/commands/export.js",
    "content": "import consola from 'consola'\nimport generate from './generate'\n\nexport default {\n  ...generate,\n  run (...args) {\n    consola.warn('`nuxt export` has been deprecated! Please use `nuxt generate`.')\n    return generate.run.call(this, ...args)\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/export.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "file",
    "name": "packages/cli/src/commands/generate.js",
    "content": "import { TARGETS } from '@nuxt/utils'\nimport consola from 'consola'\nimport { common, locking } from '../options'\nimport { normalizeArg, createLock } from '../utils'\nimport { ensureBuild, generate } from '../utils/generate'\n\nexport default {\n  name: 'generate',\n  description: 'Generate a static web application (server-rendered)',\n  usage: 'generate <dir>',\n  options: {\n    ...common,\n    ...locking,\n    build: {\n      type: 'boolean',\n      default: true,\n      description: 'Only generate pages for dynamic routes, used for incremental builds. Generate has to be run once without this option before using it'\n    },\n    devtools: {\n      type: 'boolean',\n      default: false,\n      description: 'Enable Vue devtools',\n      prepare (cmd, options, argv) {\n        options.vue = options.vue || {}\n        options.vue.config = options.vue.config || {}\n        if (argv.devtools) {\n          options.vue.config.devtools = true\n        }\n      }\n    },\n    quiet: {\n      alias: 'q',\n      type: 'boolean',\n      description: 'Disable output except for errors',\n      prepare (cmd, options, argv) {\n        // Silence output when using --quiet\n        options.build = options.build || {}\n        if (argv.quiet) {\n          options.build.quiet = true\n        }\n      }\n    },\n    modern: {\n      ...common.modern,\n      description: 'Generate app in modern build (modern mode can be only client)',\n      prepare (cmd, options, argv) {\n        if (normalizeArg(argv.modern)) {\n          options.modern = 'client'\n        }\n      }\n    },\n    'force-build': {\n      type: 'boolean',\n      default: false,\n      description: 'Force to build the application with webpack'\n    },\n    'fail-on-error': {\n      type: 'boolean',\n      default: false,\n      description: 'Exit with non-zero status code if there are errors when generating pages'\n    }\n  },\n  async run (cmd) {\n    const config = await cmd.getNuxtConfig({ dev: false })\n\n    // Disable analyze if set by the nuxt config\n    config.build = config.build || {}\n    config.build.analyze = false\n\n    // Full static\n    if (config.target === TARGETS.static) {\n      await ensureBuild(cmd)\n      await generate(cmd)\n      return\n    }\n\n    // Forcing static target anyway\n    config.target = TARGETS.static\n    consola.warn(`When using \\`nuxt generate\\`, you should set \\`target: 'static'\\` in your \\`nuxt.config\\`\\n       👉 Learn more about it on https://go.nuxtjs.dev/static-target`)\n\n    // Set flag to keep the prerendering behaviour\n    config._legacyGenerate = true\n    if (config.build) {\n      // https://github.com/nuxt/nuxt.js/issues/7390\n      config.build.parallel = false\n    }\n\n    const nuxt = await cmd.getNuxt(config)\n\n    if (cmd.argv.lock) {\n      await cmd.setLock(await createLock({\n        id: 'build',\n        dir: nuxt.options.buildDir,\n        root: config.rootDir\n      }))\n\n      nuxt.hook('build:done', async () => {\n        await cmd.releaseLock()\n\n        await cmd.setLock(await createLock({\n          id: 'generate',\n          dir: nuxt.options.generate.dir,\n          root: config.rootDir\n        }))\n      })\n    }\n\n    const generator = await cmd.getGenerator(nuxt)\n    await nuxt.server.listen(0)\n\n    const { errors } = await generator.generate({\n      init: true,\n      build: cmd.argv.build\n    })\n\n    await nuxt.close()\n    if (cmd.argv['fail-on-error'] && errors.length > 0) {\n      throw new Error('Error generating pages, exiting with non-zero code')\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/generate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 176,
    "kind": "file",
    "name": "packages/cli/src/commands/help.js",
    "content": "import consola from 'consola'\nimport getCommand from '../commands'\nimport listCommands from '../list'\nimport { common } from '../options'\nimport NuxtCommand from '../command'\n\nexport default {\n  name: 'help',\n  description: 'Shows help for <command>',\n  usage: 'help <command>',\n  options: {\n    help: common.help,\n    version: common.version\n  },\n  async run (cmd) {\n    const [name] = cmd._argv\n    if (!name) {\n      return listCommands()\n    }\n    const command = await getCommand(name)\n\n    if (!command) {\n      consola.info(`Unknown command: ${name}`)\n      return\n    }\n\n    NuxtCommand.from(command).showHelp()\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/help.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "packages/cli/src/commands/index.js",
    "content": "const commands = {\n  start: () => import('./start'),\n  serve: () => import('./serve'),\n  dev: () => import('./dev'),\n  build: () => import('./build'),\n  generate: () => import('./generate'),\n  export: () => import('./export'),\n  webpack: () => import('./webpack'),\n  help: () => import('./help')\n}\n\nexport default function getCommand (name) {\n  if (!commands[name]) {\n    return Promise.resolve(null)\n  }\n  return commands[name]().then(m => m.default)\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "variable",
    "name": "commands",
    "memberof": "packages/cli/src/commands/index.js",
    "static": true,
    "longname": "packages/cli/src/commands/index.js~commands",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/cli/src/commands/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{\"start\": *, \"serve\": *, \"dev\": *, \"build\": *, \"generate\": *, \"export\": *, \"webpack\": *, \"help\": *}"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "getCommand",
    "memberof": "packages/cli/src/commands/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/commands/index.js~getCommand",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/commands/index.js",
    "importStyle": "getCommand",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "packages/cli/src/commands/serve.js",
    "content": "import consola from 'consola'\nimport start from './start'\n\nexport default {\n  ...start,\n  run (...args) {\n    consola.warn('`nuxt serve` has been deprecated! Please use `nuxt start`.')\n    return start.run.call(this, ...args)\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/serve.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "file",
    "name": "packages/cli/src/commands/start.js",
    "content": "import { TARGETS } from '@nuxt/utils'\nimport { common, server } from '../options'\nimport { showBanner } from '../utils/banner'\nimport { serve } from '../utils/serve'\n\nexport default {\n  name: 'start',\n  description: 'Start the application in production mode (the application should be compiled with `nuxt build` first)',\n  usage: 'start <dir>',\n  options: {\n    ...common,\n    ...server\n  },\n  async run (cmd) {\n    const config = await cmd.getNuxtConfig({ dev: false, _start: true })\n\n    if (config.target === TARGETS.static) {\n      return serve(cmd)\n    }\n\n    const nuxt = await cmd.getNuxt(config)\n\n    // Listen and show ready banner\n    await nuxt.server.listen()\n    showBanner(nuxt)\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/start.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "packages/cli/src/commands/webpack.js",
    "content": "import util from 'util'\nimport consola from 'consola'\nimport { get } from 'lodash'\nimport { common } from '../options'\n\nexport default {\n  name: 'webpack',\n  description: 'Inspect Nuxt webpack config',\n  usage: 'webpack [query...]',\n  options: {\n    ...common,\n    name: {\n      alias: 'n',\n      type: 'string',\n      default: 'client',\n      description: 'Webpack bundle name: server, client, modern'\n    },\n    depth: {\n      alias: 'd',\n      type: 'string',\n      default: 2,\n      description: 'Inspection depth'\n    },\n    colors: {\n      type: 'boolean',\n      default: process.stdout.isTTY,\n      description: 'Output with ANSI colors'\n    },\n    dev: {\n      type: 'boolean',\n      default: false,\n      description: 'Inspect development mode webpack config'\n    }\n  },\n  async run (cmd) {\n    const { name } = cmd.argv\n    const queries = [...cmd.argv._]\n\n    const config = await cmd.getNuxtConfig({ dev: cmd.argv.dev, server: false })\n    const nuxt = await cmd.getNuxt(config)\n    const builder = await cmd.getBuilder(nuxt)\n    const { bundleBuilder } = builder\n    const webpackConfig = bundleBuilder.getWebpackConfig(name)\n\n    let queryError\n    const match = queries.reduce((result, query) => {\n      const m = advancedGet(result, query)\n      if (m === undefined) {\n        queryError = query\n        return result\n      }\n      return m\n    }, webpackConfig)\n\n    const serialized = formatObj(match, {\n      depth: parseInt(cmd.argv.depth),\n      colors: cmd.argv.colors\n    })\n\n    consola.log(serialized + '\\n')\n\n    if (serialized.includes('[Object]' || serialized.includes('[Array'))) {\n      consola.info('You can use `--depth` or add more queries to inspect `[Object]` and `[Array]` fields.')\n    }\n\n    if (queryError) {\n      consola.warn(`No match in webpack config for \\`${queryError}\\``)\n    }\n  }\n}\n\nfunction advancedGet (obj = {}, query = '') {\n  let result = obj\n\n  if (!query || !result) {\n    return result\n  }\n\n  const [l, r] = query.split('=')\n\n  if (!Array.isArray(result)) {\n    return typeof result === 'object' ? get(result, l) : result\n  }\n\n  result = result.filter((i) => {\n    const v = get(i, l)\n\n    if (!v) {\n      return false\n    }\n\n    if (\n      (v === r) ||\n      (typeof v.test === 'function' && v.test(r)) ||\n      (typeof v.match === 'function' && v.match(r)) ||\n      (r && r.match(v))\n    ) {\n      return true\n    }\n\n    return false\n  })\n\n  if (result.length === 1) {\n    return result[0]\n  }\n\n  return result.length ? result : undefined\n}\n\nfunction formatObj (obj, formatOptions) {\n  if (!util.formatWithOptions) {\n    return util.format(obj)\n  }\n  return util.formatWithOptions(formatOptions, obj)\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/commands/webpack.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "advancedGet",
    "memberof": "packages/cli/src/commands/webpack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/commands/webpack.js~advancedGet",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/cli/src/commands/webpack.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "query",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "formatObj",
    "memberof": "packages/cli/src/commands/webpack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/commands/webpack.js~formatObj",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/cli/src/commands/webpack.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "formatOptions",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "file",
    "name": "packages/cli/src/imports.js",
    "content": "import { requireModule } from '@nuxt/utils'\n\nexport const importModule = (id) => {\n  try {\n    return Promise.resolve(requireModule(id))\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      err.message = `Cannot import module '${id}'`\n    }\n    return Promise.reject(err)\n  }\n}\n\nexport const builder = () => importModule('@nuxt/builder')\nexport const webpack = () => importModule('@nuxt/webpack')\nexport const generator = () => importModule('@nuxt/generator')\nexport const core = () => importModule('@nuxt/core')\nexport const server = () => importModule('@nuxt/server')\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/imports.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "importModule",
    "memberof": "packages/cli/src/imports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/imports.js~importModule",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/imports.js",
    "importStyle": "{importModule}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "builder",
    "memberof": "packages/cli/src/imports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/imports.js~builder",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/imports.js",
    "importStyle": "{builder}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "webpack",
    "memberof": "packages/cli/src/imports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/imports.js~webpack",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/imports.js",
    "importStyle": "{webpack}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "generator",
    "memberof": "packages/cli/src/imports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/imports.js~generator",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/imports.js",
    "importStyle": "{generator}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "core",
    "memberof": "packages/cli/src/imports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/imports.js~core",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/imports.js",
    "importStyle": "{core}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "server",
    "memberof": "packages/cli/src/imports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/imports.js~server",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/imports.js",
    "importStyle": "{server}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "file",
    "name": "packages/cli/src/index.js",
    "content": "import * as commands from './commands'\nimport * as imports from './imports'\nimport * as options from './options'\n\nexport {\n  commands,\n  imports,\n  options\n}\n\nexport { default as NuxtCommand } from './command'\nexport { default as setup } from './setup'\nexport { default as run } from './run'\nexport { loadNuxtConfig } from './utils/config'\nexport { getWebpackConfig } from './utils/webpack'\nexport { isNuxtDir } from './utils/dir'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 193,
    "kind": "file",
    "name": "packages/cli/src/list.js",
    "content": "import chalk from 'chalk'\nimport { indent, foldLines, colorize } from './utils/formatting'\nimport { startSpaces, optionSpaces } from './utils/constants'\nimport getCommand from './commands'\n\nexport default async function listCommands () {\n  const commandsOrder = ['dev', 'build', 'generate', 'start', 'help']\n\n  // Load all commands\n  const _commands = await Promise.all(\n    commandsOrder.map(cmd => getCommand(cmd))\n  )\n\n  let maxLength = 0\n  const commandsHelp = []\n\n  for (const command of _commands) {\n    commandsHelp.push([command.usage, command.description])\n    maxLength = Math.max(maxLength, command.usage.length)\n  }\n\n  const _cmds = commandsHelp.map(([cmd, description]) => {\n    const i = indent(maxLength + optionSpaces - cmd.length)\n    return foldLines(\n      chalk.green(cmd) + i + description,\n      startSpaces + maxLength + optionSpaces * 2,\n      startSpaces + optionSpaces\n    )\n  }).join('\\n')\n\n  const usage = foldLines('Usage: nuxt <command> [--help|-h]', startSpaces)\n  const cmds = foldLines('Commands:', startSpaces) + '\\n\\n' + _cmds\n\n  process.stderr.write(colorize(`${usage}\\n\\n${cmds}\\n\\n`))\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/list.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "listCommands",
    "memberof": "packages/cli/src/list.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/list.js~listCommands",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/list.js",
    "importStyle": "listCommands",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "packages/cli/src/options/common.js",
    "content": "import { defaultNuxtConfigFile } from '@nuxt/config'\nimport { normalizeArg } from '../utils'\n\nexport default {\n  spa: {\n    alias: 's',\n    type: 'boolean',\n    description: 'Launch in SPA mode'\n  },\n  universal: {\n    alias: 'u',\n    type: 'boolean',\n    description: 'Launch in Universal mode (default)'\n  },\n  'config-file': {\n    alias: 'c',\n    type: 'string',\n    default: defaultNuxtConfigFile,\n    description: `Path to Nuxt config file (default: \\`${defaultNuxtConfigFile}\\`)`\n  },\n  modern: {\n    alias: 'm',\n    type: 'string',\n    description: 'Build/Start app for modern browsers, e.g. server, client and false',\n    prepare (cmd, options, argv) {\n      if (argv.modern !== undefined) {\n        options.modern = normalizeArg(argv.modern)\n      }\n    }\n  },\n  target: {\n    alias: 't',\n    type: 'string',\n    description: 'Build/start app for a different target, e.g. server, serverless and static',\n    prepare (cmd, options, argv) {\n      if (argv.target) {\n        options.target = argv.target\n      }\n    }\n  },\n  'force-exit': {\n    type: 'boolean',\n    default (cmd) {\n      return ['build', 'generate', 'export'].includes(cmd.name)\n    },\n    description: 'Whether Nuxt should force exit after the command has finished'\n  },\n  version: {\n    alias: 'v',\n    type: 'boolean',\n    description: 'Display the Nuxt version'\n  },\n  help: {\n    alias: 'h',\n    type: 'boolean',\n    description: 'Display this message'\n  },\n  processenv: {\n    type: 'boolean',\n    default: true,\n    description: 'Disable reading from `process.env` and updating it with dotenv'\n  },\n  dotenv: {\n    type: 'string',\n    default: '.env',\n    description: 'Specify path to dotenv file (default: `.env`). Use `false` to disable'\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/options/common.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "packages/cli/src/options/index.js",
    "content": "import common from './common'\nimport server from './server'\nimport locking from './locking'\n\nexport {\n  common,\n  server,\n  locking\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/options/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "packages/cli/src/options/locking.js",
    "content": "export default {\n  lock: {\n    type: 'boolean',\n    default: true,\n    description: 'Do not set a lock on the project when building'\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/options/locking.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "packages/cli/src/options/server.js",
    "content": "import consola from 'consola'\n\nexport default {\n  port: {\n    alias: 'p',\n    type: 'string',\n    description: 'Port number on which to start the application',\n    prepare (cmd, options, argv) {\n      if (argv.port) {\n        options.server.port = +argv.port\n      }\n    }\n  },\n  hostname: {\n    alias: 'H',\n    type: 'string',\n    description: 'Hostname on which to start the application',\n    prepare (cmd, options, argv) {\n      if (argv.hostname === '') {\n        consola.fatal('Provided hostname argument has no value')\n      }\n    }\n  },\n  'unix-socket': {\n    alias: 'n',\n    type: 'string',\n    description: 'Path to a UNIX socket'\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/options/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "packages/cli/src/run.js",
    "content": "import { existsSync } from 'fs'\nimport { resolve } from 'path'\nimport execa from 'execa'\nimport consola from 'consola'\nimport { requireModule } from '@nuxt/utils'\nimport { name as pkgName } from '../package.json'\nimport NuxtCommand from './command'\nimport setup from './setup'\nimport getCommand from './commands'\nimport { isNuxtDir } from './utils/dir'\n\nexport default async function run (_argv, hooks = {}) {\n  // Check for not installing both nuxt and nuxt-edge\n  const dupPkg = pkgName === '@nuxt/cli-edge' ? 'cli' : 'cli-edge'\n  const dupPkgJSON = resolve(__dirname, '../..' /* dist/../.. */, dupPkg, 'package.json')\n  if (existsSync(dupPkgJSON) && requireModule(dupPkgJSON).name !== '@nuxt/' + dupPkg) {\n    consola.warn('Both `nuxt` and `nuxt-edge` dependencies are installed! Please choose one and remove the other one from dependencies.')\n  }\n\n  // Read from process.argv\n  const argv = _argv ? Array.from(_argv) : process.argv.slice(2)\n\n  // Check for internal command\n  let cmd = await getCommand(argv[0])\n\n  // Matching `nuxt` or `nuxt [dir]` or `nuxt -*` for `nuxt dev` shortcut\n  if (!cmd && (!argv[0] || argv[0][0] === '-' || isNuxtDir(argv[0]))) {\n    argv.unshift('dev')\n    cmd = await getCommand('dev')\n  }\n\n  // Check for dev\n  const dev = argv[0] === 'dev'\n\n  // Setup env\n  setup({ dev })\n\n  // Try internal command\n  if (cmd) {\n    return NuxtCommand.run(cmd, argv.slice(1), hooks)\n  }\n\n  // Try external command\n  try {\n    await execa(`nuxt-${argv[0]}`, argv.slice(1), {\n      stdout: process.stdout,\n      stderr: process.stderr,\n      stdin: process.stdin\n    })\n  } catch (error) {\n    if (error.exitCode === 2) {\n      throw String(`Command not found: nuxt-${argv[0]}`)\n    }\n    throw String(`Failed to run command \\`nuxt-${argv[0]}\\`:\\n${error}`)\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/run.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "run",
    "memberof": "packages/cli/src/run.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/run.js~run",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/run.js",
    "importStyle": "run",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "_argv",
        "types": [
          "*"
        ]
      },
      {
        "name": "hooks",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "packages/cli/src/setup.js",
    "content": "import consola from 'consola'\nimport exit from 'exit'\nimport { checkDependencies } from './utils/dependencies'\nimport { fatalBox } from './utils/formatting'\n\nlet _setup = false\n\nexport default function setup ({ dev }) {\n  // Apply default NODE_ENV if not provided\n  if (!process.env.NODE_ENV) {\n    process.env.NODE_ENV = dev ? 'development' : 'production'\n  }\n\n  if (_setup) {\n    return\n  }\n  _setup = true\n\n  checkDependencies()\n\n  // Global error handler\n  /* istanbul ignore next */\n  process.on('unhandledRejection', (err) => {\n    consola.error(err)\n  })\n\n  // Exit process on fatal errors\n  /* istanbul ignore next */\n  consola.addReporter({\n    log (logObj) {\n      if (logObj.type === 'fatal') {\n        const errorMessage = String(logObj.args[0])\n        process.stderr.write(fatalBox(errorMessage))\n        exit(1)\n      }\n    }\n  })\n\n  // Wrap all console logs with consola for better DX\n  consola.wrapConsole()\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/setup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "variable",
    "name": "_setup",
    "memberof": "packages/cli/src/setup.js",
    "static": true,
    "longname": "packages/cli/src/setup.js~_setup",
    "access": "private",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/cli/src/setup.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "setup",
    "memberof": "packages/cli/src/setup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/setup.js~setup",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/setup.js",
    "importStyle": "setup",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "packages/cli/src/utils/banner.js",
    "content": "import consola from 'consola'\nimport env from 'std-env'\nimport chalk from 'chalk'\nimport { successBox } from './formatting'\nimport { getFormattedMemoryUsage } from './memory'\n\nexport function showBanner (nuxt, showMemoryUsage = true) {\n  if (env.test) {\n    return\n  }\n\n  if (env.minimalCLI) {\n    for (const listener of nuxt.server.listeners) {\n      consola.info('Listening on: ' + listener.url)\n    }\n    return\n  }\n\n  const titleLines = []\n  const messageLines = []\n\n  // Name and version\n  const { bannerColor, badgeMessages } = nuxt.options.cli\n  titleLines.push(`${chalk[bannerColor].bold('Nuxt')} @ ${nuxt.constructor.version || 'exotic'}\\n`)\n\n  const label = name => chalk.bold.cyan(`▸ ${name}:`)\n\n  // Environment\n  const isDev = nuxt.options.dev\n  let _env = isDev ? 'development' : 'production'\n  if (process.env.NODE_ENV !== _env) {\n    _env += ` (${chalk.cyan(process.env.NODE_ENV)})`\n  }\n  titleLines.push(`${label('Environment')} ${_env}`)\n\n  // Rendering\n  const isSSR = nuxt.options.render.ssr\n  const rendering = isSSR ? 'server-side' : 'client-side'\n  titleLines.push(`${label('Rendering')}   ${rendering}`)\n\n  // Target\n  const target = nuxt.options.target || 'server'\n  titleLines.push(`${label('Target')}      ${target}`)\n\n  if (showMemoryUsage) {\n    titleLines.push('\\n' + getFormattedMemoryUsage())\n  }\n\n  // Listeners\n  for (const listener of nuxt.server.listeners) {\n    messageLines.push(chalk.bold('Listening: ') + chalk.underline.blue(listener.url))\n  }\n\n  // Add custom badge messages\n  if (badgeMessages.length) {\n    messageLines.push('', ...badgeMessages)\n  }\n\n  process.stdout.write(successBox(messageLines.join('\\n'), titleLines.join('\\n')))\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/banner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "showBanner",
    "memberof": "packages/cli/src/utils/banner.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/banner.js~showBanner",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/banner.js",
    "importStyle": "{showBanner}",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "showMemoryUsage",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "packages/cli/src/utils/config.js",
    "content": "import path from 'path'\nimport defu from 'defu'\nimport { loadNuxtConfig as _loadNuxtConfig, getDefaultNuxtConfig } from '@nuxt/config'\n\nexport async function loadNuxtConfig (argv, configContext) {\n  const rootDir = path.resolve(argv._[0] || '.')\n  const configFile = argv['config-file']\n\n  // Load config\n  const options = await _loadNuxtConfig({\n    rootDir,\n    configFile,\n    configContext,\n    envConfig: {\n      dotenv: argv.dotenv === 'false' ? false : argv.dotenv,\n      env: argv.processenv ? process.env : {}\n    }\n  })\n\n  if (argv.spa === true) {\n    options.ssr = false\n  } else if (argv.universal === true) {\n    options.ssr = true\n  }\n\n  // Server options\n  options.server = defu({\n    port: argv.port || null,\n    host: argv.hostname || null,\n    socket: argv['unix-socket'] || null\n  }, options.server || {}, getDefaultNuxtConfig().server)\n\n  return options\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "loadNuxtConfig",
    "memberof": "packages/cli/src/utils/config.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/utils/config.js~loadNuxtConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/config.js",
    "importStyle": "{loadNuxtConfig}",
    "description": "",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "configContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "file",
    "name": "packages/cli/src/utils/constants.js",
    "content": "export const forceExitTimeout = 5\n\nexport const startSpaces = 2\nexport const optionSpaces = 2\n\n// 80% of terminal column width\n// this is a fn because console width can have changed since startup\nexport const maxCharsPerLine = () => (process.stdout.columns || 100) * 80 / 100\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "forceExitTimeout",
    "memberof": "packages/cli/src/utils/constants.js",
    "static": true,
    "longname": "packages/cli/src/utils/constants.js~forceExitTimeout",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/constants.js",
    "importStyle": "{forceExitTimeout}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "startSpaces",
    "memberof": "packages/cli/src/utils/constants.js",
    "static": true,
    "longname": "packages/cli/src/utils/constants.js~startSpaces",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/constants.js",
    "importStyle": "{startSpaces}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "optionSpaces",
    "memberof": "packages/cli/src/utils/constants.js",
    "static": true,
    "longname": "packages/cli/src/utils/constants.js~optionSpaces",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/constants.js",
    "importStyle": "{optionSpaces}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "maxCharsPerLine",
    "memberof": "packages/cli/src/utils/constants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/constants.js~maxCharsPerLine",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/constants.js",
    "importStyle": "{maxCharsPerLine}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "packages/cli/src/utils/dir.js",
    "content": "import fs from 'fs'\nimport path from 'path'\n\nexport function isNuxtDir (rootDir) {\n  if (fs.existsSync(path.join(rootDir, 'nuxt.config.js')) ||\n    fs.existsSync(path.join(rootDir, 'pages')) ||\n    fs.existsSync(path.join(rootDir, 'nuxt.config.ts'))) {\n    return true\n  }\n  return false\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/dir.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "isNuxtDir",
    "memberof": "packages/cli/src/utils/dir.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/dir.js~isNuxtDir",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/dir.js",
    "importStyle": "{isNuxtDir}",
    "description": "",
    "lineNumber": 4,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rootDir",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "packages/cli/src/utils/formatting.js",
    "content": "import wrapAnsi from 'wrap-ansi'\nimport chalk from 'chalk'\nimport boxen from 'boxen'\nimport { maxCharsPerLine } from './constants'\n\nexport function indent (count, chr = ' ') {\n  return chr.repeat(count)\n}\n\nexport function indentLines (string, spaces, firstLineSpaces) {\n  const lines = Array.isArray(string) ? string : string.split('\\n')\n  let s = ''\n  if (lines.length) {\n    const i0 = indent(firstLineSpaces === undefined ? spaces : firstLineSpaces)\n    s = i0 + lines.shift()\n  }\n  if (lines.length) {\n    const i = indent(spaces)\n    s += '\\n' + lines.map(l => i + l).join('\\n')\n  }\n  return s\n}\n\nexport function foldLines (string, spaces, firstLineSpaces, charsPerLine = maxCharsPerLine()) {\n  return indentLines(wrapAnsi(string, charsPerLine), spaces, firstLineSpaces)\n}\n\nexport function colorize (text) {\n  return text\n    .replace(/\\[[^ ]+]/g, m => chalk.grey(m))\n    .replace(/<[^ ]+>/g, m => chalk.green(m))\n    .replace(/ (-[-\\w,]+)/g, m => chalk.bold(m))\n    .replace(/`([^`]+)`/g, (_, m) => chalk.bold.cyan(m))\n}\n\nexport function box (message, title, options) {\n  return boxen([\n    title || chalk.white('Nuxt Message'),\n    '',\n    chalk.white(foldLines(message, 0, 0, maxCharsPerLine()))\n  ].join('\\n'), Object.assign({\n    borderColor: 'white',\n    borderStyle: 'round',\n    padding: 1,\n    margin: 1\n  }, options)) + '\\n'\n}\n\nexport function successBox (message, title) {\n  return box(message, title || chalk.green('✔ Nuxt Success'), {\n    borderColor: 'green'\n  })\n}\n\nexport function warningBox (message, title) {\n  return box(message, title || chalk.yellow('⚠ Nuxt Warning'), {\n    borderColor: 'yellow'\n  })\n}\n\nexport function errorBox (message, title) {\n  return box(message, title || chalk.red('✖ Nuxt Error'), {\n    borderColor: 'red'\n  })\n}\n\nexport function fatalBox (message, title) {\n  return errorBox(message, title || chalk.red('✖ Nuxt Fatal Error'))\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/formatting.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "function",
    "name": "indent",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~indent",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{indent}",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " ",
        "defaultRaw": " ",
        "name": "chr",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "indentLines",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~indentLines",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{indentLines}",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "spaces",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "firstLineSpaces",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "foldLines",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~foldLines",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{foldLines}",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "spaces",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "firstLineSpaces",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "charsPerLine",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "colorize",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~colorize",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{colorize}",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "box",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~box",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{box}",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "function",
    "name": "successBox",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~successBox",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{successBox}",
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "warningBox",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~warningBox",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{warningBox}",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "errorBox",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~errorBox",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{errorBox}",
    "description": "",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "fatalBox",
    "memberof": "packages/cli/src/utils/formatting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/formatting.js~fatalBox",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/formatting.js",
    "importStyle": "{fatalBox}",
    "description": "",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "packages/cli/src/utils/generate.js",
    "content": "import path, { relative } from 'path'\nimport upath from 'upath'\nimport fs from 'fs-extra'\nimport crc32 from 'crc/lib/crc32'\nimport consola from 'consola'\nimport globby from 'globby'\nimport destr from 'destr'\nimport { TARGETS } from '@nuxt/utils'\n\nexport async function generate (cmd) {\n  const nuxt = await getNuxt({ server: true }, cmd)\n  const generator = await cmd.getGenerator(nuxt)\n\n  await nuxt.server.listen(0)\n  const { errors } = await generator.generate({ build: false })\n  await nuxt.close()\n  if (cmd.argv['fail-on-error'] && errors.length > 0) {\n    throw new Error('Error generating pages, exiting with non-zero code')\n  }\n}\n\nexport async function ensureBuild (cmd) {\n  const nuxt = await getNuxt({ _build: true, server: false }, cmd)\n  const { options } = nuxt\n\n  if (options.generate.cache === false || destr(process.env.NUXT_BUILD) || cmd.argv['force-build']) {\n    const builder = await cmd.getBuilder(nuxt)\n    await builder.build()\n    await nuxt.close()\n    return\n  }\n\n  // Default build ignore files\n  const ignore = [\n    options.buildDir,\n    options.dir.static,\n    options.generate.dir,\n    'node_modules',\n    '.**/*',\n    '.*',\n    'README.md'\n  ]\n\n  // Extend ignore\n  const { generate } = options\n  if (typeof generate.cache.ignore === 'function') {\n    generate.cache.ignore = generate.cache.ignore(ignore)\n  } else if (Array.isArray(generate.cache.ignore)) {\n    generate.cache.ignore = generate.cache.ignore.concat(ignore)\n  }\n  await nuxt.callHook('generate:cache:ignore', generate.cache.ignore)\n\n  // Take a snapshot of current project\n  const snapshotOptions = {\n    rootDir: options.rootDir,\n    ignore: generate.cache.ignore.map(upath.normalize),\n    globbyOptions: generate.cache.globbyOptions\n  }\n\n  const currentBuildSnapshot = await snapshot(snapshotOptions)\n\n  // Detect process.env usage in nuxt.config\n  const processEnv = {}\n  if (nuxt.options._nuxtConfigFile) {\n    const configSrc = await fs.readFile(nuxt.options._nuxtConfigFile)\n    const envRegex = /process.env.(\\w+)/g\n    let match\n    // eslint-disable-next-line no-cond-assign\n    while (match = envRegex.exec(configSrc)) {\n      processEnv[match[1]] = process.env[match[1]]\n    }\n  }\n\n  // Current build meta\n  const currentBuild = {\n    // @ts-ignore\n    nuxtVersion: nuxt.constructor.version,\n    ssr: nuxt.options.ssr,\n    target: nuxt.options.target,\n    snapshot: currentBuildSnapshot,\n    env: nuxt.options.env,\n    'process.env': processEnv\n  }\n\n  // Check if build can be skipped\n  const nuxtBuildFile = path.resolve(nuxt.options.buildDir, 'build.json')\n  if (fs.existsSync(nuxtBuildFile)) {\n    const previousBuild = destr(fs.readFileSync(nuxtBuildFile, 'utf-8')) || {}\n\n    // Quick diff\n    let needBuild = false\n    for (const field of ['nuxtVersion', 'ssr', 'target', 'env', 'process.env']) {\n      if (JSON.stringify(previousBuild[field]) !== JSON.stringify(currentBuild[field])) {\n        needBuild = true\n        consola.info(`Doing webpack rebuild because ${field} changed`)\n        break\n      }\n    }\n\n    // Full snapshot diff\n    if (!needBuild) {\n      const changed = compareSnapshots(previousBuild.snapshot, currentBuild.snapshot)\n      if (!changed) {\n        consola.success('Skipping webpack build as no changes detected')\n        return\n      } else {\n        consola.info(`Doing webpack rebuild because ${changed} modified`)\n      }\n    }\n  }\n\n  // Webpack build\n  const builder = await cmd.getBuilder(nuxt)\n  await builder.build()\n\n  // Write build.json\n  fs.writeFileSync(nuxtBuildFile, JSON.stringify(currentBuild, null, 2), 'utf-8')\n\n  await nuxt.close()\n}\n\nasync function getNuxt (args, cmd) {\n  const config = await cmd.getNuxtConfig({ dev: false, ...args })\n\n  if (config.target === TARGETS.static) {\n    config._export = true\n  } else {\n    config._legacyGenerate = true\n  }\n  config.buildDir = (config.static && config.static.cacheDir) || path.resolve(config.rootDir, 'node_modules/.cache/nuxt')\n  config.build = config.build || {}\n  // https://github.com/nuxt/nuxt.js/issues/7390\n  config.build.parallel = false\n  config.build.transpile = config.build.transpile || []\n  if (!config.static || !config.static.cacheDir) {\n    config.build.transpile.push('.cache/nuxt')\n  }\n\n  const nuxt = await cmd.getNuxt(config)\n\n  return nuxt\n}\n\nexport function compareSnapshots (from, to) {\n  const allKeys = Array.from(new Set([\n    ...Object.keys(from).sort(),\n    ...Object.keys(to).sort()\n  ]))\n\n  for (const key of allKeys) {\n    if (JSON.stringify(from[key]) !== JSON.stringify(to[key])) {\n      return key\n    }\n  }\n\n  return false\n}\n\nexport async function snapshot ({ globbyOptions, ignore, rootDir }) {\n  const snapshot = {}\n\n  const files = await globby('**/*.*', {\n    ...globbyOptions,\n    ignore,\n    cwd: rootDir,\n    absolute: true\n  })\n\n  await Promise.all(files.map(async (p) => {\n    const key = relative(rootDir, p)\n    try {\n      const fileContent = await fs.readFile(p)\n      snapshot[key] = {\n        checksum: await crc32(fileContent).toString(16)\n      }\n    } catch (e) {\n      // TODO: Check for other errors like permission denied\n      snapshot[key] = {\n        exists: false\n      }\n    }\n  }))\n\n  return snapshot\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/generate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "generate",
    "memberof": "packages/cli/src/utils/generate.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/utils/generate.js~generate",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/generate.js",
    "importStyle": "{generate}",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "ensureBuild",
    "memberof": "packages/cli/src/utils/generate.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/utils/generate.js~ensureBuild",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/generate.js",
    "importStyle": "{ensureBuild}",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "getNuxt",
    "memberof": "packages/cli/src/utils/generate.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/utils/generate.js~getNuxt",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/generate.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "compareSnapshots",
    "memberof": "packages/cli/src/utils/generate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/generate.js~compareSnapshots",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/generate.js",
    "importStyle": "{compareSnapshots}",
    "description": "",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "snapshot",
    "memberof": "packages/cli/src/utils/generate.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/utils/generate.js~snapshot",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/generate.js",
    "importStyle": "{snapshot}",
    "description": "",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "packages/cli/src/utils/index.js",
    "content": "import path from 'path'\nimport exit from 'exit'\n\nimport { lock } from '@nuxt/utils'\nimport chalk from 'chalk'\nimport env from 'std-env'\nimport { warningBox } from './formatting'\n\nexport const eventsMapping = {\n  add: { icon: '+', color: 'green', action: 'Created' },\n  change: { icon: env.windows ? '»' : '↻', color: 'blue', action: 'Updated' },\n  unlink: { icon: '-', color: 'red', action: 'Removed' }\n}\n\nexport function formatPath (filePath) {\n  if (!filePath) {\n    return\n  }\n  return filePath.replace(process.cwd() + path.sep, '')\n}\n\n/**\n * Normalize string argument in command\n *\n * @export\n * @param {String} argument\n * @param {*} defaultValue\n * @returns formatted argument\n */\nexport function normalizeArg (arg, defaultValue) {\n  switch (arg) {\n    case 'true': arg = true; break\n    case '': arg = true; break\n    case 'false': arg = false; break\n    case undefined: arg = defaultValue; break\n  }\n  return arg\n}\n\nexport function forceExit (cmdName, timeout) {\n  if (timeout !== false) {\n    const exitTimeout = setTimeout(() => {\n      const msg = `The command 'nuxt ${cmdName}' finished but did not exit after ${timeout}s\nThis is most likely not caused by a bug in Nuxt\nMake sure to cleanup all timers and listeners you or your plugins/modules start.\nNuxt will now force exit\n\n${chalk.bold('DeprecationWarning: Starting with Nuxt version 3 this will be a fatal error')}`\n\n      // TODO: Change this to a fatal error in v3\n      process.stderr.write(warningBox(msg))\n      exit(0)\n    }, timeout * 1000)\n    exitTimeout.unref()\n  } else {\n    exit(0)\n  }\n}\n\n// An immediate export throws an error when mocking with jest\n// TypeError: Cannot set property createLock of #<Object> which has only a getter\nexport function createLock (...args) {\n  return lock(...args)\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "eventsMapping",
    "memberof": "packages/cli/src/utils/index.js",
    "static": true,
    "longname": "packages/cli/src/utils/index.js~eventsMapping",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/index.js",
    "importStyle": "{eventsMapping}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"add\": *, \"change\": *, \"unlink\": *}"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "formatPath",
    "memberof": "packages/cli/src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/index.js~formatPath",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/index.js",
    "importStyle": "{formatPath}",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "normalizeArg",
    "memberof": "packages/cli/src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/index.js~normalizeArg",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/index.js",
    "importStyle": "{normalizeArg}",
    "description": "Normalize string argument in command",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "formatted argument"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "argument",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "formatted argument"
    }
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "forceExit",
    "memberof": "packages/cli/src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/index.js~forceExit",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/index.js",
    "importStyle": "{forceExit}",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cmdName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "timeout",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "createLock",
    "memberof": "packages/cli/src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/index.js~createLock",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/index.js",
    "importStyle": "{createLock}",
    "description": "",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "packages/cli/src/utils/memory.js",
    "content": "import chalk from 'chalk'\nimport consola from 'consola'\nimport prettyBytes from 'pretty-bytes'\n\nexport function getMemoryUsage () {\n  // https://nodejs.org/api/process.html#process_process_memoryusage\n  const { heapUsed, rss } = process.memoryUsage()\n  return { heap: heapUsed, rss }\n}\n\nexport function getFormattedMemoryUsage () {\n  const { heap, rss } = getMemoryUsage()\n  return `Memory usage: ${chalk.bold(prettyBytes(heap))} (RSS: ${prettyBytes(rss)})`\n}\n\nexport function showMemoryUsage () {\n  consola.info(getFormattedMemoryUsage())\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/memory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "getMemoryUsage",
    "memberof": "packages/cli/src/utils/memory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/memory.js~getMemoryUsage",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/memory.js",
    "importStyle": "{getMemoryUsage}",
    "description": "",
    "lineNumber": 5,
    "params": [],
    "return": {
      "types": [
        "{\"heap\": *, \"rss\": *}"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "getFormattedMemoryUsage",
    "memberof": "packages/cli/src/utils/memory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/memory.js~getFormattedMemoryUsage",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/memory.js",
    "importStyle": "{getFormattedMemoryUsage}",
    "description": "",
    "lineNumber": 11,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "showMemoryUsage",
    "memberof": "packages/cli/src/utils/memory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/src/utils/memory.js~showMemoryUsage",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/memory.js",
    "importStyle": "{showMemoryUsage}",
    "description": "",
    "lineNumber": 16,
    "params": [],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "packages/cli/src/utils/serve.js",
    "content": "import { promises as fs } from 'fs'\nimport { join, extname, sep } from 'path'\nimport consola from 'consola'\nimport connect from 'connect'\nimport serveStatic from 'serve-static'\nimport compression from 'compression'\nimport { getNuxtConfig } from '@nuxt/config'\nimport { requireModule } from '@nuxt/utils'\nimport { showBanner } from '../utils/banner'\nimport * as imports from '../imports'\n\nexport async function serve (cmd) {\n  const _config = await cmd.getNuxtConfig({ dev: false })\n\n  // add default options\n  const options = getNuxtConfig(_config)\n\n  try {\n    // overwrites with build config\n    const buildConfig = requireModule(join(options.buildDir, 'nuxt/config.json'))\n    options.target = buildConfig.target\n  } catch (err) { }\n\n  const distStat = await fs.stat(options.generate.dir).catch(err => null) // eslint-disable-line node/handle-callback-err\n  const distPath = join(options.generate.dir.replace(process.cwd() + sep, ''), sep)\n  if (!distStat || !distStat.isDirectory()) {\n    throw new Error('Output directory `' + distPath + '` does not exist, please use `nuxt generate` before `nuxt start` for static target.')\n  }\n  const app = connect()\n  app.use(compression({ threshold: 0 }))\n  app.use(\n    options.router.base,\n    serveStatic(options.generate.dir, {\n      extensions: ['html']\n    })\n  )\n  if (options.generate.fallback) {\n    const fallbackFile = await fs.readFile(join(options.generate.dir, options.generate.fallback), 'utf-8')\n    app.use((req, res, next) => {\n      const ext = extname(req.url) || '.html'\n\n      if (ext !== '.html') {\n        return next()\n      }\n      res.writeHeader(200, {\n        'Content-Type': 'text/html'\n      })\n      res.write(fallbackFile)\n      res.end()\n    })\n  }\n\n  const { port, host, socket, https } = options.server\n  const { Listener } = await imports.server()\n  const listener = new Listener({\n    port,\n    host,\n    socket,\n    https,\n    app,\n    dev: true, // try another port if taken\n    baseURL: options.router.base\n  })\n\n  await listener.listen()\n\n  const { Nuxt } = await imports.core()\n\n  showBanner({\n    constructor: Nuxt,\n    options,\n    server: {\n      listeners: [listener]\n    }\n  }, false)\n\n  consola.info(`Serving static application from \\`${distPath}\\``)\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/serve.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "serve",
    "memberof": "packages/cli/src/utils/serve.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/utils/serve.js~serve",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/serve.js",
    "importStyle": "{serve}",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "packages/cli/src/utils/webpack.js",
    "content": "import { core as importCore, builder as importBuilder } from '../imports'\n\nexport async function getWebpackConfig (name = 'client', loadOptions = {}) {\n  const { loadNuxt } = await importCore()\n  const { getBuilder } = await importBuilder()\n\n  const nuxt = await loadNuxt(loadOptions)\n  const builder = await getBuilder(nuxt)\n  const { bundleBuilder } = builder\n  return bundleBuilder.getWebpackConfig(name)\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/src/utils/webpack.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "getWebpackConfig",
    "memberof": "packages/cli/src/utils/webpack.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/cli/src/utils/webpack.js~getWebpackConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/src/utils/webpack.js",
    "importStyle": "{getWebpackConfig}",
    "description": "",
    "lineNumber": 3,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "client",
        "defaultRaw": "client",
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "loadOptions",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "packages/cli/test/fixtures/nuxt.async-config.js",
    "content": "import { resolve } from 'path'\n\nexport default () => {\n  // delete cache is needed because otherwise Jest will return the same\n  // object reference as the previous test and then mode will not be\n  // set correctly. jest.resetModules doesnt work for some reason\n  delete require.cache[resolve(__dirname, 'nuxt.config.js')]\n  return import('./nuxt.config.js')\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/test/fixtures/nuxt.async-config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "function",
    "name": "nuxt",
    "memberof": "packages/cli/test/fixtures/nuxt.async-config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/fixtures/nuxt.async-config.js~nuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/fixtures/nuxt.async-config.js",
    "importStyle": "nuxt",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "packages/cli/test/fixtures/nuxt.async-error.js",
    "content": "export default () => Promise.reject(new Error('Async Config Error'))\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/test/fixtures/nuxt.async-error.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "nuxt",
    "memberof": "packages/cli/test/fixtures/nuxt.async-error.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/fixtures/nuxt.async-error.js~nuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/fixtures/nuxt.async-error.js",
    "importStyle": "nuxt",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "packages/cli/test/fixtures/nuxt.fn-config.js",
    "content": "export default (context) => {\n  return { context }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/test/fixtures/nuxt.fn-config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "nuxt",
    "memberof": "packages/cli/test/fixtures/nuxt.fn-config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/fixtures/nuxt.fn-config.js~nuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/fixtures/nuxt.fn-config.js",
    "importStyle": "nuxt",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"context\": *}"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "packages/cli/test/utils/index.js",
    "content": "import path from 'path'\nimport consola from 'consola'\n\nexport * from './mocking'\nexport { NuxtCommand } from '../../src'\n\nconsola.mockTypes(() => jest.fn())\n\nconst localPath = modulePath => path.resolve(process.cwd(), 'node_modules', modulePath)\n\nexport {\n  consola,\n  localPath\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/test/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "localPath",
    "memberof": "packages/cli/test/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/index.js~localPath",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/index.js",
    "importStyle": "{localPath}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "modulePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 253,
    "kind": "file",
    "name": "packages/cli/test/utils/mocking.js",
    "content": "import * as imports from '../../src/imports'\nimport Command from '../../src/command'\n\njest.mock('../../src/imports', () => {\n  return {\n    core: jest.fn().mockImplementation(() => ({\n      Nuxt () {}\n    })),\n    builder: jest.fn().mockImplementation(() => ({\n      Builder () {}\n    })),\n    generator: jest.fn().mockImplementation(() => ({\n      Generator () {}\n    })),\n    server: () => ({\n      Listener: class { listen () { } }\n    }),\n    webpack: jest.fn().mockImplementation(() => ({\n      BundleBuilder () {}\n    }))\n  }\n})\n\nexport const mockGetNuxt = (options = {}, implementation = {}) => {\n  Command.prototype.getNuxt = jest.fn().mockImplementationOnce(() => {\n    return Object.assign({\n      hook: jest.fn(),\n      server: {\n        listen: jest.fn()\n      },\n      close: jest.fn(),\n      options\n    }, implementation)\n  })\n}\n\nexport const mockGetBuilder = (ret) => {\n  const build = jest.fn().mockImplementationOnce(() => ret)\n\n  Command.prototype.getBuilder = jest.fn().mockImplementationOnce(() => ({ build }))\n\n  return build\n}\n\nexport const mockGetGenerator = (ret) => {\n  const generate = jest.fn()\n  if (ret) {\n    generate.mockImplementationOnce(ret)\n  } else {\n    generate.mockImplementationOnce(() => ({ errors: [] }))\n  }\n\n  Command.prototype.getGenerator = jest.fn().mockImplementationOnce(() => ({ generate }))\n\n  return generate\n}\n\nexport const mockGetNuxtStart = (ssr) => {\n  const listen = jest.fn().mockImplementationOnce(() => {\n    return Promise.resolve()\n  })\n\n  mockGetNuxt({\n    rootDir: '.',\n    render: {\n      ssr\n    }\n  }, {\n    server: {\n      listen,\n      listeners: []\n    }\n  })\n\n  return { listen }\n}\n\nexport const mockGetNuxtConfig = (config = {}) => {\n  const spy = jest.fn()\n  spy.mockReturnValue(config)\n  Command.prototype.getNuxtConfig = spy\n  return spy\n}\n\nexport const mockNuxt = (implementation) => {\n  const Nuxt = function () {}\n  Object.assign(Nuxt.prototype, {\n    hook (type, fn) {\n      if (type === 'watch:restart') {\n        Nuxt.fileRestartHook = fn\n      }\n    },\n    options: {},\n    callHook: jest.fn(),\n    clearHook: jest.fn(),\n    clearHooks: jest.fn(),\n    close: jest.fn(),\n    ready: jest.fn(),\n    server: {\n      listeners: [],\n      listen: jest.fn().mockImplementationOnce(() => Promise.resolve())\n    }\n  }, implementation || {})\n\n  imports.core.mockImplementation(() => ({ Nuxt }))\n\n  return Nuxt\n}\n\nexport const mockBuilder = (implementation) => {\n  const Builder = function () {}\n  Object.assign(Builder.prototype, {\n    build: jest.fn().mockImplementationOnce(() => Promise.resolve()),\n    unwatch: jest.fn().mockImplementationOnce(() => Promise.resolve()),\n    watchRestart: jest.fn().mockImplementationOnce(() => Promise.resolve())\n  }, implementation || {})\n\n  imports.builder.mockImplementation(() => ({ Builder }))\n\n  return Builder\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/cli/test/utils/mocking.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "mockGetNuxt",
    "memberof": "packages/cli/test/utils/mocking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/mocking.js~mockGetNuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/mocking.js",
    "importStyle": "{mockGetNuxt}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "implementation",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "mockGetBuilder",
    "memberof": "packages/cli/test/utils/mocking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/mocking.js~mockGetBuilder",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/mocking.js",
    "importStyle": "{mockGetBuilder}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "ret",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "mockGetGenerator",
    "memberof": "packages/cli/test/utils/mocking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/mocking.js~mockGetGenerator",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/mocking.js",
    "importStyle": "{mockGetGenerator}",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "ret",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "mockGetNuxtStart",
    "memberof": "packages/cli/test/utils/mocking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/mocking.js~mockGetNuxtStart",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/mocking.js",
    "importStyle": "{mockGetNuxtStart}",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "ssr",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"listen\": *}"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "mockGetNuxtConfig",
    "memberof": "packages/cli/test/utils/mocking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/mocking.js~mockGetNuxtConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/mocking.js",
    "importStyle": "{mockGetNuxtConfig}",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "config",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "mockNuxt",
    "memberof": "packages/cli/test/utils/mocking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/mocking.js~mockNuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/mocking.js",
    "importStyle": "{mockNuxt}",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [
      {
        "name": "implementation",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "mockBuilder",
    "memberof": "packages/cli/test/utils/mocking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/cli/test/utils/mocking.js~mockBuilder",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/cli/test/utils/mocking.js",
    "importStyle": "{mockBuilder}",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "implementation",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "packages/config/package.js",
    "content": "export default {\n  build: true\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "file",
    "name": "packages/config/src/config/_app.js",
    "content": "export default () => ({\n  vue: {\n    config: {\n      silent: undefined, // = !dev\n      performance: undefined // = dev\n    }\n  },\n\n  vueMeta: null,\n\n  head: {\n    meta: [],\n    link: [],\n    style: [],\n    script: []\n  },\n\n  fetch: {\n    server: true,\n    client: true\n  },\n\n  plugins: [],\n\n  extendPlugins: null,\n\n  css: [],\n\n  layouts: {},\n\n  ErrorPage: null,\n\n  loading: {\n    color: 'black',\n    failedColor: 'red',\n    height: '2px',\n    throttle: 200,\n    duration: 5000,\n    continuous: false,\n    rtl: false,\n    css: true\n  },\n\n  loadingIndicator: 'default',\n\n  pageTransition: {\n    name: 'page',\n    mode: 'out-in',\n    appear: false,\n    appearClass: 'appear',\n    appearActiveClass: 'appear-active',\n    appearToClass: 'appear-to'\n  },\n\n  layoutTransition: {\n    name: 'layout',\n    mode: 'out-in'\n  },\n\n  features: {\n    store: true,\n    layouts: true,\n    meta: true,\n    middleware: true,\n    transitions: true,\n    deprecations: true,\n    validate: true,\n    asyncData: true,\n    fetch: true,\n    clientOnline: true,\n    clientPrefetch: true,\n    componentAliases: true,\n    componentClientOnly: true\n  }\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/_app.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "_app",
    "memberof": "packages/config/src/config/_app.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/_app.js~_app",
    "access": "private",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/_app.js",
    "importStyle": "_app",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 264,
    "kind": "file",
    "name": "packages/config/src/config/_common.js",
    "content": "import { capitalize } from 'lodash'\nimport env from 'std-env'\nimport { TARGETS } from '@nuxt/utils'\n\nexport default () => ({\n  // Env\n  dev: Boolean(env.dev),\n  test: Boolean(env.test),\n  debug: undefined, // = dev\n  env: {},\n\n  createRequire: undefined,\n\n  // Target\n  target: TARGETS.server,\n\n  // Rendering\n  ssr: true,\n\n  // Mode (deprecated)\n  mode: undefined,\n\n  // Modern\n  modern: undefined,\n\n  // Modules\n  modules: [],\n  buildModules: [],\n  _modules: [],\n\n  globalName: undefined,\n  globals: {\n    id: globalName => `__${globalName}`,\n    nuxt: globalName => `$${globalName}`,\n    context: globalName => `__${globalName.toUpperCase()}__`,\n    pluginPrefix: globalName => globalName,\n    readyCallback: globalName => `on${capitalize(globalName)}Ready`,\n    loadedCallback: globalName => `_on${capitalize(globalName)}Loaded`\n  },\n\n  // Server\n  serverMiddleware: [],\n\n  // Dirs and extensions\n  _nuxtConfigFile: undefined,\n  srcDir: undefined,\n  buildDir: '.nuxt',\n  modulesDir: [\n    'node_modules'\n  ],\n  dir: {\n    assets: 'assets',\n    app: 'app',\n    layouts: 'layouts',\n    middleware: 'middleware',\n    pages: 'pages',\n    static: 'static',\n    store: 'store'\n  },\n  extensions: [],\n  styleExtensions: ['css', 'pcss', 'postcss', 'styl', 'stylus', 'scss', 'sass', 'less'],\n  alias: {},\n\n  // Ignores\n  ignoreOptions: undefined,\n  ignorePrefix: '-',\n  ignore: [\n    '**/*.test.*',\n    '**/*.spec.*'\n  ],\n\n  // Watch\n  watch: [],\n  watchers: {\n    rewatchOnRawEvents: undefined,\n    webpack: {\n      aggregateTimeout: 1000\n    },\n    chokidar: {\n      ignoreInitial: true\n    }\n  },\n\n  // Editor\n  editor: undefined,\n\n  // Hooks\n  hooks: null,\n\n  // runtimeConfig\n  privateRuntimeConfig: {},\n  publicRuntimeConfig: {}\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/_common.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 265,
    "kind": "function",
    "name": "_common",
    "memberof": "packages/config/src/config/_common.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/_common.js~_common",
    "access": "private",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/_common.js",
    "importStyle": "_common",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "packages/config/src/config/build.js",
    "content": "import env from 'std-env'\n\nexport default () => ({\n  quiet: Boolean(env.ci || env.test),\n  analyze: false,\n  profile: process.argv.includes('--profile'),\n  extractCSS: false,\n  cssSourceMap: undefined,\n  ssr: undefined,\n  parallel: false,\n  cache: false,\n  standalone: false,\n  publicPath: '/_nuxt/',\n  serverURLPolyfill: 'url',\n  filenames: {\n    // { isDev, isClient, isServer }\n    app: ({ isDev, isModern }) => isDev ? `[name]${isModern ? '.modern' : ''}.js` : `[contenthash:7]${isModern ? '.modern' : ''}.js`,\n    chunk: ({ isDev, isModern }) => isDev ? `[name]${isModern ? '.modern' : ''}.js` : `[contenthash:7]${isModern ? '.modern' : ''}.js`,\n    css: ({ isDev }) => isDev ? '[name].css' : 'css/[contenthash:7].css',\n    img: ({ isDev }) => isDev ? '[path][name].[ext]' : 'img/[name].[contenthash:7].[ext]',\n    font: ({ isDev }) => isDev ? '[path][name].[ext]' : 'fonts/[name].[contenthash:7].[ext]',\n    video: ({ isDev }) => isDev ? '[path][name].[ext]' : 'videos/[name].[contenthash:7].[ext]'\n  },\n  loaders: {\n    file: { esModule: false },\n    fontUrl: { esModule: false, limit: 1000 },\n    imgUrl: { esModule: false, limit: 1000 },\n    pugPlain: {},\n    vue: {\n      transformAssetUrls: {\n        video: 'src',\n        source: 'src',\n        object: 'src',\n        embed: 'src'\n      }\n    },\n    css: { esModule: false },\n    cssModules: {\n      esModule: false,\n      modules: {\n        localIdentName: '[local]_[hash:base64:5]'\n      }\n    },\n    less: {},\n    sass: {\n      sassOptions: {\n        indentedSyntax: true\n      }\n    },\n    scss: {},\n    stylus: {},\n    vueStyle: {}\n  },\n  styleResources: {},\n  plugins: [],\n  terser: {},\n  hardSource: false,\n  aggressiveCodeRemoval: false,\n  optimizeCSS: undefined,\n  optimization: {\n    runtimeChunk: 'single',\n    minimize: undefined,\n    minimizer: undefined,\n    splitChunks: {\n      chunks: 'all',\n      automaticNameDelimiter: '/',\n      cacheGroups: {}\n    }\n  },\n  splitChunks: {\n    layouts: false,\n    pages: true,\n    commons: true\n  },\n  corejs: 'auto',\n  babel: {\n    configFile: false,\n    babelrc: false,\n    cacheDirectory: undefined\n  },\n  transpile: [], // Name of NPM packages to be transpiled\n  postcss: {\n    preset: {\n      // https://cssdb.org/#staging-process\n      stage: 2\n    }\n  },\n  html: {\n    minify: {\n      collapseBooleanAttributes: true,\n      decodeEntities: true,\n      minifyCSS: true,\n      minifyJS: true,\n      processConditionalComments: true,\n      removeEmptyAttributes: true,\n      removeRedundantAttributes: true,\n      trimCustomFragments: true,\n      useShortDoctype: true\n    }\n  },\n\n  template: undefined,\n  templates: [],\n\n  watch: [],\n  devMiddleware: {\n    // stats will be printed by webapckbar StateReporter\n    stats: 'none'\n  },\n  hotMiddleware: {},\n\n  stats: {\n    excludeAssets: [\n      /.map$/,\n      /index\\..+\\.html$/,\n      /vue-ssr-(client|modern)-manifest.json/\n    ]\n  },\n  friendlyErrors: true,\n  additionalExtensions: [],\n  warningIgnoreFilters: [],\n\n  followSymlinks: false,\n\n  loadingScreen: {},\n  indicator: {\n    position: 'bottom-right',\n    backgroundColor: '#2E495E',\n    color: '#00C48D'\n  }\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/build.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "function",
    "name": "build",
    "memberof": "packages/config/src/config/build.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/build.js~build",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/build.js",
    "importStyle": "build",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "packages/config/src/config/cli.js",
    "content": "export default () => ({\n  badgeMessages: [],\n  bannerColor: 'green'\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/cli.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "cli",
    "memberof": "packages/config/src/config/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/cli.js~cli",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/cli.js",
    "importStyle": "cli",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 270,
    "kind": "file",
    "name": "packages/config/src/config/generate.js",
    "content": "export default () => ({\n  dir: 'dist',\n  routes: [],\n  exclude: [],\n  concurrency: 500,\n  interval: 0,\n  subFolders: true,\n  fallback: '200.html',\n  crawler: true,\n  manifest: true,\n  nojekyll: true,\n  cache: {\n    ignore: [],\n    globbyOptions: {\n      gitignore: true\n    }\n  },\n  staticAssets: {\n    base: undefined, // Default: \"/_nuxt/static:\n    versionBase: undefined, // Default: \"_nuxt/static/{version}\"\"\n    dir: 'static',\n    version: undefined // Default: \"{timeStampSec}\"\n  }\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/generate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "generate",
    "memberof": "packages/config/src/config/generate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/generate.js~generate",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/generate.js",
    "importStyle": "generate",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "packages/config/src/config/index.js",
    "content": "\nimport _app from './_app'\nimport _common from './_common'\n\nimport build from './build'\nimport messages from './messages'\nimport modes from './modes'\nimport render from './render'\nimport router from './router'\nimport server from './server'\nimport cli from './cli'\nimport generate from './generate'\n\nexport const defaultNuxtConfigFile = 'nuxt.config'\n\nexport function getDefaultNuxtConfig (options = {}) {\n  if (!options.env) {\n    options.env = process.env\n  }\n\n  return {\n    ..._app(),\n    ..._common(),\n    build: build(),\n    messages: messages(),\n    modes: modes(),\n    render: render(),\n    router: router(),\n    server: server(options),\n    cli: cli(),\n    generate: generate()\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "variable",
    "name": "defaultNuxtConfigFile",
    "memberof": "packages/config/src/config/index.js",
    "static": true,
    "longname": "packages/config/src/config/index.js~defaultNuxtConfigFile",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/index.js",
    "importStyle": "{defaultNuxtConfigFile}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "function",
    "name": "getDefaultNuxtConfig",
    "memberof": "packages/config/src/config/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/index.js~getDefaultNuxtConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/index.js",
    "importStyle": "{getDefaultNuxtConfig}",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{...undefined: Object, \"build\": *, \"messages\": *, \"modes\": *, \"render\": *, \"router\": *, \"server\": *, \"cli\": *, \"generate\": *}"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "file",
    "name": "packages/config/src/config/messages.js",
    "content": "export default () => ({\n  loading: 'Loading...',\n  error_404: 'This page could not be found',\n  server_error: 'Server error',\n  nuxtjs: 'Nuxt',\n  back_to_home: 'Back to the home page',\n  server_error_details:\n    'An error occurred in the application and your page could not be served. If you are the application owner, check your logs for details.',\n  client_error: 'Error',\n  client_error_details:\n    'An error occurred while rendering the page. Check developer tools console for details.'\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/messages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 276,
    "kind": "function",
    "name": "messages",
    "memberof": "packages/config/src/config/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/messages.js~messages",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/messages.js",
    "importStyle": "messages",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "file",
    "name": "packages/config/src/config/modes.js",
    "content": "import { MODES } from '@nuxt/utils'\n\nexport default () => ({\n  [MODES.universal]: {\n    build: {\n      ssr: true\n    },\n    render: {\n      ssr: true\n    }\n  },\n  [MODES.spa]: {\n    build: {\n      ssr: false\n    },\n    render: {\n      ssr: false\n    }\n  }\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/modes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "modes",
    "memberof": "packages/config/src/config/modes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/modes.js~modes",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/modes.js",
    "importStyle": "modes",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 279,
    "kind": "file",
    "name": "packages/config/src/config/render.js",
    "content": "// TODO: Refactor @nuxt/server related options into `server.js`\n\nexport default () => ({\n  bundleRenderer: {\n    shouldPrefetch: () => false,\n    shouldPreload: (fileWithoutQuery, asType) => ['script', 'style'].includes(asType),\n    runInNewContext: undefined\n  },\n  crossorigin: undefined,\n  resourceHints: true,\n  ssr: undefined,\n  ssrLog: undefined,\n  http2: {\n    push: false,\n    shouldPush: null,\n    pushAssets: null\n  },\n  static: {\n    prefix: true\n  },\n  compressor: {\n    threshold: 0\n  },\n  etag: {\n    weak: false\n  },\n  csp: false,\n  dist: {\n    // Don't serve index.html template\n    index: false,\n    // 1 year in production\n    maxAge: '1y'\n  },\n  // https://github.com/nuxt/serve-placeholder\n  fallback: {\n    dist: {},\n    static: {\n      skipUnknown: true,\n      handlers: {\n        '.htm': false,\n        '.html': false\n      }\n    }\n  }\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/render.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "render",
    "memberof": "packages/config/src/config/render.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/render.js~render",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/render.js",
    "importStyle": "render",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "packages/config/src/config/router.js",
    "content": "export default () => ({\n  mode: 'history',\n  base: '/',\n  routes: [],\n  routeNameSplitter: '-',\n  middleware: [],\n  linkActiveClass: 'nuxt-link-active',\n  linkExactActiveClass: 'nuxt-link-exact-active',\n  linkPrefetchedClass: false,\n  extendRoutes: null,\n  scrollBehavior: null,\n  parseQuery: false,\n  stringifyQuery: false,\n  fallback: false,\n  prefetchLinks: true,\n  prefetchPayloads: true,\n  trailingSlash: undefined\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/router.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "router",
    "memberof": "packages/config/src/config/router.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/router.js~router",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/router.js",
    "importStyle": "router",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 283,
    "kind": "file",
    "name": "packages/config/src/config/server.js",
    "content": "export default ({ env = {} } = {}) => ({\n  https: false,\n  port: env.NUXT_PORT ||\n    env.PORT ||\n    env.npm_package_config_nuxt_port ||\n    3000,\n  host: env.NUXT_HOST ||\n    env.HOST ||\n    env.npm_package_config_nuxt_host ||\n    'localhost',\n  socket: env.UNIX_SOCKET ||\n    env.npm_package_config_unix_socket,\n  timing: false\n})\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/config/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "server",
    "memberof": "packages/config/src/config/server.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/config/server.js~server",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/config/server.js",
    "importStyle": "server",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "optional": true,
        "types": [
          "{\"env\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 285,
    "kind": "file",
    "name": "packages/config/src/index.js",
    "content": "export { defaultNuxtConfigFile, getDefaultNuxtConfig } from './config'\nexport { getNuxtConfig } from './options'\nexport { loadNuxtConfig } from './load'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "file",
    "name": "packages/config/src/load.js",
    "content": "import path from 'path'\nimport fs from 'fs'\nimport defu from 'defu'\nimport consola from 'consola'\nimport dotenv from 'dotenv'\nimport { clearRequireCache, createRequire, scanRequireTree } from '@nuxt/utils'\nimport destr from 'destr'\nimport * as rc from 'rc9'\nimport { defaultNuxtConfigFile } from './config'\n\nexport async function loadNuxtConfig ({\n  rootDir = '.',\n  envConfig = {},\n  configFile = defaultNuxtConfigFile,\n  configContext = {},\n  configOverrides = {}\n} = {}) {\n  rootDir = path.resolve(rootDir)\n\n  const _require = createRequire(rootDir, true)\n\n  let options = {}\n\n  try {\n    configFile = _require.resolve(path.resolve(rootDir, configFile))\n  } catch (e) {\n    if (e.code !== 'MODULE_NOT_FOUND') {\n      throw (e)\n    } else if (configFile !== defaultNuxtConfigFile) {\n      consola.fatal('Config file not found: ' + configFile)\n    }\n    // Skip configFile if cannot resolve\n    configFile = undefined\n  }\n\n  // Load env\n  envConfig = {\n    dotenv: '.env',\n    env: process.env,\n    expand: true,\n    ...envConfig\n  }\n\n  const env = loadEnv(envConfig, rootDir)\n\n  // Fill process.env so it is accessible in nuxt.config\n  for (const key in env) {\n    if (!key.startsWith('_') && envConfig.env[key] === undefined) {\n      envConfig.env[key] = env[key]\n    }\n  }\n\n  if (configFile) {\n    // Clear cache\n    clearRequireCache(configFile)\n    options = _require(configFile) || {}\n    if (options.default) {\n      options = options.default\n    }\n\n    if (typeof options === 'function') {\n      try {\n        options = await options(configContext)\n        if (options.default) {\n          options = options.default\n        }\n      } catch (error) {\n        consola.error(error)\n        consola.fatal('Error while fetching async configuration')\n      }\n    }\n\n    // Don't mutate options export\n    options = { ...options }\n\n    // Keep _nuxtConfigFile for watching\n    options._nuxtConfigFile = configFile\n\n    // Keep all related files for watching\n    options._nuxtConfigFiles = Array.from(scanRequireTree(configFile))\n    if (!options._nuxtConfigFiles.includes(configFile)) {\n      options._nuxtConfigFiles.unshift(configFile)\n    }\n  }\n\n  if (typeof options.rootDir !== 'string') {\n    options.rootDir = rootDir\n  }\n\n  // Load Combine configs\n  // Priority: configOverrides > nuxtConfig > .nuxtrc > .nuxtrc (global)\n  options = defu(\n    configOverrides,\n    options,\n    rc.read({ name: '.nuxtrc', dir: options.rootDir }),\n    rc.readUser('.nuxtrc')\n  )\n\n  // Load env to options._env\n  options._env = env\n  options._envConfig = envConfig\n  if (configContext) { configContext.env = env }\n\n  // Expand and interpolate runtimeConfig from _env\n  if (envConfig.expand) {\n    for (const c of ['publicRuntimeConfig', 'privateRuntimeConfig']) {\n      if (options[c]) {\n        if (typeof options[c] === 'function') {\n          options[c] = options[c](env)\n        }\n        expand(options[c], env, destr)\n      }\n    }\n  }\n\n  return options\n}\n\nfunction loadEnv (envConfig, rootDir = process.cwd()) {\n  const env = Object.create(null)\n\n  // Read dotenv\n  if (envConfig.dotenv) {\n    envConfig.dotenv = path.resolve(rootDir, envConfig.dotenv)\n    if (fs.existsSync(envConfig.dotenv)) {\n      const parsed = dotenv.parse(fs.readFileSync(envConfig.dotenv, 'utf-8'))\n      Object.assign(env, parsed)\n    }\n  }\n\n  // Apply process.env\n  if (!envConfig.env._applied) {\n    Object.assign(env, envConfig.env)\n    envConfig.env._applied = true\n  }\n\n  // Interpolate env\n  if (envConfig.expand) {\n    expand(env)\n  }\n\n  return env\n}\n\n// Based on https://github.com/motdotla/dotenv-expand\nfunction expand (target, source = {}, parse = v => v) {\n  function getValue (key) {\n    // Source value 'wins' over target value\n    return source[key] !== undefined ? source[key] : target[key]\n  }\n\n  function interpolate (value, parents = []) {\n    if (typeof value !== 'string') {\n      return value\n    }\n    const matches = value.match(/(.?\\${?(?:[a-zA-Z0-9_:]+)?}?)/g) || []\n    return parse(matches.reduce((newValue, match) => {\n      const parts = /(.?)\\${?([a-zA-Z0-9_:]+)?}?/g.exec(match)\n      const prefix = parts[1]\n\n      let value, replacePart\n\n      if (prefix === '\\\\') {\n        replacePart = parts[0]\n        value = replacePart.replace('\\\\$', '$')\n      } else {\n        const key = parts[2]\n        replacePart = parts[0].substring(prefix.length)\n\n        // Avoid recursion\n        if (parents.includes(key)) {\n          consola.warn(`Please avoid recursive environment variables ( loop: ${parents.join(' > ')} > ${key} )`)\n          return ''\n        }\n\n        value = getValue(key)\n\n        // Resolve recursive interpolations\n        value = interpolate(value, [...parents, key])\n      }\n\n      return value !== undefined ? newValue.replace(replacePart, value) : newValue\n    }, value))\n  }\n\n  for (const key in target) {\n    target[key] = interpolate(getValue(key))\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/load.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "loadNuxtConfig",
    "memberof": "packages/config/src/load.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/config/src/load.js~loadNuxtConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/load.js",
    "importStyle": "{loadNuxtConfig}",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "loadEnv",
    "memberof": "packages/config/src/load.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/load.js~loadEnv",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/config/src/load.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "envConfig",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "rootDir",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "expand",
    "memberof": "packages/config/src/load.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/load.js~expand",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/config/src/load.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "target",
        "types": [
          "*"
        ]
      },
      {
        "name": "source",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "parse",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "packages/config/src/options.js",
    "content": "import path from 'path'\nimport fs from 'fs'\nimport { defaultsDeep, pick, uniq } from 'lodash'\nimport defu from 'defu'\nimport consola from 'consola'\nimport destr from 'destr'\nimport { TARGETS, MODES, createRequire, guardDir, isNonEmptyString, isPureObject, isUrl, getMainModule, getPKG } from '@nuxt/utils'\nimport { joinURL, normalizeURL, withTrailingSlash } from 'ufo'\nimport { defaultNuxtConfigFile, getDefaultNuxtConfig } from './config'\n\nexport function getNuxtConfig (_options) {\n  // Prevent duplicate calls\n  if (_options.__normalized__) {\n    return _options\n  }\n\n  // Clone options to prevent unwanted side-effects\n  const options = Object.assign({}, _options)\n  options.__normalized__ = true\n\n  // Normalize options\n  if (options.loading === true) {\n    delete options.loading\n  }\n\n  if (\n    options.router &&\n    options.router.middleware &&\n    !Array.isArray(options.router.middleware)\n  ) {\n    options.router.middleware = [options.router.middleware]\n  }\n\n  if (options.router && typeof options.router.base === 'string') {\n    options._routerBaseSpecified = true\n  }\n\n  // TODO: Remove for Nuxt 3\n  // router.scrollBehavior -> app/router.scrollBehavior.js\n  if (options.router && typeof options.router.scrollBehavior !== 'undefined') {\n    consola.warn('`router.scrollBehavior` property is deprecated in favor of using `~/app/router.scrollBehavior.js` file, learn more: https://nuxtjs.org/api/configuration-router#scrollbehavior')\n  }\n\n  // TODO: Remove for Nuxt 3\n  // transition -> pageTransition\n  if (typeof options.transition !== 'undefined') {\n    consola.warn('`transition` property is deprecated in favor of `pageTransition` and will be removed in Nuxt 3')\n    options.pageTransition = options.transition\n    delete options.transition\n  }\n\n  if (typeof options.pageTransition === 'string') {\n    options.pageTransition = { name: options.pageTransition }\n  }\n\n  if (typeof options.layoutTransition === 'string') {\n    options.layoutTransition = { name: options.layoutTransition }\n  }\n\n  if (typeof options.extensions === 'string') {\n    options.extensions = [options.extensions]\n  }\n\n  options.globalName = (isNonEmptyString(options.globalName) && /^[a-zA-Z]+$/.test(options.globalName))\n    ? options.globalName.toLowerCase()\n    // use `` for preventing replacing to nuxt-edge\n    : `nuxt`\n\n  // Resolve rootDir\n  options.rootDir = isNonEmptyString(options.rootDir) ? path.resolve(options.rootDir) : process.cwd()\n\n  // Apply defaults by ${buildDir}/dist/build.config.js\n  // TODO: Unsafe operation.\n  // const buildDir = options.buildDir || defaults.buildDir\n  // const buildConfig = resolve(options.rootDir, buildDir, 'build.config.js')\n  // if (existsSync(buildConfig)) {\n  //   defaultsDeep(options, require(buildConfig))\n  // }\n\n  // Apply defaults\n  const nuxtConfig = getDefaultNuxtConfig()\n\n  nuxtConfig.build._publicPath = nuxtConfig.build.publicPath\n\n  // Fall back to default if publicPath is falsy\n  if (options.build && !options.build.publicPath) {\n    options.build.publicPath = undefined\n  }\n\n  defaultsDeep(options, nuxtConfig)\n\n  // Target\n  options.target = options.target || 'server'\n  if (!Object.values(TARGETS).includes(options.target)) {\n    consola.warn(`Unknown target: ${options.target}. Falling back to server`)\n    options.target = 'server'\n  }\n\n  // Deprecate Mode\n  if (options.mode) {\n    if ((options.mode === MODES.universal && options.ssr) || (options.mode === MODES.spa && !options.ssr)) {\n      consola.warn('`mode` option is deprecated. You can safely remove it from `nuxt.config`')\n    } else {\n      consola.warn('`mode` option is deprecated. Please use `ssr: true` for universal mode or `ssr: false` for spa mode and remove `mode` from `nuxt.config`')\n    }\n  } else {\n    // For backward compat we need default value\n    options.mode = MODES.universal\n  }\n\n  // SSR root option\n  if (options.ssr === false) {\n    options.mode = MODES.spa\n  }\n\n  // Apply mode preset\n  const modePreset = options.modes[options.mode || MODES.universal]\n\n  if (!modePreset) {\n    consola.warn(`Unknown mode: ${options.mode}. Falling back to ${MODES.universal}`)\n  }\n  defaultsDeep(options, modePreset || options.modes[MODES.universal])\n\n  // Sanitize router.base\n  options.router.base = withTrailingSlash(normalizeURL(options.router.base))\n\n  // Legacy support for export\n  if (options.export) {\n    consola.warn('export option is deprecated and will be removed in a future version! Please switch to generate')\n    options.generate = defu(options.export, options.generate)\n  }\n  exports.export = options.generate\n\n  // Check srcDir and generate.dir existence\n  const hasSrcDir = isNonEmptyString(options.srcDir)\n  const hasGenerateDir = isNonEmptyString(options.generate.dir)\n\n  // Resolve srcDir\n  options.srcDir = hasSrcDir\n    ? path.resolve(options.rootDir, options.srcDir)\n    : options.rootDir\n\n  // Resolve buildDir\n  options.buildDir = path.resolve(options.rootDir, options.buildDir)\n\n  // Aliases\n  const { rootDir, srcDir, dir: { assets: assetsDir, static: staticDir } } = options\n  options.alias = {\n    '~~': rootDir,\n    '@@': rootDir,\n    '~': srcDir,\n    '@': srcDir,\n    [assetsDir]: path.join(srcDir, assetsDir),\n    [staticDir]: path.join(srcDir, staticDir),\n    ...options.alias\n  }\n\n  // Default value for _nuxtConfigFile\n  if (!options._nuxtConfigFile) {\n    options._nuxtConfigFile = path.resolve(options.rootDir, `${defaultNuxtConfigFile}.js`)\n  }\n\n  if (!options._nuxtConfigFiles) {\n    options._nuxtConfigFiles = [\n      options._nuxtConfigFile\n    ]\n  }\n\n  // Watch for config file changes\n  options.watch.push(...options._nuxtConfigFiles)\n\n  // Protect rootDir against buildDir\n  guardDir(options, 'rootDir', 'buildDir')\n\n  if (hasGenerateDir) {\n    // Resolve generate.dir\n    options.generate.dir = path.resolve(options.rootDir, options.generate.dir)\n\n    // Protect rootDir against buildDir\n    guardDir(options, 'rootDir', 'generate.dir')\n  }\n\n  if (hasSrcDir) {\n    // Protect srcDir against buildDir\n    guardDir(options, 'srcDir', 'buildDir')\n\n    if (hasGenerateDir) {\n      // Protect srcDir against generate.dir\n      guardDir(options, 'srcDir', 'generate.dir')\n    }\n  }\n\n  // Populate modulesDir\n  options.modulesDir = uniq(\n    getMainModule().paths.concat(\n      [].concat(options.modulesDir).map(dir => path.resolve(options.rootDir, dir))\n    )\n  )\n\n  const mandatoryExtensions = ['js', 'mjs']\n\n  options.extensions = mandatoryExtensions\n    .filter(ext => !options.extensions.includes(ext))\n    .concat(options.extensions)\n\n  // If app.html is defined, set the template path to the user template\n  if (options.appTemplatePath === undefined) {\n    options.appTemplatePath = path.resolve(options.buildDir, 'views/app.template.html')\n    if (fs.existsSync(path.join(options.srcDir, 'app.html'))) {\n      options.appTemplatePath = path.join(options.srcDir, 'app.html')\n    }\n  } else {\n    options.appTemplatePath = path.resolve(options.srcDir, options.appTemplatePath)\n  }\n\n  options.build.publicPath = options.build.publicPath.replace(/([^/])$/, '$1/')\n  options.build._publicPath = options.build._publicPath.replace(/([^/])$/, '$1/')\n\n  // Ignore publicPath on dev\n  if (options.dev && isUrl(options.build.publicPath)) {\n    options.build.publicPath = options.build._publicPath\n  }\n\n  // If store defined, update store options to true unless explicitly disabled\n  if (\n    options.store !== false &&\n    fs.existsSync(path.join(options.srcDir, options.dir.store)) &&\n    fs.readdirSync(path.join(options.srcDir, options.dir.store))\n      .find(filename => filename !== 'README.md' && filename[0] !== '.')\n  ) {\n    options.store = true\n  }\n\n  // SPA loadingIndicator\n  if (options.loadingIndicator) {\n    // Normalize loadingIndicator\n    if (!isPureObject(options.loadingIndicator)) {\n      options.loadingIndicator = { name: options.loadingIndicator }\n    }\n\n    // Apply defaults\n    options.loadingIndicator = Object.assign(\n      {\n        name: 'default',\n        color: (options.loading && options.loading.color) || '#D3D3D3',\n        color2: '#F5F5F5',\n        background: (options.manifest && options.manifest.theme_color) || 'white',\n        dev: options.dev,\n        loading: options.messages.loading\n      },\n      options.loadingIndicator\n    )\n  }\n\n  // Debug errors\n  if (options.debug === undefined) {\n    options.debug = options.dev\n  }\n\n  // Validate that etag.hash is a function, if not unset it\n  if (options.render.etag) {\n    const { hash } = options.render.etag\n    if (hash) {\n      const isFn = typeof hash === 'function'\n      if (!isFn) {\n        options.render.etag.hash = undefined\n\n        if (options.dev) {\n          consola.warn(`render.etag.hash should be a function, received ${typeof hash} instead`)\n        }\n      }\n    }\n  }\n\n  // Apply default hash to CSP option\n  if (options.render.csp) {\n    options.render.csp = defu(options.render.csp, {\n      hashAlgorithm: 'sha256',\n      allowedSources: undefined,\n      policies: undefined,\n      addMeta: Boolean(options.target === TARGETS.static),\n      unsafeInlineCompatibility: false,\n      reportOnly: options.debug\n    })\n\n    // TODO: Remove this if statement in Nuxt 3, we will stop supporting this typo (more on: https://github.com/nuxt/nuxt.js/pull/6583)\n    if (options.render.csp.unsafeInlineCompatiblity) {\n      consola.warn('Using `unsafeInlineCompatiblity` is deprecated and will be removed in Nuxt 3. Use `unsafeInlineCompatibility` instead.')\n      options.render.csp.unsafeInlineCompatibility = options.render.csp.unsafeInlineCompatiblity\n      delete options.render.csp.unsafeInlineCompatiblity\n    }\n  }\n\n  // cssSourceMap\n  if (options.build.cssSourceMap === undefined) {\n    options.build.cssSourceMap = options.dev\n  }\n\n  const babelConfig = options.build.babel\n  // babel cacheDirectory\n  if (babelConfig.cacheDirectory === undefined) {\n    babelConfig.cacheDirectory = options.dev\n  }\n\n  // TODO: remove this warn in Nuxt 3\n  if (Array.isArray(babelConfig.presets)) {\n    const warnPreset = (presetName) => {\n      const oldPreset = '@nuxtjs/babel-preset-app'\n      const newPreset = '@nuxt/babel-preset-app'\n      if (presetName.includes(oldPreset)) {\n        presetName = presetName.replace(oldPreset, newPreset)\n        consola.warn('@nuxtjs/babel-preset-app has been deprecated, please use @nuxt/babel-preset-app.')\n      }\n      return presetName\n    }\n    babelConfig.presets = babelConfig.presets.map((preset) => {\n      const hasOptions = Array.isArray(preset)\n      if (hasOptions) {\n        preset[0] = warnPreset(preset[0])\n      } else if (typeof preset === 'string') {\n        preset = warnPreset(preset)\n      }\n      return preset\n    })\n  }\n\n  // Vue config\n  const vueConfig = options.vue.config\n\n  if (vueConfig.silent === undefined) {\n    vueConfig.silent = !options.dev\n  }\n  if (vueConfig.performance === undefined) {\n    vueConfig.performance = options.dev\n  }\n\n  // merge custom env with variables\n  const eligibleEnvVariables = pick(process.env, Object.keys(process.env).filter(k => k.startsWith('NUXT_ENV_')))\n  Object.assign(options.env, eligibleEnvVariables)\n\n  // Normalize ignore\n  options.ignore = options.ignore ? [].concat(options.ignore) : []\n\n  // Append ignorePrefix glob to ignore\n  if (typeof options.ignorePrefix === 'string') {\n    options.ignore.push(`**/${options.ignorePrefix}*.*`)\n  }\n\n  // Compression middleware legacy\n  if (options.render.gzip) {\n    consola.warn('render.gzip is deprecated and will be removed in a future version! Please switch to render.compressor')\n    options.render.compressor = options.render.gzip\n    delete options.render.gzip\n  }\n\n  // If no server-side rendering, add appear true transition\n  if (options.render.ssr === false && options.pageTransition) {\n    options.pageTransition.appear = true\n  }\n\n  options.render.ssrLog = options.dev\n    ? options.render.ssrLog === undefined || options.render.ssrLog\n    : false\n\n  // We assume the SPA fallback path is 404.html (for GitHub Pages, Surge, etc.)\n  if (options.generate.fallback === true) {\n    options.generate.fallback = '404.html'\n  }\n\n  if (options.build.stats === 'none' || options.build.quiet === true) {\n    options.build.stats = false\n  }\n\n  // Vendor backward compatibility with nuxt 1.x\n  if (typeof options.build.vendor !== 'undefined') {\n    delete options.build.vendor\n    consola.warn('vendor has been deprecated due to webpack4 optimization')\n  }\n\n  // Disable CSS extraction due to incompatibility with thread-loader\n  if (options.build.extractCSS && options.build.parallel) {\n    options.build.parallel = false\n    consola.warn('extractCSS cannot work with parallel build due to limited work pool in thread-loader')\n  }\n\n  // build.extractCSS.allChunks has no effect\n  if (typeof options.build.extractCSS.allChunks !== 'undefined') {\n    consola.warn('build.extractCSS.allChunks has no effect from v2.0.0. Please use build.optimization.splitChunks settings instead.')\n  }\n\n  // devModules has been renamed to buildModules\n  if (typeof options.devModules !== 'undefined') {\n    consola.warn('`devModules` has been renamed to `buildModules` and will be removed in Nuxt 3.')\n    options.buildModules.push(...options.devModules)\n    delete options.devModules\n  }\n\n  // Enable minimize for production builds\n  if (options.build.optimization.minimize === undefined) {\n    options.build.optimization.minimize = !options.dev\n  }\n\n  // Enable optimizeCSS only when extractCSS is enabled\n  if (options.build.optimizeCSS === undefined) {\n    options.build.optimizeCSS = options.build.extractCSS ? {} : false\n  }\n\n  const { loaders } = options.build\n  const vueLoader = loaders.vue\n  if (vueLoader.productionMode === undefined) {\n    vueLoader.productionMode = !options.dev\n  }\n  const styleLoaders = [\n    'css', 'cssModules', 'less',\n    'sass', 'scss', 'stylus', 'vueStyle'\n  ]\n  for (const name of styleLoaders) {\n    const loader = loaders[name]\n    if (loader && loader.sourceMap === undefined) {\n      loader.sourceMap = Boolean(options.build.cssSourceMap)\n    }\n  }\n\n  options.build.transpile = [].concat(options.build.transpile || [])\n\n  if (options.build.quiet === true) {\n    consola.level = 0\n  }\n\n  // Use runInNewContext for dev mode by default\n  const { bundleRenderer } = options.render\n  if (typeof bundleRenderer.runInNewContext === 'undefined') {\n    bundleRenderer.runInNewContext = options.dev\n  }\n\n  // TODO: Remove this if statement in Nuxt 3\n  if (options.build.crossorigin) {\n    consola.warn('Using `build.crossorigin` is deprecated and will be removed in Nuxt 3. Please use `render.crossorigin` instead.')\n    options.render.crossorigin = options.build.crossorigin\n    delete options.build.crossorigin\n  }\n\n  const { timing } = options.server\n  if (timing) {\n    options.server.timing = { total: true, ...timing }\n  }\n\n  if (isPureObject(options.serverMiddleware)) {\n    options.serverMiddleware = Object.entries(options.serverMiddleware)\n      .map(([path, handler]) => ({ path, handler }))\n  }\n\n  // App config (internal for nuxt2 at this stage)\n  const useCDN = isUrl(options.build.publicPath) && !options.dev\n  options.app = defu(options.app, {\n    basePath: options.router.base,\n    assetsPath: useCDN ? '/' : joinURL(options.router.base, options.build.publicPath),\n    cdnURL: useCDN ? options.build.publicPath : null\n  })\n  // Expose app config to $config.app\n  options.publicRuntimeConfig = options.publicRuntimeConfig || {}\n  options.publicRuntimeConfig.app = options.app\n\n  // Generate staticAssets\n  const { staticAssets } = options.generate\n  if (!staticAssets.version) {\n    staticAssets.version = String(Math.round(Date.now() / 1000))\n  }\n  if (!staticAssets.base) {\n    staticAssets.base = joinURL(options.app.assetsPath, staticAssets.dir)\n  }\n  if (!staticAssets.versionBase) {\n    staticAssets.versionBase = joinURL(staticAssets.base, staticAssets.version)\n  }\n\n  // createRequire\n  const isJest = typeof jest !== 'undefined'\n  const defaultCreateRequire = isJest ? 'native' : 'jiti'\n\n  options.createRequire = process.env.NUXT_CREATE_REQUIRE || options.createRequire || defaultCreateRequire\n\n  if (options.createRequire === 'native' || options.createRequire === 'jiti') {\n    const useJiti = options.createRequire === 'jiti'\n    options.createRequire = p => createRequire(typeof p === 'string' ? p : p.filename, useJiti)\n  } else if (typeof options.createRequire !== 'function') {\n    throw new TypeError(\n      `Unsupported createRequire value ${options.createRequire}! Possible values: \"native\", \"jiti\", <Function>`\n    )\n  }\n\n  // Indicator\n  // Change boolean true to default nuxt value\n  if (options.build.indicator === true) {\n    options.build.indicator = nuxtConfig.build.indicator\n  }\n\n  // ----- Builtin modules -----\n\n  // Loading screen\n  // Force disable for production and programmatic users\n  if (!options.dev || !options._cli || !getPKG('@nuxt/loading-screen')) {\n    options.build.loadingScreen = false\n  }\n  if (options.build.loadingScreen) {\n    options._modules.push(['@nuxt/loading-screen', options.build.loadingScreen])\n  } else {\n    // When loadingScreen is disabled we should also disable build indicator\n    options.build.indicator = false\n  }\n\n  // Components Module\n  if (!options._start && getPKG('@nuxt/components')) {\n    options._modules.push('@nuxt/components')\n  }\n\n  // Nuxt Telemetry\n  if (\n    options.telemetry !== false &&\n    !options.test &&\n    !destr(process.env.NUXT_TELEMETRY_DISABLED) &&\n    getPKG('@nuxt/telemetry')\n  ) {\n    options._modules.push('@nuxt/telemetry')\n  }\n\n  return options\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/src/options.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "getNuxtConfig",
    "memberof": "packages/config/src/options.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/config/src/options.js~getNuxtConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/config/src/options.js",
    "importStyle": "{getNuxtConfig}",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "file",
    "name": "packages/config/test/fixtures/store/index.js",
    "content": "",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/config/test/fixtures/store/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 293,
    "kind": "file",
    "name": "packages/core/package.js",
    "content": "export default {\n  build: true\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/core/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 294,
    "kind": "file",
    "name": "packages/core/src/index.js",
    "content": "export { default as Module } from './module'\nexport { default as Nuxt } from './nuxt'\nexport { default as Resolver } from './resolver'\nexport { loadNuxtConfig } from '@nuxt/config'\nexport { loadNuxt } from './load'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/core/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 295,
    "kind": "file",
    "name": "packages/core/src/load.js",
    "content": "import { loadNuxtConfig } from '@nuxt/config'\nimport Nuxt from './nuxt'\n\nconst OVERRIDES = {\n  dry: { dev: false, server: false },\n  dev: { dev: true, _build: true },\n  build: { dev: false, server: false, _build: true },\n  start: { dev: false, _start: true }\n}\n\nexport async function loadNuxt (loadOptions) {\n  // Normalize loadOptions\n  if (typeof loadOptions === 'string') {\n    loadOptions = { for: loadOptions }\n  }\n  const { ready = true } = loadOptions\n  const _for = loadOptions.for || 'dry'\n\n  // Get overrides\n  const override = OVERRIDES[_for]\n\n  // Unsupported purpose\n  if (!override) {\n    throw new Error('Unsupported for: ' + _for)\n  }\n\n  // Load Config\n  const config = await loadNuxtConfig(loadOptions)\n\n  // Apply config overrides\n  Object.assign(config, override)\n\n  // Initiate Nuxt\n  const nuxt = new Nuxt(config)\n  if (ready) {\n    await nuxt.ready()\n  }\n\n  return nuxt\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/core/src/load.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "OVERRIDES",
    "memberof": "packages/core/src/load.js",
    "static": true,
    "longname": "packages/core/src/load.js~OVERRIDES",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/core/src/load.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{\"dry\": *, \"dev\": *, \"build\": *, \"start\": *}"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "loadNuxt",
    "memberof": "packages/core/src/load.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/core/src/load.js~loadNuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/core/src/load.js",
    "importStyle": "{loadNuxt}",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "loadOptions",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "packages/core/src/module.js",
    "content": "import path from 'path'\nimport fs from 'fs'\nimport hash from 'hash-sum'\nimport consola from 'consola'\n\nimport { chainFn, sequence } from '@nuxt/utils'\n\nexport default class ModuleContainer {\n  constructor (nuxt) {\n    this.nuxt = nuxt\n    this.options = nuxt.options\n    this.requiredModules = {}\n\n    // Self bind to allow destructre from container\n    for (const method of Object.getOwnPropertyNames(ModuleContainer.prototype)) {\n      if (typeof this[method] === 'function') {\n        this[method] = this[method].bind(this)\n      }\n    }\n  }\n\n  async ready () {\n    // Call before hook\n    await this.nuxt.callHook('modules:before', this, this.options.modules)\n\n    if (this.options.buildModules && !this.options._start) {\n      // Load every devModule in sequence\n      await sequence(this.options.buildModules, this.addModule)\n    }\n\n    // Load every module in sequence\n    await sequence(this.options.modules, this.addModule)\n\n    // Load ah-hoc modules last\n    await sequence(this.options._modules, this.addModule)\n\n    // Call done hook\n    await this.nuxt.callHook('modules:done', this)\n  }\n\n  addVendor () {\n    consola.warn('addVendor has been deprecated due to webpack4 optimization')\n  }\n\n  addTemplate (template) {\n    if (!template) {\n      throw new Error('Invalid template: ' + JSON.stringify(template))\n    }\n\n    // Validate & parse source\n    const src = template.src || template\n    const srcPath = path.parse(src)\n\n    if (typeof src !== 'string' || !fs.existsSync(src)) {\n      throw new Error('Template src not found: ' + src)\n    }\n\n    // Mostly for DX, some people prefers `filename` vs `fileName`\n    const fileName = template.fileName || template.filename\n    // Generate unique and human readable dst filename if not provided\n    const dst = fileName || `${path.basename(srcPath.dir)}.${srcPath.name}.${hash(src)}${srcPath.ext}`\n    // Add to templates list\n    const templateObj = {\n      src,\n      dst,\n      options: template.options\n    }\n\n    this.options.build.templates.push(templateObj)\n\n    return templateObj\n  }\n\n  addPlugin (template) {\n    const { dst } = this.addTemplate(template)\n\n    // Add to nuxt plugins\n    this.options.plugins.unshift({\n      src: path.join(this.options.buildDir, dst),\n      // TODO: remove deprecated option in Nuxt 3\n      ssr: template.ssr,\n      mode: template.mode\n    })\n  }\n\n  addLayout (template, name) {\n    const { dst, src } = this.addTemplate(template)\n    const layoutName = name || path.parse(src).name\n    const layout = this.options.layouts[layoutName]\n\n    if (layout) {\n      consola.warn(`Duplicate layout registration, \"${layoutName}\" has been registered as \"${layout}\"`)\n    }\n\n    // Add to nuxt layouts\n    this.options.layouts[layoutName] = `./${dst}`\n\n    // If error layout, set ErrorPage\n    if (name === 'error') {\n      this.addErrorLayout(dst)\n    }\n  }\n\n  addErrorLayout (dst) {\n    const relativeBuildDir = path.relative(this.options.rootDir, this.options.buildDir)\n    this.options.ErrorPage = `~/${relativeBuildDir}/${dst}`\n  }\n\n  addServerMiddleware (middleware) {\n    this.options.serverMiddleware.push(middleware)\n  }\n\n  extendBuild (fn) {\n    this.options.build.extend = chainFn(this.options.build.extend, fn)\n  }\n\n  extendRoutes (fn) {\n    this.options.router.extendRoutes = chainFn(\n      this.options.router.extendRoutes,\n      fn\n    )\n  }\n\n  requireModule (moduleOpts, { paths } = {}) {\n    return this.addModule(moduleOpts, undefined, { paths })\n  }\n\n  async addModule (moduleOpts, arg2, arg3) {\n    // Arg2 was previously used for requireOnce which is ignored now\n    const { paths } = { ...arg2, ...arg3 }\n    let src\n    let options\n    let handler\n\n    // Type 1: String or Function\n    if (typeof moduleOpts === 'string' || typeof moduleOpts === 'function') {\n      src = moduleOpts\n    } else if (Array.isArray(moduleOpts)) {\n      // Type 2: Babel style array\n      [src, options] = moduleOpts\n    } else if (typeof moduleOpts === 'object') {\n      // Type 3: Pure object\n      ({ src, options, handler } = moduleOpts)\n    }\n\n    // Define handler if src is a function\n    if (typeof src === 'function') {\n      handler = src\n    }\n\n    // Prevent adding buildModules-listed entries in production\n    if (this.options.buildModules.includes(handler) && this.options._start) {\n      return\n    }\n\n    // Resolve handler\n    if (!handler) {\n      try {\n        handler = this.nuxt.resolver.requireModule(src, { paths })\n        // pnp support\n        try { (global.__NUXT_PATHS__ || []).push(this.nuxt.resolver.resolvePath(src, { paths })) } catch (_err) {}\n      } catch (error) {\n        if (error.code !== 'MODULE_NOT_FOUND') {\n          throw error\n        }\n\n        // Hint only if entrypoint is not found and src is not local alias or path\n        if (error.message.includes(src) && !/^[~.]|^@\\//.test(src)) {\n          let message = 'Module `{name}` not found.'\n\n          if (this.options.buildModules.includes(src)) {\n            message += ' Please ensure `{name}` is in `devDependencies` and installed. HINT: During build step, for npm/yarn, `NODE_ENV=production` or `--production` should NOT be used.'.replace('{name}', src)\n          } else if (this.options.modules.includes(src)) {\n            message += ' Please ensure `{name}` is in `dependencies` and installed.'\n          }\n\n          message = message.replace(/{name}/g, src)\n\n          consola.warn(message)\n        }\n\n        if (this.options._cli) {\n          throw error\n        } else {\n          // TODO: Remove in next major version\n          consola.warn('Silently ignoring module as programatic usage detected.')\n          return\n        }\n      }\n    }\n\n    // Validate handler\n    if (typeof handler !== 'function') {\n      throw new TypeError('Module should export a function: ' + src)\n    }\n\n    // Ensure module is required once\n    const metaKey = handler.meta && handler.meta.name\n    const key = metaKey || src\n    if (typeof key === 'string') {\n      if (this.requiredModules[key]) {\n        if (!metaKey) {\n          // TODO: Skip with nuxt3\n          consola.warn('Modules should be only specified once:', key)\n        } else {\n          return\n        }\n      }\n      this.requiredModules[key] = { src, options, handler }\n    }\n\n    // Default module options to empty object\n    if (options === undefined) {\n      options = {}\n    }\n    const result = await handler.call(this, options)\n    return result\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/core/src/module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "class",
    "name": "ModuleContainer",
    "memberof": "packages/core/src/module.js",
    "static": true,
    "longname": "packages/core/src/module.js~ModuleContainer",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/core/src/module.js",
    "importStyle": "ModuleContainer",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 300,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "nuxt",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#nuxt",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "options",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#options",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "requiredModules",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#requiredModules",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "[method]",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#[method]",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "ready",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#ready",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [],
    "return": null
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "addVendor",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#addVendor",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [],
    "return": null
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "addTemplate",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#addTemplate",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "addPlugin",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#addPlugin",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "addLayout",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#addLayout",
    "access": "public",
    "description": "",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "addErrorLayout",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#addErrorLayout",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dst",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "addServerMiddleware",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#addServerMiddleware",
    "access": "public",
    "description": "",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "middleware",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "extendBuild",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#extendBuild",
    "access": "public",
    "description": "",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "extendRoutes",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#extendRoutes",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "requireModule",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#requireModule",
    "access": "public",
    "description": "",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleOpts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "addModule",
    "memberof": "packages/core/src/module.js~ModuleContainer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/core/src/module.js~ModuleContainer#addModule",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleOpts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "arg2",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "arg3",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "file",
    "name": "packages/core/src/nuxt.js",
    "content": "\nimport { isPlainObject } from 'lodash'\nimport consola from 'consola'\nimport Hookable from 'hable'\n\nimport { defineAlias } from '@nuxt/utils'\nimport { getNuxtConfig } from '@nuxt/config'\nimport { Server } from '@nuxt/server'\n\nimport { version } from '../package.json'\n\nimport ModuleContainer from './module'\nimport Resolver from './resolver'\n\nexport default class Nuxt extends Hookable {\n  constructor (options = {}) {\n    super(consola)\n\n    // Assign options and apply defaults\n    this.options = getNuxtConfig(options)\n\n    // Create instance of core components\n    this.resolver = new Resolver(this)\n    this.moduleContainer = new ModuleContainer(this)\n\n    // Deprecated hooks\n    this.deprecateHooks({\n      // #3294 - 7514db73b25c23b8c14ebdafbb4e129ac282aabd\n      'render:context': {\n        to: '_render:context',\n        message: '`render:context(nuxt)` is deprecated, Please use `vue-renderer:ssr:context(context)`'\n      },\n      // #3773\n      'render:routeContext': {\n        to: '_render:context',\n        message: '`render:routeContext(nuxt)` is deprecated, Please use `vue-renderer:ssr:context(context)`'\n      },\n      showReady: 'webpack:done',\n      // Introduced in 2.13\n      'export:done': 'generate:done',\n      'export:before': 'generate:before',\n      'export:extendRoutes': 'generate:extendRoutes',\n      'export:distRemoved': 'generate:distRemoved',\n      'export:distCopied': 'generate:distCopied',\n      'export:route': 'generate:route',\n      'export:routeFailed': 'generate:routeFailed',\n      'export:page': 'generate:page',\n      'export:routeCreated': 'generate:routeCreated'\n    })\n\n    // Add Legacy aliases\n    defineAlias(this, this.resolver, ['resolveAlias', 'resolvePath'])\n    this.showReady = () => { this.callHook('webpack:done') }\n\n    // Init server\n    if (this.options.server !== false) {\n      this._initServer()\n    }\n\n    // Call ready\n    if (this.options._ready !== false) {\n      this.ready().catch((err) => {\n        consola.fatal(err)\n      })\n    }\n  }\n\n  static get version () {\n    return `v${version}` + (global.__NUXT_DEV__ ? '-development' : '')\n  }\n\n  ready () {\n    if (!this._ready) {\n      this._ready = this._init()\n    }\n    return this._ready\n  }\n\n  async _init () {\n    if (this._initCalled) {\n      return this\n    }\n    this._initCalled = true\n\n    // Add hooks\n    if (isPlainObject(this.options.hooks)) {\n      this.addHooks(this.options.hooks)\n    } else if (typeof this.options.hooks === 'function') {\n      this.options.hooks(this.hook)\n    }\n\n    // Await for modules\n    await this.moduleContainer.ready()\n\n    // Await for server to be ready\n    if (this.server) {\n      await this.server.ready()\n    }\n\n    // Call ready hook\n    await this.callHook('ready', this)\n\n    return this\n  }\n\n  _initServer () {\n    if (this.server) {\n      return\n    }\n    this.server = new Server(this)\n    this.renderer = this.server\n    this.render = this.server.app\n    defineAlias(this, this.server, ['renderRoute', 'renderAndGetWindow', 'listen'])\n  }\n\n  async close (callback) {\n    await this.callHook('close', this)\n\n    if (typeof callback === 'function') {\n      await callback()\n    }\n\n    this.clearHooks()\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/core/src/nuxt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 317,
    "kind": "class",
    "name": "Nuxt",
    "memberof": "packages/core/src/nuxt.js",
    "static": true,
    "longname": "packages/core/src/nuxt.js~Nuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/core/src/nuxt.js",
    "importStyle": "Nuxt",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "hable~Hookable"
    ]
  },
  {
    "__docId__": 318,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "options",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#options",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "member",
    "name": "resolver",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#resolver",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "moduleContainer",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#moduleContainer",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "showReady",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#showReady",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "get",
    "name": "version",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/core/src/nuxt.js~Nuxt.version",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "ready",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#ready",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "_ready",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#_ready",
    "access": "private",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "_init",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#_init",
    "access": "private",
    "description": "",
    "lineNumber": 79,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "_initCalled",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#_initCalled",
    "access": "private",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "_initServer",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#_initServer",
    "access": "private",
    "description": "",
    "lineNumber": 106,
    "params": [],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "server",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#server",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "member",
    "name": "renderer",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#renderer",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "render",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#render",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "close",
    "memberof": "packages/core/src/nuxt.js~Nuxt",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/core/src/nuxt.js~Nuxt#close",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 333,
    "kind": "file",
    "name": "packages/core/src/resolver.js",
    "content": "import { resolve, join } from 'path'\nimport fs from 'fs-extra'\nimport consola from 'consola'\n\nimport {\n  createRequire,\n  startsWithRootAlias,\n  startsWithSrcAlias,\n  isExternalDependency,\n  clearRequireCache\n} from '@nuxt/utils'\n\nexport default class Resolver {\n  constructor (nuxt) {\n    this.nuxt = nuxt\n    this.options = this.nuxt.options\n\n    // Binds\n    this.resolvePath = this.resolvePath.bind(this)\n    this.resolveAlias = this.resolveAlias.bind(this)\n    this.resolveModule = this.resolveModule.bind(this)\n    this.requireModule = this.requireModule.bind(this)\n\n    this._createRequire = this.options.createRequire || createRequire\n    this._require = this._createRequire(__filename)\n  }\n\n  resolveModule (path, { paths } = {}) {\n    try {\n      return this._require.resolve(path, {\n        paths: [].concat(paths || [], this.options.modulesDir, global.__NUXT_PATHS__ || [], process.cwd())\n      })\n    } catch (error) {\n      if (error.code !== 'MODULE_NOT_FOUND') {\n        throw error\n      }\n    }\n  }\n\n  resolveAlias (path) {\n    if (startsWithRootAlias(path)) {\n      return join(this.options.rootDir, path.substr(2))\n    }\n\n    if (startsWithSrcAlias(path)) {\n      return join(this.options.srcDir, path.substr(1))\n    }\n\n    return resolve(this.options.srcDir, path)\n  }\n\n  resolvePath (path, { alias, isAlias = alias, module, isModule = module, isStyle, paths } = {}) {\n    // TODO: Remove in Nuxt 3\n    if (alias) {\n      consola.warn('Using alias is deprecated and will be removed in Nuxt 3. Use `isAlias` instead.')\n    }\n    if (module) {\n      consola.warn('Using module is deprecated and will be removed in Nuxt 3. Use `isModule` instead.')\n    }\n\n    // Fast return in case of path exists\n    if (fs.existsSync(path)) {\n      return path\n    }\n\n    let resolvedPath\n\n    // Try to resolve it as a regular module\n    if (isModule !== false) {\n      resolvedPath = this.resolveModule(path, { paths })\n    }\n\n    // Try to resolve alias\n    if (!resolvedPath && isAlias !== false) {\n      resolvedPath = this.resolveAlias(path)\n    }\n\n    // Use path for resolvedPath\n    if (!resolvedPath) {\n      resolvedPath = path\n    }\n\n    let isDirectory\n\n    // Check if resolvedPath exits and is not a directory\n    if (fs.existsSync(resolvedPath)) {\n      isDirectory = fs.lstatSync(resolvedPath).isDirectory()\n\n      if (!isDirectory) {\n        return resolvedPath\n      }\n    }\n\n    const extensions = isStyle ? this.options.styleExtensions : this.options.extensions\n\n    // Check if any resolvedPath.[ext] or resolvedPath/index.[ext] exists\n    for (const ext of extensions) {\n      if (!isDirectory && fs.existsSync(resolvedPath + '.' + ext)) {\n        return resolvedPath + '.' + ext\n      }\n\n      const resolvedPathwithIndex = join(resolvedPath, 'index.' + ext)\n      if (isDirectory && fs.existsSync(resolvedPathwithIndex)) {\n        return resolvedPathwithIndex\n      }\n    }\n\n    // If there's no index.[ext] we just return the directory path\n    if (isDirectory) {\n      return resolvedPath\n    }\n\n    // Give up\n    throw new Error(`Cannot resolve \"${path}\" from \"${resolvedPath}\"`)\n  }\n\n  requireModule (path, { alias, isAlias = alias, intropDefault, interopDefault = intropDefault, paths } = {}) {\n    let resolvedPath = path\n    let requiredModule\n\n    // TODO: Remove in Nuxt 3\n    if (intropDefault) {\n      consola.warn('Using intropDefault is deprecated and will be removed in Nuxt 3. Use `interopDefault` instead.')\n    }\n    if (alias) {\n      consola.warn('Using alias is deprecated and will be removed in Nuxt 3. Use `isAlias` instead.')\n    }\n\n    let lastError\n\n    // Try to resolve path\n    try {\n      resolvedPath = this.resolvePath(path, { isAlias, paths })\n    } catch (e) {\n      lastError = e\n    }\n\n    const isExternal = isExternalDependency(resolvedPath)\n\n    // in dev mode make sure to clear the require cache so after\n    // a dev server restart any changed file is reloaded\n    if (this.options.dev && !isExternal) {\n      clearRequireCache(resolvedPath)\n    }\n\n    // Try to require\n    try {\n      requiredModule = this._require(resolvedPath)\n    } catch (e) {\n      lastError = e\n    }\n\n    // Interop default\n    if (interopDefault !== false && requiredModule && requiredModule.default) {\n      requiredModule = requiredModule.default\n    }\n\n    // Throw error if failed to require\n    if (requiredModule === undefined && lastError) {\n      throw lastError\n    }\n\n    return requiredModule\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/core/src/resolver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 334,
    "kind": "class",
    "name": "Resolver",
    "memberof": "packages/core/src/resolver.js",
    "static": true,
    "longname": "packages/core/src/resolver.js~Resolver",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/core/src/resolver.js",
    "importStyle": "Resolver",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 335,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 336,
    "kind": "member",
    "name": "nuxt",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#nuxt",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "options",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#options",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "member",
    "name": "_createRequire",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#_createRequire",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "member",
    "name": "_require",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#_require",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "resolveModule",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#resolveModule",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "resolveAlias",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#resolveAlias",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "resolvePath",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#resolvePath",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "requireModule",
    "memberof": "packages/core/src/resolver.js~Resolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/core/src/resolver.js~Resolver#requireModule",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "packages/core/test/__modules__/__resolver__.js",
    "content": "",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/core/test/__modules__/__resolver__.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "file",
    "name": "packages/generator/package.js",
    "content": "export default {\n  build: true\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/generator/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 350,
    "kind": "file",
    "name": "packages/generator/src/generator.js",
    "content": "import path from 'path'\nimport chalk from 'chalk'\nimport consola from 'consola'\nimport devalue from 'devalue'\nimport fsExtra from 'fs-extra'\nimport defu from 'defu'\nimport htmlMinifier from 'html-minifier'\nimport { parse } from 'node-html-parser'\nimport { withTrailingSlash, withoutTrailingSlash } from 'ufo'\n\nimport { isFullStatic, flatRoutes, isString, isUrl, promisifyRoute, urlJoin, waitFor, requireModule } from '@nuxt/utils'\n\nexport default class Generator {\n  constructor (nuxt, builder) {\n    this.nuxt = nuxt\n    this.options = nuxt.options\n    this.builder = builder\n\n    // Set variables\n    this.isFullStatic = isFullStatic(this.options)\n    if (this.isFullStatic) {\n      consola.info(`Full static generation activated`)\n    }\n    this.staticRoutes = path.resolve(this.options.srcDir, this.options.dir.static)\n    this.srcBuiltPath = path.resolve(this.options.buildDir, 'dist', 'client')\n    this.distPath = this.options.generate.dir\n    this.distNuxtPath = path.join(\n      this.distPath,\n      isUrl(this.options.build.publicPath) ? '' : this.options.build.publicPath\n    )\n    // Payloads for full static\n    if (this.isFullStatic) {\n      const { staticAssets, manifest } = this.options.generate\n      this.staticAssetsDir = path.resolve(this.distNuxtPath, staticAssets.dir, staticAssets.version)\n      this.staticAssetsBase = urlJoin(this.options.app.cdnURL, this.options.generate.staticAssets.versionBase)\n      if (manifest) {\n        this.manifest = defu(manifest, {\n          routes: []\n        })\n      }\n    }\n\n    // Shared payload\n    this._payload = null\n    this.setPayload = (payload) => {\n      this._payload = defu(payload, this._payload)\n    }\n  }\n\n  async generate ({ build = true, init = true } = {}) {\n    consola.debug('Initializing generator...')\n    await this.initiate({ build, init })\n\n    consola.debug('Preparing routes for generate...')\n    const routes = await this.initRoutes()\n\n    consola.info('Generating pages' + (this.isFullStatic ? ' with full static mode' : ''))\n    const errors = await this.generateRoutes(routes)\n\n    await this.afterGenerate()\n\n    // Save routes manifest for full static\n    if (this.manifest) {\n      await this.nuxt.callHook('generate:manifest', this.manifest, this)\n      const manifestPath = path.join(this.staticAssetsDir, 'manifest.js')\n      await fsExtra.ensureDir(this.staticAssetsDir)\n      await fsExtra.writeFile(manifestPath, `__NUXT_JSONP__(\"manifest.js\", ${devalue(this.manifest)})`, 'utf-8')\n      consola.success('Static manifest generated')\n    }\n\n    // Done hook\n    await this.nuxt.callHook('generate:done', this, errors)\n    await this.nuxt.callHook('export:done', this, { errors })\n\n    return { errors }\n  }\n\n  async initiate ({ build = true, init = true } = {}) {\n    // Wait for nuxt be ready\n    await this.nuxt.ready()\n\n    // Call before hook\n    await this.nuxt.callHook('generate:before', this, this.options.generate)\n    await this.nuxt.callHook('export:before', this)\n\n    if (build) {\n      // Add flag to set process.static\n      this.builder.forGenerate()\n\n      // Start build process\n      await this.builder.build()\n    } else {\n      const hasBuilt = await fsExtra.exists(path.resolve(this.options.buildDir, 'dist', 'server', 'client.manifest.json'))\n      if (!hasBuilt) {\n        throw new Error(\n          `No build files found in ${this.srcBuiltPath}.\\nPlease run \\`nuxt build\\``\n        )\n      }\n    }\n\n    // Initialize dist directory\n    if (init) {\n      await this.initDist()\n    }\n  }\n\n  async initRoutes (...args) {\n    // Resolve config.generate.routes promises before generating the routes\n    let generateRoutes = []\n    if (this.options.router.mode !== 'hash') {\n      try {\n        generateRoutes = await promisifyRoute(\n          this.options.generate.routes || [],\n          ...args\n        )\n      } catch (e) {\n        consola.error('Could not resolve routes')\n        throw e // eslint-disable-line no-unreachable\n      }\n    }\n    let routes = []\n    // Generate only index.html for router.mode = 'hash' or client-side apps\n    if (this.options.router.mode === 'hash') {\n      routes = ['/']\n    } else {\n      try {\n        routes = flatRoutes(this.getAppRoutes())\n      } catch (err) {\n        // Case: where we use custom router.js\n        // https://github.com/nuxt-community/router-module/issues/83\n        routes = ['/']\n      }\n    }\n    routes = routes.filter(route => this.shouldGenerateRoute(route))\n    routes = this.decorateWithPayloads(routes, generateRoutes)\n\n    // extendRoutes hook\n    await this.nuxt.callHook('generate:extendRoutes', routes)\n    await this.nuxt.callHook('export:extendRoutes', { routes })\n\n    return routes\n  }\n\n  shouldGenerateRoute (route) {\n    return this.options.generate.exclude.every((regex) => {\n      if (typeof regex === 'string') {\n        return regex !== route\n      }\n      return !regex.test(route)\n    })\n  }\n\n  getBuildConfig () {\n    try {\n      return requireModule(path.join(this.options.buildDir, 'nuxt/config.json'))\n    } catch (err) {\n      return null\n    }\n  }\n\n  getAppRoutes () {\n    return requireModule(path.join(this.options.buildDir, 'routes.json'))\n  }\n\n  async generateRoutes (routes) {\n    const errors = []\n\n    this.routes = []\n    this.generatedRoutes = new Set()\n\n    routes.forEach(({ route, ...props }) => {\n      route = decodeURI(this.normalizeSlash(route))\n      this.routes.push({ route, ...props })\n      // Add routes to the tracked generated routes (for crawler)\n      this.generatedRoutes.add(route)\n    })\n\n    // Start generate process\n    while (this.routes.length) {\n      let n = 0\n      await Promise.all(\n        this.routes\n          .splice(0, this.options.generate.concurrency)\n          .map(async ({ route, payload }) => {\n            await waitFor(n++ * this.options.generate.interval)\n            await this.generateRoute({ route, payload, errors })\n          })\n      )\n    }\n\n    // Improve string representation for errors\n    // TODO: Use consola for more consistency\n    errors.toString = () => this._formatErrors(errors)\n\n    return errors\n  }\n\n  _formatErrors (errors) {\n    return errors\n      .map(({ type, route, error }) => {\n        const isHandled = type === 'handled'\n        const color = isHandled ? 'yellow' : 'red'\n\n        let line = chalk[color](` ${route}\\n\\n`)\n\n        if (isHandled) {\n          line += chalk.grey(JSON.stringify(error, undefined, 2) + '\\n')\n        } else {\n          line += chalk.grey(error.stack || error.message || `${error}`)\n        }\n\n        return line\n      })\n      .join('\\n')\n  }\n\n  async afterGenerate () {\n    const { fallback } = this.options.generate\n\n    // Disable SPA fallback if value isn't a non-empty string\n    if (typeof fallback !== 'string' || !fallback) {\n      return\n    }\n\n    const fallbackPath = path.join(this.distPath, fallback)\n\n    // Prevent conflicts\n    if (await fsExtra.exists(fallbackPath)) {\n      consola.warn(`SPA fallback was configured, but the configured path (${fallbackPath}) already exists.`)\n      return\n    }\n\n    // Render and write the SPA template to the fallback path\n    let { html } = await this.nuxt.server.renderRoute('/', {\n      spa: true,\n      staticAssetsBase: this.staticAssetsBase\n    })\n\n    try {\n      html = this.minifyHtml(html)\n    } catch (error) {\n      consola.warn('HTML minification failed for SPA fallback')\n    }\n\n    await fsExtra.writeFile(fallbackPath, html, 'utf8')\n    consola.success('Client-side fallback created: `' + fallback + '`')\n  }\n\n  async initDist () {\n    // Clean destination folder\n    await fsExtra.emptyDir(this.distPath)\n\n    consola.info(`Generating output directory: ${path.basename(this.distPath)}/`)\n    await this.nuxt.callHook('generate:distRemoved', this)\n    await this.nuxt.callHook('export:distRemoved', this)\n\n    // Copy static and built files\n    if (await fsExtra.exists(this.staticRoutes)) {\n      await fsExtra.copy(this.staticRoutes, this.distPath)\n    }\n    // Copy .nuxt/dist/client/ to dist/_nuxt/\n    await fsExtra.copy(this.srcBuiltPath, this.distNuxtPath)\n\n    if (this.payloadDir) {\n      await fsExtra.ensureDir(this.payloadDir)\n    }\n\n    // Add .nojekyll file to let GitHub Pages add the _nuxt/ folder\n    // https://help.github.com/articles/files-that-start-with-an-underscore-are-missing/\n    if (this.options.generate.nojekyll) {\n      const nojekyllPath = path.resolve(this.distPath, '.nojekyll')\n      await fsExtra.writeFile(nojekyllPath, '')\n    }\n\n    await this.nuxt.callHook('generate:distCopied', this)\n    await this.nuxt.callHook('export:distCopied', this)\n  }\n\n  normalizeSlash (route) {\n    return this.options.router && this.options.router.trailingSlash ? withTrailingSlash(route) : withoutTrailingSlash(route)\n  }\n\n  decorateWithPayloads (routes, generateRoutes) {\n    const routeMap = {}\n    // Fill routeMap for known routes\n    routes.forEach((route) => {\n      routeMap[route] = { route: this.normalizeSlash(route), payload: null }\n    })\n    // Fill routeMap with given generate.routes\n    generateRoutes.forEach((route) => {\n      // route is either a string or like { route : '/my_route/1', payload: {} }\n      const path = isString(route) ? route : route.route\n      routeMap[path] = {\n        route: this.normalizeSlash(path),\n        payload: route.payload || null\n      }\n    })\n    return Object.values(routeMap)\n  }\n\n  async generateRoute ({ route, payload = {}, errors = [] }) {\n    let html\n    const pageErrors = []\n\n    route = this.normalizeSlash(route)\n\n    const setPayload = (_payload) => {\n      payload = defu(_payload, payload)\n    }\n\n    // Apply shared payload\n    if (this._payload) {\n      payload = defu(payload, this._payload)\n    }\n\n    await this.nuxt.callHook('generate:route', { route, setPayload })\n    await this.nuxt.callHook('export:route', { route, setPayload })\n\n    try {\n      const renderContext = {\n        payload,\n        staticAssetsBase: this.staticAssetsBase\n      }\n      const res = await this.nuxt.server.renderRoute(route, renderContext)\n      html = res.html\n\n      // If crawler activated and called from generateRoutes()\n      if (this.options.generate.crawler && this.options.render.ssr) {\n        parse(html).querySelectorAll('a').map((el) => {\n          const sanitizedHref = (el.getAttribute('href') || '')\n            .replace(this.options.router.base, '/')\n            .split('?')[0]\n            .split('#')[0]\n            .replace(/\\/+$/, '')\n            .trim()\n\n          const foundRoute = decodeURI(this.normalizeSlash(sanitizedHref))\n\n          if (foundRoute.startsWith('/') && !foundRoute.startsWith('//') && !path.extname(foundRoute) && this.shouldGenerateRoute(foundRoute) && !this.generatedRoutes.has(foundRoute)) {\n            this.generatedRoutes.add(foundRoute)\n            this.routes.push({ route: foundRoute })\n          }\n          return null\n        })\n      }\n\n      // Save Static Assets\n      if (this.staticAssetsDir && renderContext.staticAssets) {\n        for (const asset of renderContext.staticAssets) {\n          const assetPath = path.join(this.staticAssetsDir, decodeURI(asset.path))\n          await fsExtra.ensureDir(path.dirname(assetPath))\n          await fsExtra.writeFile(assetPath, asset.src, 'utf-8')\n        }\n        // Add route to manifest (only if no error and redirect)\n        if (this.manifest && (!res.error && !res.redirected)) {\n          this.manifest.routes.push(withoutTrailingSlash(route))\n        }\n      }\n\n      // SPA fallback\n      if (res.error) {\n        pageErrors.push({ type: 'handled', route, error: res.error })\n      }\n    } catch (err) {\n      pageErrors.push({ type: 'unhandled', route, error: err })\n      errors.push(...pageErrors)\n\n      await this.nuxt.callHook('generate:routeFailed', { route, errors: pageErrors })\n      await this.nuxt.callHook('export:routeFailed', { route, errors: pageErrors })\n      consola.error(this._formatErrors(pageErrors))\n\n      return false\n    }\n\n    try {\n      html = this.minifyHtml(html)\n    } catch (err) {\n      const minifyErr = new Error(\n        `HTML minification failed. Make sure the route generates valid HTML. Failed HTML:\\n ${html}`\n      )\n      pageErrors.push({ type: 'unhandled', route, error: minifyErr })\n    }\n\n    let fileName\n\n    if (this.options.generate.subFolders) {\n      fileName = route === '/404'\n        ? path.join(path.sep, '404.html') // /404 -> /404.html\n        : path.join(route, path.sep, 'index.html') // /about -> /about/index.html\n    } else {\n      const normalizedRoute = route.replace(/\\/$/, '')\n      fileName = route.length > 1 ? path.join(path.sep, normalizedRoute + '.html') : path.join(path.sep, 'index.html')\n    }\n\n    // Call hook to let user update the path & html\n    const page = {\n      route,\n      path: fileName,\n      html,\n      exclude: false,\n      errors: pageErrors\n    }\n    page.page = page // Backward compatibility for export:page hook\n    await this.nuxt.callHook('generate:page', page)\n\n    if (page.exclude) {\n      return false\n    }\n    page.path = path.join(this.distPath, page.path)\n\n    // Make sure the sub folders are created\n    await fsExtra.mkdirp(path.dirname(page.path))\n    await fsExtra.writeFile(page.path, page.html, 'utf8')\n\n    await this.nuxt.callHook('generate:routeCreated', { route, path: page.path, errors: pageErrors })\n    await this.nuxt.callHook('export:routeCreated', { route, path: page.path, errors: pageErrors })\n\n    if (pageErrors.length) {\n      consola.error(`Error generating route \"${route}\": ${pageErrors.map(e => e.error.message).join(', ')}`)\n      errors.push(...pageErrors)\n    } else {\n      consola.success(`Generated route \"${route}\"`)\n    }\n\n    return true\n  }\n\n  minifyHtml (html) {\n    let minificationOptions = this.options.build.html.minify\n\n    // Legacy: Override minification options with generate.minify if present\n    // TODO: Remove in Nuxt version 3\n    if (typeof this.options.generate.minify !== 'undefined') {\n      minificationOptions = this.options.generate.minify\n      consola.warn('generate.minify has been deprecated and will be removed in the next major version.' +\n        ' Use build.html.minify instead!')\n    }\n\n    if (!minificationOptions) {\n      return html\n    }\n\n    return htmlMinifier.minify(html, minificationOptions)\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/generator/src/generator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "Generator",
    "memberof": "packages/generator/src/generator.js",
    "static": true,
    "longname": "packages/generator/src/generator.js~Generator",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/generator/src/generator.js",
    "importStyle": "Generator",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 352,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "builder",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 353,
    "kind": "member",
    "name": "nuxt",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#nuxt",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "member",
    "name": "options",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#options",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "builder",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#builder",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "member",
    "name": "isFullStatic",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#isFullStatic",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "staticRoutes",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#staticRoutes",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "srcBuiltPath",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#srcBuiltPath",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "distPath",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#distPath",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "distNuxtPath",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#distNuxtPath",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "staticAssetsDir",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#staticAssetsDir",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "member",
    "name": "staticAssetsBase",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#staticAssetsBase",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "member",
    "name": "manifest",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#manifest",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "member",
    "name": "_payload",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#_payload",
    "access": "private",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "name": "setPayload",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#setPayload",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "generate",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#generate",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"errors\": *}"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "initiate",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#initiate",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "initRoutes",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#initRoutes",
    "access": "public",
    "description": "",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "shouldGenerateRoute",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#shouldGenerateRoute",
    "access": "public",
    "description": "",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "getBuildConfig",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#getBuildConfig",
    "access": "public",
    "description": "",
    "lineNumber": 153,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "getAppRoutes",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#getAppRoutes",
    "access": "public",
    "description": "",
    "lineNumber": 161,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "generateRoutes",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#generateRoutes",
    "access": "public",
    "description": "",
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "routes",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "member",
    "name": "routes",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#routes",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "member",
    "name": "generatedRoutes",
    "memberof": "packages/generator/src/generator.js~Generator",
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#generatedRoutes",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "_formatErrors",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#_formatErrors",
    "access": "private",
    "description": "",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "errors",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "afterGenerate",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#afterGenerate",
    "access": "public",
    "description": "",
    "lineNumber": 217,
    "params": [],
    "return": null
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "initDist",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#initDist",
    "access": "public",
    "description": "",
    "lineNumber": 249,
    "params": [],
    "return": null
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "normalizeSlash",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#normalizeSlash",
    "access": "public",
    "description": "",
    "lineNumber": 279,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "decorateWithPayloads",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#decorateWithPayloads",
    "access": "public",
    "description": "",
    "lineNumber": 283,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "routes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "generateRoutes",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "generateRoute",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#generateRoute",
    "access": "public",
    "description": "",
    "lineNumber": 301,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "minifyHtml",
    "memberof": "packages/generator/src/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/generator/src/generator.js~Generator#minifyHtml",
    "access": "public",
    "description": "",
    "lineNumber": 428,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "file",
    "name": "packages/generator/src/index.js",
    "content": "import Generator from './generator'\nexport { default as Generator } from './generator'\n\nexport function getGenerator (nuxt) {\n  return new Generator(nuxt)\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/generator/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 384,
    "kind": "function",
    "name": "getGenerator",
    "memberof": "packages/generator/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/generator/src/index.js~getGenerator",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/generator/src/index.js",
    "importStyle": "{getGenerator}",
    "description": "",
    "lineNumber": 4,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "file",
    "name": "packages/generator/test/__utils__/index.js",
    "content": "import { resolve } from 'path'\nimport env from 'std-env'\n\nconst isWin = env.windows\n\nconst rootDir = isWin ? 'C:\\\\nuxt' : '/var/nuxt'\n\nexport const createNuxt = () => ({\n  ready: jest.fn(),\n  callHook: jest.fn(),\n  server: {\n    renderRoute: jest.fn(() => ({ html: 'rendered html' }))\n  },\n  options: {\n    mode: 'universal',\n    srcDir: resolve(rootDir, 'src'),\n    buildDir: resolve(rootDir, 'build'),\n    generate: { dir: resolve(rootDir, 'generate') },\n    build: { publicPath: '__public' },\n    dir: { static: resolve(rootDir, 'static') },\n    render: {}\n  }\n})\n\nexport function hookCalls (nuxt, name) {\n  return nuxt.callHook.mock.calls.filter(c => c[0] === name).map(c => c.splice(1))\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/generator/test/__utils__/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 386,
    "kind": "variable",
    "name": "isWin",
    "memberof": "packages/generator/test/__utils__/index.js",
    "static": true,
    "longname": "packages/generator/test/__utils__/index.js~isWin",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/generator/test/__utils__/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "variable",
    "name": "rootDir",
    "memberof": "packages/generator/test/__utils__/index.js",
    "static": true,
    "longname": "packages/generator/test/__utils__/index.js~rootDir",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/generator/test/__utils__/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "function",
    "name": "createNuxt",
    "memberof": "packages/generator/test/__utils__/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/generator/test/__utils__/index.js~createNuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/generator/test/__utils__/index.js",
    "importStyle": "{createNuxt}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 389,
    "kind": "function",
    "name": "hookCalls",
    "memberof": "packages/generator/test/__utils__/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/generator/test/__utils__/index.js~hookCalls",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/generator/test/__utils__/index.js",
    "importStyle": "{hookCalls}",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "file",
    "name": "packages/server/package.js",
    "content": "export default {\n  build: true,\n  externals: ['jsdom']\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 391,
    "kind": "file",
    "name": "packages/server/src/context.js",
    "content": "export default class ServerContext {\n  constructor (server) {\n    this.nuxt = server.nuxt\n    this.globals = server.globals\n    this.options = server.options\n    this.resources = server.resources\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/context.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 392,
    "kind": "class",
    "name": "ServerContext",
    "memberof": "packages/server/src/context.js",
    "static": true,
    "longname": "packages/server/src/context.js~ServerContext",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/server/src/context.js",
    "importStyle": "ServerContext",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 393,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/server/src/context.js~ServerContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/context.js~ServerContext#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 2,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "server",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 394,
    "kind": "member",
    "name": "nuxt",
    "memberof": "packages/server/src/context.js~ServerContext",
    "static": false,
    "longname": "packages/server/src/context.js~ServerContext#nuxt",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "member",
    "name": "globals",
    "memberof": "packages/server/src/context.js~ServerContext",
    "static": false,
    "longname": "packages/server/src/context.js~ServerContext#globals",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "options",
    "memberof": "packages/server/src/context.js~ServerContext",
    "static": false,
    "longname": "packages/server/src/context.js~ServerContext#options",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "member",
    "name": "resources",
    "memberof": "packages/server/src/context.js~ServerContext",
    "static": false,
    "longname": "packages/server/src/context.js~ServerContext#resources",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 398,
    "kind": "file",
    "name": "packages/server/src/index.js",
    "content": "export { default as Server } from './server'\nexport { default as Listener } from './listener'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 399,
    "kind": "file",
    "name": "packages/server/src/jsdom.js",
    "content": "import consola from 'consola'\nimport { timeout } from '@nuxt/utils'\n\nexport default async function renderAndGetWindow (\n  url = 'http://localhost:3000',\n  jsdomOpts = {},\n  {\n    loadedCallback,\n    loadingTimeout = 2000,\n    globals\n  } = {}\n) {\n  const jsdom = await import('jsdom')\n    .then(m => m.default || m)\n    .catch((e) => {\n      consola.error(`\n         jsdom is not installed. Please install jsdom with:\n          $ yarn add --dev jsdom\n          OR\n          $ npm install --dev jsdom\n        `)\n      throw e\n    })\n\n  const options = Object.assign({\n    // Load subresources (https://github.com/tmpvar/jsdom#loading-subresources)\n    resources: 'usable',\n    runScripts: 'dangerously',\n    virtualConsole: true,\n    beforeParse (window) {\n      // Mock window.scrollTo\n      window.scrollTo = () => {}\n    }\n  }, jsdomOpts)\n\n  const jsdomErrHandler = (err) => {\n    throw err\n  }\n\n  if (options.virtualConsole) {\n    if (options.virtualConsole === true) {\n      options.virtualConsole = new jsdom.VirtualConsole().sendTo(consola)\n    }\n    // Throw error when window creation failed\n    options.virtualConsole.on('jsdomError', jsdomErrHandler)\n  } else {\n    // If we get the virtualConsole option as `false` we should delete for don't pass it to `jsdom.JSDOM.fromURL`\n    delete options.virtualConsole\n  }\n\n  const { window } = await jsdom.JSDOM.fromURL(url, options)\n\n  // If Nuxt could not be loaded (error from the server-side)\n  const nuxtExists = window.document.body.innerHTML.includes(`id=\"${globals.id}\"`)\n\n  if (!nuxtExists) {\n    const error = new Error('Could not load the nuxt app')\n    error.body = window.document.body.innerHTML\n    window.close()\n    throw error\n  }\n\n  // Used by Nuxt to say when the components are loaded and the app ready\n  await timeout(new Promise((resolve) => {\n    window[loadedCallback] = () => resolve(window)\n  }), loadingTimeout, `Components loading in renderAndGetWindow was not completed in ${loadingTimeout / 1000}s`)\n\n  if (options.virtualConsole) {\n    // After window initialized successfully\n    options.virtualConsole.removeListener('jsdomError', jsdomErrHandler)\n  }\n\n  // Send back window object\n  return window\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/jsdom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 400,
    "kind": "function",
    "name": "renderAndGetWindow",
    "memberof": "packages/server/src/jsdom.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/server/src/jsdom.js~renderAndGetWindow",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/server/src/jsdom.js",
    "importStyle": "renderAndGetWindow",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "http://localhost:3000",
        "defaultValue": "http://localhost:3000"
      },
      {
        "name": "jsdomOpts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "objectPattern2",
        "optional": true,
        "types": [
          "{\"loadedCallback\": *, \"loadingTimeout\": *, \"globals\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 401,
    "kind": "file",
    "name": "packages/server/src/listener.js",
    "content": "import http from 'http'\nimport https from 'https'\nimport enableDestroy from 'server-destroy'\nimport ip from 'ip'\nimport consola from 'consola'\nimport pify from 'pify'\n\nlet RANDOM_PORT = '0'\n\nexport default class Listener {\n  constructor ({ port, host, socket, https, app, dev, baseURL }) {\n    // Options\n    this.port = port\n    this.host = host\n    this.socket = socket\n    this.https = https\n    this.app = app\n    this.dev = dev\n    this.baseURL = baseURL\n\n    // After listen\n    this.listening = false\n    this._server = null\n    this.server = null\n    this.address = null\n    this.url = null\n  }\n\n  async close () {\n    // Destroy server by forcing every connection to be closed\n    if (this.server && this.server.listening) {\n      await this.server.destroy()\n      consola.debug('server closed')\n    }\n\n    // Delete references\n    this.listening = false\n    this._server = null\n    this.server = null\n    this.address = null\n    this.url = null\n  }\n\n  computeURL () {\n    const address = this.server.address()\n    if (!this.socket) {\n      switch (address.address) {\n        case '127.0.0.1': this.host = 'localhost'; break\n        case '0.0.0.0': this.host = ip.address(); break\n      }\n      this.port = address.port\n      this.url = `http${this.https ? 's' : ''}://${this.host}:${this.port}${this.baseURL}`\n      this.url = decodeURI(this.url)\n      return\n    }\n    this.url = `unix+http://${address}`\n  }\n\n  async listen () {\n    // Prevent multi calls\n    if (this.listening) {\n      return\n    }\n\n    // Initialize underlying http(s) server\n    const protocol = this.https ? https : http\n    const protocolOpts = this.https ? [this.https] : []\n    this._server = protocol.createServer.apply(protocol, protocolOpts.concat(this.app))\n\n    // Call server.listen\n    // Prepare listenArgs\n    const listenArgs = this.socket ? { path: this.socket } : { host: this.host, port: this.port }\n    listenArgs.exclusive = false\n\n    // Call server.listen\n    try {\n      this.server = await new Promise((resolve, reject) => {\n        this._server.on('error', error => reject(error))\n        const s = this._server.listen(listenArgs, error => error ? reject(error) : resolve(s))\n      })\n    } catch (error) {\n      return this.serverErrorHandler(error)\n    }\n\n    // Enable destroy support\n    enableDestroy(this.server)\n    pify(this.server.destroy)\n\n    // Compute listen URL\n    this.computeURL()\n\n    // Set this.listening to true\n    this.listening = true\n  }\n\n  async serverErrorHandler (error) {\n    // Detect if port is not available\n    const addressInUse = error.code === 'EADDRINUSE'\n\n    // Use better error message\n    if (addressInUse) {\n      const address = this.socket || `${this.host}:${this.port}`\n      error.message = `Address \\`${address}\\` is already in use.`\n\n      // Listen to a random port on dev as a fallback\n      if (this.dev && !this.socket && this.port !== RANDOM_PORT) {\n        consola.warn(error.message)\n        consola.info('Trying a random port...')\n        this.port = RANDOM_PORT\n        await this.close()\n        await this.listen()\n        RANDOM_PORT = this.port\n        return\n      }\n    }\n\n    // Throw error\n    throw error\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/listener.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 402,
    "kind": "variable",
    "name": "RANDOM_PORT",
    "memberof": "packages/server/src/listener.js",
    "static": true,
    "longname": "packages/server/src/listener.js~RANDOM_PORT",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/listener.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 403,
    "kind": "class",
    "name": "Listener",
    "memberof": "packages/server/src/listener.js",
    "static": true,
    "longname": "packages/server/src/listener.js~Listener",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/server/src/listener.js",
    "importStyle": "Listener",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 404,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/server/src/listener.js~Listener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 405,
    "kind": "member",
    "name": "port",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#port",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "member",
    "name": "host",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#host",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "member",
    "name": "socket",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#socket",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 408,
    "kind": "member",
    "name": "https",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#https",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 409,
    "kind": "member",
    "name": "app",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#app",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 410,
    "kind": "member",
    "name": "dev",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#dev",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "baseURL",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#baseURL",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "member",
    "name": "listening",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#listening",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "member",
    "name": "_server",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#_server",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "member",
    "name": "server",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#server",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 415,
    "kind": "member",
    "name": "address",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#address",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 416,
    "kind": "member",
    "name": "url",
    "memberof": "packages/server/src/listener.js~Listener",
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#url",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 417,
    "kind": "method",
    "name": "close",
    "memberof": "packages/server/src/listener.js~Listener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#close",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [],
    "return": null
  },
  {
    "__docId__": 423,
    "kind": "method",
    "name": "computeURL",
    "memberof": "packages/server/src/listener.js~Listener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#computeURL",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "params": [],
    "return": null
  },
  {
    "__docId__": 430,
    "kind": "method",
    "name": "listen",
    "memberof": "packages/server/src/listener.js~Listener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#listen",
    "access": "public",
    "description": "",
    "lineNumber": 59,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "serverErrorHandler",
    "memberof": "packages/server/src/listener.js~Listener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/server/src/listener.js~Listener#serverErrorHandler",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "packages/server/src/middleware/error.js",
    "content": "import path from 'path'\nimport fs from 'fs-extra'\nimport consola from 'consola'\n\nimport Youch from '@nuxtjs/youch'\n\nexport default ({ resources, options }) => async function errorMiddleware (_error, req, res, next) {\n  // Normalize error\n  const error = normalizeError(_error, options)\n\n  const sendResponse = (content, type = 'text/html') => {\n    // Set Headers\n    res.statusCode = error.statusCode\n    res.statusMessage = 'RuntimeError'\n    res.setHeader('Content-Type', type + '; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(content))\n    res.setHeader('Cache-Control', 'no-cache, no-store, max-age=0, must-revalidate')\n\n    // Error headers\n    if (error.headers) {\n      for (const name in error.headers) {\n        res.setHeader(name, error.headers[name])\n      }\n    }\n\n    // Send Response\n    res.end(content, 'utf-8')\n  }\n\n  // Check if request accepts JSON\n  const hasReqHeader = (header, includes) =>\n    req.headers[header] && req.headers[header].toLowerCase().includes(includes)\n  const isJson =\n    hasReqHeader('accept', 'application/json') ||\n    hasReqHeader('user-agent', 'curl/')\n\n  // Use basic errors when debug mode is disabled\n  if (!options.debug) {\n    // We hide actual errors from end users, so show them on server logs\n    if (error.statusCode !== 404) {\n      consola.error(error)\n    }\n\n    // Json format is compatible with Youch json responses\n    const json = {\n      status: error.statusCode,\n      message: error.message,\n      name: error.name\n    }\n    if (isJson) {\n      sendResponse(JSON.stringify(json, undefined, 2), 'text/json')\n      return\n    }\n    const html = resources.errorTemplate(json)\n    sendResponse(html)\n    return\n  }\n\n  // Show stack trace\n  const youch = new Youch(\n    error,\n    req,\n    readSource,\n    options.router.base,\n    true\n  )\n  if (isJson) {\n    const json = await youch.toJSON()\n    sendResponse(JSON.stringify(json, undefined, 2), 'text/json')\n    return\n  }\n\n  const html = await youch.toHTML()\n  sendResponse(html)\n}\n\nconst sanitizeName = name => name ? name.replace('webpack:///', '').split('?')[0] : null\n\nconst normalizeError = (_error, { srcDir, rootDir, buildDir }) => {\n  if (typeof _error === 'string') {\n    _error = { message: _error }\n  } else if (!_error) {\n    _error = { message: '<empty>' }\n  }\n\n  const error = new Error()\n  error.message = _error.message\n  error.name = _error.name\n  error.statusCode = _error.statusCode || 500\n  error.headers = _error.headers\n\n  const searchPath = [\n    srcDir,\n    rootDir,\n    path.join(buildDir, 'dist', 'server'),\n    buildDir,\n    process.cwd()\n  ]\n\n  const findInPaths = (fileName) => {\n    for (const dir of searchPath) {\n      const fullPath = path.resolve(dir, fileName)\n      if (fs.existsSync(fullPath)) {\n        return fullPath\n      }\n    }\n    return fileName\n  }\n\n  error.stack = (_error.stack || '')\n    .split('\\n')\n    .map((line) => {\n      const match = line.match(/\\(([^)]+)\\)|([^\\s]+\\.[^\\s]+):/)\n      if (!match) {\n        return line\n      }\n      const src = match[1] || match[2] || ''\n      return line.replace(src, findInPaths(sanitizeName(src)))\n    })\n    .join('\\n')\n\n  return error\n}\n\nasync function readSource (frame) {\n  if (fs.existsSync(frame.fileName)) {\n    frame.fullPath = frame.fileName // Youch BW compat\n    frame.contents = await fs.readFile(frame.fileName, 'utf-8')\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/middleware/error.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "error",
    "memberof": "packages/server/src/middleware/error.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/error.js~error",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/error.js",
    "importStyle": "error",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resources\": *, \"options\": *}"
        ],
        "defaultRaw": {
          "resources": null,
          "options": null
        },
        "defaultValue": "{\"resources\":null,\"options\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 438,
    "kind": "function",
    "name": "sanitizeName",
    "memberof": "packages/server/src/middleware/error.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/error.js~sanitizeName",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/error.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 439,
    "kind": "function",
    "name": "normalizeError",
    "memberof": "packages/server/src/middleware/error.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/error.js~normalizeError",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/error.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "_error",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"srcDir\": *, \"rootDir\": *, \"buildDir\": *}"
        ],
        "defaultRaw": {
          "srcDir": null,
          "rootDir": null,
          "buildDir": null
        },
        "defaultValue": "{\"srcDir\":null,\"rootDir\":null,\"buildDir\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "function",
    "name": "readSource",
    "memberof": "packages/server/src/middleware/error.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/server/src/middleware/error.js~readSource",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/error.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "frame",
        "description": ""
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 441,
    "kind": "file",
    "name": "packages/server/src/middleware/nuxt.js",
    "content": "import generateETag from 'etag'\nimport fresh from 'fresh'\nimport consola from 'consola'\nimport { normalizeURL } from 'ufo'\n\nimport { getContext, TARGETS } from '@nuxt/utils'\n\nexport default ({ options, nuxt, renderRoute, resources }) => async function nuxtMiddleware (req, res, next) {\n  // Get context\n  const context = getContext(req, res)\n\n  try {\n    const url = normalizeURL(req.url)\n    res.statusCode = 200\n    const result = await renderRoute(url, context)\n\n    // If result is falsy, call renderLoading\n    if (!result) {\n      await nuxt.callHook('server:nuxt:renderLoading', req, res)\n      return\n    }\n\n    await nuxt.callHook('render:route', url, result, context)\n    const {\n      html,\n      cspScriptSrcHashes,\n      error,\n      redirected,\n      preloadFiles\n    } = result\n\n    if (redirected && context.target !== TARGETS.static) {\n      await nuxt.callHook('render:routeDone', url, result, context)\n      return html\n    }\n    if (error) {\n      res.statusCode = context.nuxt.error.statusCode || 500\n    }\n\n    if (options.render.csp && cspScriptSrcHashes) {\n      const { allowedSources, policies } = options.render.csp\n      const isReportOnly = !!options.render.csp.reportOnly\n      const cspHeader = isReportOnly ? 'Content-Security-Policy-Report-Only' : 'Content-Security-Policy'\n\n      res.setHeader(cspHeader, getCspString({ cspScriptSrcHashes, allowedSources, policies, isReportOnly }))\n    }\n\n    // Add ETag header\n    if (!error && options.render.etag) {\n      const { hash } = options.render.etag\n      const etag = hash ? hash(html, options.render.etag) : generateETag(html, options.render.etag)\n      if (fresh(req.headers, { etag })) {\n        res.statusCode = 304\n        await nuxt.callHook('render:beforeResponse', url, result, context)\n        res.end()\n        await nuxt.callHook('render:routeDone', url, result, context)\n        return\n      }\n      res.setHeader('ETag', etag)\n    }\n\n    // HTTP2 push headers for preload assets\n    if (!error && options.render.http2.push) {\n      // Parse resourceHints to extract HTTP.2 prefetch/push headers\n      // https://w3c.github.io/preload/#server-push-http-2\n      const { shouldPush, pushAssets } = options.render.http2\n      const { publicPath } = resources.clientManifest\n\n      const links = pushAssets\n        ? pushAssets(req, res, publicPath, preloadFiles)\n        : defaultPushAssets(preloadFiles, shouldPush, publicPath, options)\n\n      // Pass with single Link header\n      // https://blog.cloudflare.com/http-2-server-push-with-multiple-assets-per-link-header\n      // https://www.w3.org/Protocols/9707-link-header.html\n      if (links.length > 0) {\n        res.setHeader('Link', links.join(', '))\n      }\n    }\n\n    // Send response\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Accept-Ranges', 'none') // #3870\n    res.setHeader('Content-Length', Buffer.byteLength(html))\n    await nuxt.callHook('render:beforeResponse', url, result, context)\n    res.end(html, 'utf8')\n    await nuxt.callHook('render:routeDone', url, result, context)\n    return html\n  } catch (err) {\n    if (context && context.redirected) {\n      consola.error(err)\n      return err\n    }\n\n    if (err.name === 'URIError') {\n      err.statusCode = 400\n    }\n    next(err)\n  }\n}\n\nconst defaultPushAssets = (preloadFiles, shouldPush, publicPath, options) => {\n  if (shouldPush && options.dev) {\n    consola.warn('http2.shouldPush is deprecated. Use http2.pushAssets function')\n  }\n\n  const links = []\n  preloadFiles.forEach(({ file, asType, fileWithoutQuery, modern }) => {\n    // By default, we only preload scripts or css\n    if (!shouldPush && asType !== 'script' && asType !== 'style') {\n      return\n    }\n\n    // User wants to explicitly control what to preload\n    if (shouldPush && !shouldPush(fileWithoutQuery, asType)) {\n      return\n    }\n\n    const { crossorigin } = options.render\n    const cors = `${crossorigin ? ` crossorigin=${crossorigin};` : ''}`\n    // `modulepreload` rel attribute only supports script-like `as` value\n    // https://html.spec.whatwg.org/multipage/links.html#link-type-modulepreload\n    const rel = modern && asType === 'script' ? 'modulepreload' : 'preload'\n\n    links.push(`<${publicPath}${file}>; rel=${rel};${cors} as=${asType}`)\n  })\n  return links\n}\n\nconst getCspString = ({ cspScriptSrcHashes, allowedSources, policies, isReportOnly }) => {\n  const joinedHashes = cspScriptSrcHashes.join(' ')\n  const baseCspStr = `script-src 'self' ${joinedHashes}`\n  const policyObjectAvailable = typeof policies === 'object' && policies !== null && !Array.isArray(policies)\n\n  if (Array.isArray(allowedSources) && allowedSources.length) {\n    return isReportOnly && policyObjectAvailable && !!policies['report-uri'] ? `${baseCspStr} ${allowedSources.join(' ')}; report-uri ${policies['report-uri']};` : `${baseCspStr} ${allowedSources.join(' ')}`\n  }\n\n  if (policyObjectAvailable) {\n    const transformedPolicyObject = transformPolicyObject(policies, cspScriptSrcHashes)\n    return Object.entries(transformedPolicyObject).map(([k, v]) => `${k} ${Array.isArray(v) ? v.join(' ') : v}`).join('; ')\n  }\n\n  return baseCspStr\n}\n\nconst transformPolicyObject = (policies, cspScriptSrcHashes) => {\n  const userHasDefinedScriptSrc = policies['script-src'] && Array.isArray(policies['script-src'])\n\n  const additionalPolicies = userHasDefinedScriptSrc ? policies['script-src'] : []\n\n  // Self is always needed for inline-scripts, so add it, no matter if the user specified script-src himself.\n  const hashAndPolicyList = cspScriptSrcHashes.concat('\\'self\\'', additionalPolicies)\n\n  return { ...policies, 'script-src': hashAndPolicyList }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/middleware/nuxt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "function",
    "name": "nuxt",
    "memberof": "packages/server/src/middleware/nuxt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/nuxt.js~nuxt",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/nuxt.js",
    "importStyle": "nuxt",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"options\": *, \"nuxt\": *, \"renderRoute\": *, \"resources\": *}"
        ],
        "defaultRaw": {
          "options": null,
          "nuxt": null,
          "renderRoute": null,
          "resources": null
        },
        "defaultValue": "{\"options\":null,\"nuxt\":null,\"renderRoute\":null,\"resources\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 443,
    "kind": "function",
    "name": "defaultPushAssets",
    "memberof": "packages/server/src/middleware/nuxt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/nuxt.js~defaultPushAssets",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/nuxt.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "preloadFiles",
        "types": [
          "*"
        ]
      },
      {
        "name": "shouldPush",
        "types": [
          "*"
        ]
      },
      {
        "name": "publicPath",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "function",
    "name": "getCspString",
    "memberof": "packages/server/src/middleware/nuxt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/nuxt.js~getCspString",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/nuxt.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"cspScriptSrcHashes\": *, \"allowedSources\": *, \"policies\": *, \"isReportOnly\": *}"
        ],
        "defaultRaw": {
          "cspScriptSrcHashes": null,
          "allowedSources": null,
          "policies": null,
          "isReportOnly": null
        },
        "defaultValue": "{\"cspScriptSrcHashes\":null,\"allowedSources\":null,\"policies\":null,\"isReportOnly\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "function",
    "name": "transformPolicyObject",
    "memberof": "packages/server/src/middleware/nuxt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/nuxt.js~transformPolicyObject",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/nuxt.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "policies",
        "types": [
          "*"
        ]
      },
      {
        "name": "cspScriptSrcHashes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{...policies: Object, \"script-src\": *}"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "file",
    "name": "packages/server/src/middleware/timing.js",
    "content": "import consola from 'consola'\nimport onHeaders from 'on-headers'\nimport { Timer } from '@nuxt/utils'\n\nexport default options => (req, res, next) => {\n  if (res.timing) {\n    consola.warn('server-timing is already registered.')\n  }\n  res.timing = new ServerTiming()\n\n  if (options && options.total) {\n    res.timing.start('total', 'Nuxt Server Time')\n  }\n\n  onHeaders(res, () => {\n    res.timing.end('total')\n\n    if (res.timing.headers.length > 0) {\n      res.setHeader(\n        'Server-Timing',\n        []\n          .concat(res.getHeader('Server-Timing') || [])\n          .concat(res.timing.headers)\n          .join(', ')\n      )\n    }\n    res.timing.clear()\n  })\n\n  next()\n}\n\nclass ServerTiming extends Timer {\n  constructor (...args) {\n    super(...args)\n    this.headers = []\n  }\n\n  end (...args) {\n    const time = super.end(...args)\n    if (time) {\n      this.headers.push(this.formatHeader(time))\n    }\n    return time\n  }\n\n  clear () {\n    super.clear()\n    this.headers.length = 0\n  }\n\n  formatHeader (time) {\n    const desc = time.description ? `;desc=\"${time.description}\"` : ''\n    return `${time.name};dur=${time.duration}${desc}`\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/middleware/timing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 447,
    "kind": "function",
    "name": "timing",
    "memberof": "packages/server/src/middleware/timing.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/server/src/middleware/timing.js~timing",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/timing.js",
    "importStyle": "timing",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 448,
    "kind": "class",
    "name": "ServerTiming",
    "memberof": "packages/server/src/middleware/timing.js",
    "static": true,
    "longname": "packages/server/src/middleware/timing.js~ServerTiming",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/server/src/middleware/timing.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "interface": false,
    "extends": [
      "@nuxt/utils~Timer"
    ],
    "ignore": true
  },
  {
    "__docId__": 449,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/server/src/middleware/timing.js~ServerTiming",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/middleware/timing.js~ServerTiming#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 450,
    "kind": "member",
    "name": "headers",
    "memberof": "packages/server/src/middleware/timing.js~ServerTiming",
    "static": false,
    "longname": "packages/server/src/middleware/timing.js~ServerTiming#headers",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "method",
    "name": "end",
    "memberof": "packages/server/src/middleware/timing.js~ServerTiming",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/middleware/timing.js~ServerTiming#end",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "method",
    "name": "clear",
    "memberof": "packages/server/src/middleware/timing.js~ServerTiming",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/middleware/timing.js~ServerTiming#clear",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [],
    "return": null
  },
  {
    "__docId__": 453,
    "kind": "method",
    "name": "formatHeader",
    "memberof": "packages/server/src/middleware/timing.js~ServerTiming",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/middleware/timing.js~ServerTiming#formatHeader",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "file",
    "name": "packages/server/src/server.js",
    "content": "import path from 'path'\nimport consola from 'consola'\nimport launchMiddleware from 'launch-editor-middleware'\nimport serveStatic from 'serve-static'\nimport servePlaceholder from 'serve-placeholder'\nimport connect from 'connect'\nimport compression from 'compression'\nimport { determineGlobals, isUrl, urlJoin } from '@nuxt/utils'\nimport { VueRenderer } from '@nuxt/vue-renderer'\nimport ServerContext from './context'\nimport renderAndGetWindow from './jsdom'\nimport nuxtMiddleware from './middleware/nuxt'\nimport errorMiddleware from './middleware/error'\nimport Listener from './listener'\nimport createTimingMiddleware from './middleware/timing'\n\nexport default class Server {\n  constructor (nuxt) {\n    this.nuxt = nuxt\n    this.options = nuxt.options\n\n    this.globals = determineGlobals(nuxt.options.globalName, nuxt.options.globals)\n\n    this.publicPath = isUrl(this.options.build.publicPath)\n      ? this.options.build._publicPath\n      : this.options.build.publicPath\n\n    // Runtime shared resources\n    this.resources = {}\n\n    // Will be set after listen\n    this.listeners = []\n\n    // Create new connect instance\n    this.app = connect()\n\n    // Close hook\n    this.nuxt.hook('close', () => this.close())\n\n    // devMiddleware placeholder\n    if (this.options.dev) {\n      this.nuxt.hook('server:devMiddleware', (devMiddleware) => {\n        this.devMiddleware = devMiddleware\n      })\n    }\n  }\n\n  async ready () {\n    if (this._readyCalled) {\n      return this\n    }\n    this._readyCalled = true\n\n    await this.nuxt.callHook('render:before', this, this.options.render)\n\n    // Initialize vue-renderer\n    this.serverContext = new ServerContext(this)\n    this.renderer = new VueRenderer(this.serverContext)\n    await this.renderer.ready()\n\n    // Setup nuxt middleware\n    await this.setupMiddleware()\n\n    // Call done hook\n    await this.nuxt.callHook('render:done', this)\n\n    return this\n  }\n\n  async setupMiddleware () {\n    // Apply setupMiddleware from modules first\n    await this.nuxt.callHook('render:setupMiddleware', this.app)\n\n    // Compression middleware for production\n    if (!this.options.dev) {\n      const { compressor } = this.options.render\n      if (typeof compressor === 'object') {\n        // If only setting for `compression` are provided, require the module and insert\n        this.useMiddleware(compression(compressor))\n      } else if (compressor) {\n        // Else, require own compression middleware if compressor is actually truthy\n        this.useMiddleware(compressor)\n      }\n    }\n\n    if (this.options.server.timing) {\n      this.useMiddleware(createTimingMiddleware(this.options.server.timing))\n    }\n\n    // For serving static/ files to /\n    const staticMiddleware = serveStatic(\n      path.resolve(this.options.srcDir, this.options.dir.static),\n      this.options.render.static\n    )\n    staticMiddleware.prefix = this.options.render.static.prefix\n    this.useMiddleware(staticMiddleware)\n\n    // Serve .nuxt/dist/client files only for production\n    // For dev they will be served with devMiddleware\n    if (!this.options.dev) {\n      const distDir = path.resolve(this.options.buildDir, 'dist', 'client')\n      this.useMiddleware({\n        path: this.publicPath,\n        handler: serveStatic(\n          distDir,\n          this.options.render.dist\n        )\n      })\n    }\n\n    // Dev middleware\n    if (this.options.dev) {\n      this.useMiddleware((req, res, next) => {\n        if (!this.devMiddleware) {\n          return next()\n        }\n        this.devMiddleware(req, res, next)\n      })\n\n      // open in editor for debug mode only\n      if (this.options.debug) {\n        this.useMiddleware({\n          path: '__open-in-editor',\n          handler: launchMiddleware(this.options.editor)\n        })\n      }\n    }\n\n    // Add user provided middleware\n    for (const m of this.options.serverMiddleware) {\n      this.useMiddleware(m)\n    }\n\n    // Graceful 404 error handler\n    const { fallback } = this.options.render\n    if (fallback) {\n      // Dist files\n      if (fallback.dist) {\n        this.useMiddleware({\n          path: this.publicPath,\n          handler: servePlaceholder(fallback.dist)\n        })\n      }\n\n      // Other paths\n      if (fallback.static) {\n        this.useMiddleware({\n          path: '/',\n          handler: servePlaceholder(fallback.static)\n        })\n      }\n    }\n\n    // Finally use nuxtMiddleware\n    this.useMiddleware(nuxtMiddleware({\n      options: this.options,\n      nuxt: this.nuxt,\n      renderRoute: this.renderRoute.bind(this),\n      resources: this.resources\n    }))\n\n    // DX: redirect if router.base in development\n    const routerBase = this.nuxt.options.router.base\n    if (this.options.dev && routerBase !== '/') {\n      this.useMiddleware({\n        prefix: false,\n        handler: (req, res, next) => {\n          if (decodeURI(req.url).startsWith(decodeURI(routerBase))) {\n            return next()\n          }\n          const to = urlJoin(routerBase, req.url)\n          consola.info(`[Development] Redirecting from \\`${decodeURI(req.url)}\\` to \\`${decodeURI(to)}\\` (router.base specified)`)\n          res.writeHead(302, {\n            Location: to\n          })\n          res.end()\n        }\n      })\n    }\n\n    // Apply errorMiddleware from modules first\n    await this.nuxt.callHook('render:errorMiddleware', this.app)\n\n    // Error middleware for errors that occurred in middleware that declared above\n    this.useMiddleware(errorMiddleware({\n      resources: this.resources,\n      options: this.options\n    }))\n  }\n\n  _normalizeMiddleware (middleware) {\n    // Normalize plain function\n    if (typeof middleware === 'function') {\n      middleware = { handle: middleware }\n    }\n\n    // If a plain string provided as path to middleware\n    if (typeof middleware === 'string') {\n      middleware = this._requireMiddleware(middleware)\n    }\n\n    // #8584\n    // shallow clone the middleware before any change is made,\n    // in case any following mutation breaks when applied repeatedly.\n    middleware = Object.assign({}, middleware)\n\n    // Normalize handler to handle (backward compatibility)\n    if (middleware.handler && !middleware.handle) {\n      middleware.handle = middleware.handler\n      delete middleware.handler\n    }\n\n    // Normalize path to route (backward compatibility)\n    if (middleware.path && !middleware.route) {\n      middleware.route = middleware.path\n      delete middleware.path\n    }\n\n    // If handle is a string pointing to path\n    if (typeof middleware.handle === 'string') {\n      Object.assign(middleware, this._requireMiddleware(middleware.handle))\n    }\n\n    // No handle\n    if (!middleware.handle) {\n      middleware.handle = (req, res, next) => {\n        next(new Error('ServerMiddleware should expose a handle: ' + middleware.entry))\n      }\n    }\n\n    // Prefix on handle (proxy-module)\n    if (middleware.handle.prefix !== undefined && middleware.prefix === undefined) {\n      middleware.prefix = middleware.handle.prefix\n    }\n\n    // sub-app (express)\n    if (typeof middleware.handle.handle === 'function') {\n      const server = middleware.handle\n      middleware.handle = server.handle.bind(server)\n    }\n\n    return middleware\n  }\n\n  _requireMiddleware (entry) {\n    // Resolve entry\n    entry = this.nuxt.resolver.resolvePath(entry)\n\n    // Require middleware\n    let middleware\n    try {\n      middleware = this.nuxt.resolver.requireModule(entry)\n    } catch (error) {\n      // Show full error\n      consola.error('ServerMiddleware Error:', error)\n\n      // Placeholder for error\n      middleware = (req, res, next) => { next(error) }\n    }\n\n    // Normalize\n    middleware = this._normalizeMiddleware(middleware)\n\n    // Set entry\n    middleware.entry = entry\n\n    return middleware\n  }\n\n  resolveMiddleware (middleware, fallbackRoute = '/') {\n    // Ensure middleware is normalized\n    middleware = this._normalizeMiddleware(middleware)\n\n    // Fallback route\n    if (!middleware.route) {\n      middleware.route = fallbackRoute\n    }\n\n    // #8584\n    // save the original route before applying defaults\n    middleware._originalRoute = middleware.route\n\n    // Resolve final route\n    middleware.route = (\n      (middleware.prefix !== false ? this.options.router.base : '') +\n      (typeof middleware.route === 'string' ? middleware.route : '')\n    ).replace(/\\/\\//g, '/')\n\n    // Strip trailing slash\n    if (middleware.route.endsWith('/')) {\n      middleware.route = middleware.route.slice(0, -1)\n    }\n\n    // Assign _middleware to handle to make accessible from app.stack\n    middleware.handle._middleware = middleware\n\n    return middleware\n  }\n\n  useMiddleware (middleware) {\n    const { route, handle } = this.resolveMiddleware(middleware)\n    this.app.use(route, handle)\n  }\n\n  replaceMiddleware (query, middleware) {\n    let serverStackItem\n\n    if (typeof query === 'string') {\n      // Search by entry\n      serverStackItem = this.app.stack.find(({ handle }) => handle._middleware && handle._middleware.entry === query)\n    } else {\n      // Search by reference\n      serverStackItem = this.app.stack.find(({ handle }) => handle === query)\n    }\n\n    // Stop if item not found\n    if (!serverStackItem) {\n      return\n    }\n\n    // unload middleware\n    this.unloadMiddleware(serverStackItem)\n\n    // Resolve middleware\n    const { route, handle } = this.resolveMiddleware(\n      middleware,\n      // #8584 pass the original route as fallback\n      serverStackItem.handle._middleware\n        ? serverStackItem.handle._middleware._originalRoute\n        : serverStackItem.route\n    )\n\n    // Update serverStackItem\n    serverStackItem.handle = handle\n\n    // Error State\n    serverStackItem.route = route\n\n    // Return updated item\n    return serverStackItem\n  }\n\n  unloadMiddleware ({ handle }) {\n    if (handle._middleware && typeof handle._middleware.unload === 'function') {\n      handle._middleware.unload()\n    }\n  }\n\n  serverMiddlewarePaths () {\n    return this.app.stack.map(({ handle }) => handle._middleware && handle._middleware.entry).filter(Boolean)\n  }\n\n  renderRoute () {\n    return this.renderer.renderRoute.apply(this.renderer, arguments)\n  }\n\n  loadResources () {\n    return this.renderer.loadResources.apply(this.renderer, arguments)\n  }\n\n  renderAndGetWindow (url, opts = {}, {\n    loadingTimeout = 2000,\n    loadedCallback = this.globals.loadedCallback,\n    globals = this.globals\n  } = {}) {\n    return renderAndGetWindow(url, opts, {\n      loadingTimeout,\n      loadedCallback,\n      globals\n    })\n  }\n\n  async listen (port, host, socket) {\n    // Ensure nuxt is ready\n    await this.nuxt.ready()\n\n    // Create a new listener\n    const listener = new Listener({\n      port: isNaN(parseInt(port)) ? this.options.server.port : port,\n      host: host || this.options.server.host,\n      socket: socket || this.options.server.socket,\n      https: this.options.server.https,\n      app: this.app,\n      dev: this.options.dev,\n      baseURL: this.options.router.base\n    })\n\n    // Listen\n    await listener.listen()\n\n    // Push listener to this.listeners\n    this.listeners.push(listener)\n\n    await this.nuxt.callHook('listen', listener.server, listener)\n\n    return listener\n  }\n\n  async close () {\n    if (this.__closed) {\n      return\n    }\n    this.__closed = true\n\n    await Promise.all(this.listeners.map(l => l.close()))\n\n    this.listeners = []\n\n    if (typeof this.renderer.close === 'function') {\n      await this.renderer.close()\n    }\n\n    this.app.stack.forEach(this.unloadMiddleware)\n    this.app.removeAllListeners()\n    this.app = null\n\n    for (const key in this.resources) {\n      delete this.resources[key]\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/server/src/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 455,
    "kind": "class",
    "name": "Server",
    "memberof": "packages/server/src/server.js",
    "static": true,
    "longname": "packages/server/src/server.js~Server",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/server/src/server.js",
    "importStyle": "Server",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 456,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nuxt",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 457,
    "kind": "member",
    "name": "nuxt",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#nuxt",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "options",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#options",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "member",
    "name": "globals",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#globals",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "publicPath",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#publicPath",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "member",
    "name": "resources",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#resources",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "member",
    "name": "listeners",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "member",
    "name": "app",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#app",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "devMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#devMiddleware",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "method",
    "name": "ready",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/server/src/server.js~Server#ready",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "member",
    "name": "_readyCalled",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#_readyCalled",
    "access": "private",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 467,
    "kind": "member",
    "name": "serverContext",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#serverContext",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "member",
    "name": "renderer",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#renderer",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "method",
    "name": "setupMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/server/src/server.js~Server#setupMiddleware",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [],
    "return": null
  },
  {
    "__docId__": 470,
    "kind": "method",
    "name": "_normalizeMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#_normalizeMiddleware",
    "access": "private",
    "description": "",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "middleware",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "method",
    "name": "_requireMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#_requireMiddleware",
    "access": "private",
    "description": "",
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "method",
    "name": "resolveMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#resolveMiddleware",
    "access": "public",
    "description": "",
    "lineNumber": 270,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "middleware",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "/",
        "defaultRaw": "/",
        "name": "fallbackRoute",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "method",
    "name": "useMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#useMiddleware",
    "access": "public",
    "description": "",
    "lineNumber": 300,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "middleware",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 474,
    "kind": "method",
    "name": "replaceMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#replaceMiddleware",
    "access": "public",
    "description": "",
    "lineNumber": 305,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "middleware",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "method",
    "name": "unloadMiddleware",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#unloadMiddleware",
    "access": "public",
    "description": "",
    "lineNumber": 343,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 476,
    "kind": "method",
    "name": "serverMiddlewarePaths",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#serverMiddlewarePaths",
    "access": "public",
    "description": "",
    "lineNumber": 349,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "method",
    "name": "renderRoute",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#renderRoute",
    "access": "public",
    "description": "",
    "lineNumber": 353,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 478,
    "kind": "method",
    "name": "loadResources",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#loadResources",
    "access": "public",
    "description": "",
    "lineNumber": 357,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 479,
    "kind": "method",
    "name": "renderAndGetWindow",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/server/src/server.js~Server#renderAndGetWindow",
    "access": "public",
    "description": "",
    "lineNumber": 361,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "method",
    "name": "listen",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/server/src/server.js~Server#listen",
    "access": "public",
    "description": "",
    "lineNumber": 373,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "port",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "host",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "socket",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 481,
    "kind": "method",
    "name": "close",
    "memberof": "packages/server/src/server.js~Server",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/server/src/server.js~Server#close",
    "access": "public",
    "description": "",
    "lineNumber": 399,
    "params": [],
    "return": null
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "__closed",
    "memberof": "packages/server/src/server.js~Server",
    "static": false,
    "longname": "packages/server/src/server.js~Server#__closed",
    "access": "private",
    "description": null,
    "lineNumber": 403,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "file",
    "name": "packages/types/package.js",
    "content": "export default {\n  build: false\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/types/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 486,
    "kind": "file",
    "name": "packages/utils/package.js",
    "content": "export default {\n  build: true\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 487,
    "kind": "file",
    "name": "packages/utils/src/cjs.js",
    "content": "import { join } from 'path'\nimport _createRequire from 'create-require'\nimport jiti from 'jiti'\n\nexport const createRequire = (filename, useJiti = global.__NUXT_DEV__) => {\n  if (useJiti && typeof jest === 'undefined') {\n    return jiti(filename)\n  }\n\n  return _createRequire(filename)\n}\n\nconst _require = createRequire()\n\nexport function isHMRCompatible (id) {\n  return !/[/\\\\]mongoose[/\\\\/]/.test(id)\n}\n\nexport function isExternalDependency (id) {\n  return /[/\\\\]node_modules[/\\\\]/.test(id)\n}\n\nexport function clearRequireCache (id) {\n  if (isExternalDependency(id) && isHMRCompatible(id)) {\n    return\n  }\n\n  const entry = getRequireCacheItem(id)\n\n  if (!entry) {\n    delete _require.cache[id]\n    return\n  }\n\n  if (entry.parent) {\n    entry.parent.children = entry.parent.children.filter(e => e.id !== id)\n  }\n\n  // Needs to be cleared before children, to protect against circular deps (#7966)\n  delete _require.cache[id]\n\n  for (const child of entry.children) {\n    clearRequireCache(child.id)\n  }\n}\n\nexport function scanRequireTree (id, files = new Set()) {\n  if (isExternalDependency(id) || files.has(id)) {\n    return files\n  }\n\n  const entry = getRequireCacheItem(id)\n\n  if (!entry) {\n    files.add(id)\n    return files\n  }\n\n  files.add(entry.id)\n\n  for (const child of entry.children) {\n    scanRequireTree(child.id, files)\n  }\n\n  return files\n}\n\nexport function getRequireCacheItem (id) {\n  try {\n    return _require.cache[id]\n  } catch (e) {\n  }\n}\n\nexport function resolveModule (id, paths) {\n  if (typeof paths === 'string') {\n    paths = [paths]\n  }\n  return _require.resolve(id, {\n    paths: [].concat(paths || [], global.__NUXT_PATHS__ || [], process.cwd())\n  })\n}\n\nexport function requireModule (id, paths) {\n  return _require(resolveModule(id, paths))\n}\n\nexport function tryRequire (id, paths) {\n  try { return requireModule(id, paths) } catch (e) { }\n}\n\nexport function tryResolve (id, paths) {\n  try { return resolveModule(id, paths) } catch (e) { }\n}\n\nexport function getPKG (id, paths) {\n  return tryRequire(join(id, 'package.json'), paths)\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/cjs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 488,
    "kind": "function",
    "name": "createRequire",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~createRequire",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{createRequire}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "useJiti",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 489,
    "kind": "variable",
    "name": "_require",
    "memberof": "packages/utils/src/cjs.js",
    "static": true,
    "longname": "packages/utils/src/cjs.js~_require",
    "access": "private",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "function",
    "name": "isHMRCompatible",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~isHMRCompatible",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{isHMRCompatible}",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "function",
    "name": "isExternalDependency",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~isExternalDependency",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{isExternalDependency}",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "function",
    "name": "clearRequireCache",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~clearRequireCache",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{clearRequireCache}",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 493,
    "kind": "function",
    "name": "scanRequireTree",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~scanRequireTree",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{scanRequireTree}",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "files",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "function",
    "name": "getRequireCacheItem",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~getRequireCacheItem",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{getRequireCacheItem}",
    "description": "",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "function",
    "name": "resolveModule",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~resolveModule",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{resolveModule}",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "function",
    "name": "requireModule",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~requireModule",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{requireModule}",
    "description": "",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "function",
    "name": "tryRequire",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~tryRequire",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{tryRequire}",
    "description": "",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 498,
    "kind": "function",
    "name": "tryResolve",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~tryResolve",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{tryResolve}",
    "description": "",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "function",
    "name": "getPKG",
    "memberof": "packages/utils/src/cjs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/cjs.js~getPKG",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/cjs.js",
    "importStyle": "{getPKG}",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "file",
    "name": "packages/utils/src/constants.js",
    "content": "export const TARGETS = {\n  server: 'server',\n  static: 'static'\n}\n\nexport const MODES = {\n  universal: 'universal',\n  spa: 'spa'\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 501,
    "kind": "variable",
    "name": "TARGETS",
    "memberof": "packages/utils/src/constants.js",
    "static": true,
    "longname": "packages/utils/src/constants.js~TARGETS",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/constants.js",
    "importStyle": "{TARGETS}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"server\": string, \"static\": string}"
      ]
    }
  },
  {
    "__docId__": 502,
    "kind": "variable",
    "name": "MODES",
    "memberof": "packages/utils/src/constants.js",
    "static": true,
    "longname": "packages/utils/src/constants.js~MODES",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/constants.js",
    "importStyle": "{MODES}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"universal\": string, \"spa\": string}"
      ]
    }
  },
  {
    "__docId__": 503,
    "kind": "file",
    "name": "packages/utils/src/context.js",
    "content": "import { TARGETS } from './constants'\n\nexport const getContext = function getContext (req, res) {\n  return { req, res }\n}\n\nexport const determineGlobals = function determineGlobals (globalName, globals) {\n  const _globals = {}\n  for (const global in globals) {\n    if (typeof globals[global] === 'function') {\n      _globals[global] = globals[global](globalName)\n    } else {\n      _globals[global] = globals[global]\n    }\n  }\n  return _globals\n}\n\nexport const isFullStatic = function (options) {\n  return !options.dev && !options._legacyGenerate && options.target === TARGETS.static && options.render.ssr\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/context.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 504,
    "kind": "function",
    "name": "getContext",
    "memberof": "packages/utils/src/context.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/context.js~getContext",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/context.js",
    "importStyle": "{getContext}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "res",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"req\": *, \"res\": *}"
      ]
    }
  },
  {
    "__docId__": 505,
    "kind": "function",
    "name": "determineGlobals",
    "memberof": "packages/utils/src/context.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/context.js~determineGlobals",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/context.js",
    "importStyle": "{determineGlobals}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "globalName",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 506,
    "kind": "function",
    "name": "isFullStatic",
    "memberof": "packages/utils/src/context.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/context.js~isFullStatic",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/context.js",
    "importStyle": "{isFullStatic}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "file",
    "name": "packages/utils/src/index.js",
    "content": "export * from './context'\nexport * from './lang'\nexport * from './locking'\nexport * from './resolve'\nexport * from './route'\nexport * from './serialize'\nexport * from './task'\nexport * from './timer'\nexport * from './cjs'\nexport * from './modern'\nexport * from './constants'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 508,
    "kind": "file",
    "name": "packages/utils/src/lang.js",
    "content": "import { joinURL } from 'ufo'\n\nexport const encodeHtml = function encodeHtml (str) {\n  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;')\n}\n\nexport const isString = obj => typeof obj === 'string' || obj instanceof String\n\nexport const isNonEmptyString = obj => Boolean(obj && isString(obj))\n\nexport const isPureObject = obj => !Array.isArray(obj) && typeof obj === 'object'\n\nexport const isUrl = function isUrl (url) {\n  return ['http', '//'].some(str => url.startsWith(str))\n}\n\nexport const urlJoin = joinURL\n\n/**\n * Wraps value in array if it is not already an array\n *\n * @param  {any} value\n * @return {array}\n */\nexport const wrapArray = value => Array.isArray(value) ? value : [value]\n\nconst WHITESPACE_REPLACEMENTS = [\n  [/[ \\t\\f\\r]+\\n/g, '\\n'], // strip empty indents\n  [/{\\n{2,}/g, '{\\n'], // strip start padding from blocks\n  [/\\n{2,}([ \\t\\f\\r]*})/g, '\\n$1'], // strip end padding from blocks\n  [/\\n{3,}/g, '\\n\\n'], // strip multiple blank lines (1 allowed)\n  [/\\n{2,}$/g, '\\n'] // strip blank lines EOF (0 allowed)\n]\n\nexport const stripWhitespace = function stripWhitespace (string) {\n  WHITESPACE_REPLACEMENTS.forEach(([regex, newSubstr]) => {\n    string = string.replace(regex, newSubstr)\n  })\n  return string\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/lang.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 509,
    "kind": "function",
    "name": "encodeHtml",
    "memberof": "packages/utils/src/lang.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/lang.js~encodeHtml",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{encodeHtml}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 510,
    "kind": "function",
    "name": "isString",
    "memberof": "packages/utils/src/lang.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/lang.js~isString",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{isString}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 511,
    "kind": "function",
    "name": "isNonEmptyString",
    "memberof": "packages/utils/src/lang.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/lang.js~isNonEmptyString",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{isNonEmptyString}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 512,
    "kind": "function",
    "name": "isPureObject",
    "memberof": "packages/utils/src/lang.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/lang.js~isPureObject",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{isPureObject}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 513,
    "kind": "function",
    "name": "isUrl",
    "memberof": "packages/utils/src/lang.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/lang.js~isUrl",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{isUrl}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 514,
    "kind": "variable",
    "name": "urlJoin",
    "memberof": "packages/utils/src/lang.js",
    "static": true,
    "longname": "packages/utils/src/lang.js~urlJoin",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{urlJoin}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 515,
    "kind": "function",
    "name": "wrapArray",
    "memberof": "packages/utils/src/lang.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/lang.js~wrapArray",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{wrapArray}",
    "description": "Wraps value in array if it is not already an array",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 516,
    "kind": "variable",
    "name": "WHITESPACE_REPLACEMENTS",
    "memberof": "packages/utils/src/lang.js",
    "static": true,
    "longname": "packages/utils/src/lang.js~WHITESPACE_REPLACEMENTS",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "function",
    "name": "stripWhitespace",
    "memberof": "packages/utils/src/lang.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/lang.js~stripWhitespace",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/lang.js",
    "importStyle": "{stripWhitespace}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "string",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "file",
    "name": "packages/utils/src/locking.js",
    "content": "import path from 'path'\nimport consola from 'consola'\nimport hash from 'hash-sum'\nimport fs from 'fs-extra'\nimport properlock from 'proper-lockfile'\nimport onExit from 'signal-exit'\n\nexport const lockPaths = new Set()\n\nexport const defaultLockOptions = {\n  stale: 30000,\n  onCompromised: err => consola.warn(err)\n}\n\nexport function getLockOptions (options) {\n  return Object.assign({}, defaultLockOptions, options)\n}\n\nexport function createLockPath ({ id = 'nuxt', dir, root }) {\n  const sum = hash(`${root}-${dir}`)\n\n  return path.resolve(root, 'node_modules/.cache/nuxt', `${id}-lock-${sum}`)\n}\n\nexport async function getLockPath (config) {\n  const lockPath = createLockPath(config)\n\n  // the lock is created for the lockPath as ${lockPath}.lock\n  // so the (temporary) lockPath needs to exist\n  await fs.ensureDir(lockPath)\n\n  return lockPath\n}\n\nexport async function lock ({ id, dir, root, options }) {\n  const lockPath = await getLockPath({ id, dir, root })\n\n  try {\n    const locked = await properlock.check(lockPath)\n    if (locked) {\n      consola.fatal(`A lock with id '${id}' already exists on ${dir}`)\n    }\n  } catch (e) {\n    consola.debug(`Check for an existing lock with id '${id}' on ${dir} failed`, e)\n  }\n\n  let lockWasCompromised = false\n  let release\n\n  try {\n    options = getLockOptions(options)\n\n    const onCompromised = options.onCompromised\n    options.onCompromised = (err) => {\n      onCompromised(err)\n      lockWasCompromised = true\n    }\n\n    release = await properlock.lock(lockPath, options)\n  } catch (e) {}\n\n  if (!release) {\n    consola.warn(`Unable to get a lock with id '${id}' on ${dir} (but will continue)`)\n    return false\n  }\n\n  if (!lockPaths.size) {\n    // make sure to always cleanup our temporary lockPaths\n    onExit(() => {\n      for (const lockPath of lockPaths) {\n        fs.removeSync(lockPath)\n      }\n    })\n  }\n\n  lockPaths.add(lockPath)\n\n  return async function lockRelease () {\n    try {\n      await fs.remove(lockPath)\n      lockPaths.delete(lockPath)\n\n      // release as last so the lockPath is still removed\n      // when it fails on a compromised lock\n      await release()\n    } catch (e) {\n      if (!lockWasCompromised || !e.message.includes('already released')) {\n        consola.debug(e)\n        return\n      }\n\n      // proper-lockfile doesnt remove lockDir when lock is compromised\n      // removing it here could cause the 'other' process to throw an error\n      // as well, but in our case its much more likely the lock was\n      // compromised due to mtime update timeouts\n      const lockDir = `${lockPath}.lock`\n      if (await fs.exists(lockDir)) {\n        await fs.remove(lockDir)\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/locking.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 519,
    "kind": "variable",
    "name": "lockPaths",
    "memberof": "packages/utils/src/locking.js",
    "static": true,
    "longname": "packages/utils/src/locking.js~lockPaths",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/locking.js",
    "importStyle": "{lockPaths}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 520,
    "kind": "variable",
    "name": "defaultLockOptions",
    "memberof": "packages/utils/src/locking.js",
    "static": true,
    "longname": "packages/utils/src/locking.js~defaultLockOptions",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/locking.js",
    "importStyle": "{defaultLockOptions}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"stale\": number, \"onCompromised\": *}"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "function",
    "name": "getLockOptions",
    "memberof": "packages/utils/src/locking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/locking.js~getLockOptions",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/locking.js",
    "importStyle": "{getLockOptions}",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 522,
    "kind": "function",
    "name": "createLockPath",
    "memberof": "packages/utils/src/locking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/locking.js~createLockPath",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/locking.js",
    "importStyle": "{createLockPath}",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 523,
    "kind": "function",
    "name": "getLockPath",
    "memberof": "packages/utils/src/locking.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/utils/src/locking.js~getLockPath",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/locking.js",
    "importStyle": "{getLockPath}",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 524,
    "kind": "function",
    "name": "lock",
    "memberof": "packages/utils/src/locking.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/utils/src/locking.js~lock",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/locking.js",
    "importStyle": "{lock}",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "file",
    "name": "packages/utils/src/modern.js",
    "content": "import UAParser from 'ua-parser-js'\nimport semver from 'semver'\n\nexport const ModernBrowsers = {\n  Edge: '16',\n  Firefox: '60',\n  Chrome: '61',\n  'Chrome Headless': '61',\n  Chromium: '61',\n  Iron: '61',\n  Safari: '10.1',\n  Opera: '48',\n  Yandex: '18',\n  Vivaldi: '1.14',\n  'Mobile Safari': '10.3'\n}\n\nlet __modernBrowsers\n\nconst getModernBrowsers = () => {\n  if (__modernBrowsers) {\n    return __modernBrowsers\n  }\n\n  __modernBrowsers = Object.keys(ModernBrowsers)\n    .reduce((allBrowsers, browser) => {\n      allBrowsers[browser] = semver.coerce(ModernBrowsers[browser])\n      return allBrowsers\n    }, {})\n  return __modernBrowsers\n}\n\nexport const isModernBrowser = (ua) => {\n  if (!ua) {\n    return false\n  }\n  const { browser } = UAParser(ua)\n  const browserVersion = semver.coerce(browser.version)\n  if (!browserVersion) {\n    return false\n  }\n  const modernBrowsers = getModernBrowsers()\n  return Boolean(modernBrowsers[browser.name] && semver.gte(browserVersion, modernBrowsers[browser.name]))\n}\n\nexport const isModernRequest = (req, modernMode = false) => {\n  if (modernMode === false) {\n    return false\n  }\n\n  const { socket = {}, headers } = req\n  if (socket._modern === undefined) {\n    const ua = headers && headers['user-agent']\n    socket._modern = isModernBrowser(ua)\n  }\n\n  return socket._modern\n}\n\n// https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc\nexport const safariNoModuleFix = '!function(){var e=document,t=e.createElement(\"script\");if(!(\"noModule\"in t)&&\"onbeforeload\"in t){var n=!1;e.addEventListener(\"beforeload\",function(e){if(e.target===t)n=!0;else if(!e.target.hasAttribute(\"nomodule\")||!n)return;e.preventDefault()},!0),t.type=\"module\",t.src=\".\",e.head.appendChild(t),t.remove()}}();'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/modern.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "ModernBrowsers",
    "memberof": "packages/utils/src/modern.js",
    "static": true,
    "longname": "packages/utils/src/modern.js~ModernBrowsers",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/modern.js",
    "importStyle": "{ModernBrowsers}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"Edge\": string, \"Firefox\": string, \"Chrome\": string, \"Chrome Headless\": string, \"Chromium\": string, \"Iron\": string, \"Safari\": string, \"Opera\": string, \"Yandex\": string, \"Vivaldi\": string, \"Mobile Safari\": string}"
      ]
    }
  },
  {
    "__docId__": 527,
    "kind": "function",
    "name": "getModernBrowsers",
    "memberof": "packages/utils/src/modern.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/modern.js~getModernBrowsers",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/modern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 528,
    "kind": "function",
    "name": "isModernBrowser",
    "memberof": "packages/utils/src/modern.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/modern.js~isModernBrowser",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/modern.js",
    "importStyle": "{isModernBrowser}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "ua",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "function",
    "name": "isModernRequest",
    "memberof": "packages/utils/src/modern.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/modern.js~isModernRequest",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/modern.js",
    "importStyle": "{isModernRequest}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "modernMode",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "variable",
    "name": "safariNoModuleFix",
    "memberof": "packages/utils/src/modern.js",
    "static": true,
    "longname": "packages/utils/src/modern.js~safariNoModuleFix",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/modern.js",
    "importStyle": "{safariNoModuleFix}",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "file",
    "name": "packages/utils/src/resolve.js",
    "content": "import path from 'path'\nimport consola from 'consola'\nimport { escapeRegExp } from 'lodash'\n\nexport const startsWithAlias = aliasArray => str => aliasArray.some(c => str.startsWith(c))\n\nexport const startsWithSrcAlias = startsWithAlias(['@', '~'])\n\nexport const startsWithRootAlias = startsWithAlias(['@@', '~~'])\n\nexport const isWindows = process.platform.startsWith('win')\n\nexport const wp = function wp (p = '') {\n  if (isWindows) {\n    return p.replace(/\\\\/g, '\\\\\\\\')\n  }\n  return p\n}\n\n// Kept for backward compat (modules may use it from template context)\nexport const wChunk = function wChunk (p = '') {\n  return p\n}\n\nconst reqSep = /\\//g\nconst sysSep = escapeRegExp(path.sep)\nconst normalize = string => string.replace(reqSep, sysSep)\n\nexport const r = function r (...args) {\n  const lastArg = args[args.length - 1]\n\n  if (startsWithSrcAlias(lastArg)) {\n    return wp(lastArg)\n  }\n\n  return wp(path.resolve(...args.map(normalize)))\n}\n\nexport const relativeTo = function relativeTo (...args) {\n  const dir = args.shift()\n\n  // Keep webpack inline loader intact\n  if (args[0].includes('!')) {\n    const loaders = args.shift().split('!')\n\n    return loaders.concat(relativeTo(dir, loaders.pop(), ...args)).join('!')\n  }\n\n  // Resolve path\n  const resolvedPath = r(...args)\n\n  // Check if path is an alias\n  if (startsWithSrcAlias(resolvedPath)) {\n    return resolvedPath\n  }\n\n  // Make correct relative path\n  let rp = path.relative(dir, resolvedPath)\n  if (rp[0] !== '.') {\n    rp = '.' + path.sep + rp\n  }\n\n  return wp(rp)\n}\n\nexport function defineAlias (src, target, prop, opts = {}) {\n  const { bind = true, warn = false } = opts\n\n  if (Array.isArray(prop)) {\n    for (const p of prop) {\n      defineAlias(src, target, p, opts)\n    }\n    return\n  }\n\n  let targetVal = target[prop]\n  if (bind && typeof targetVal === 'function') {\n    targetVal = targetVal.bind(target)\n  }\n\n  let warned = false\n\n  Object.defineProperty(src, prop, {\n    get: () => {\n      if (warn && !warned) {\n        warned = true\n        consola.warn({\n          message: `'${prop}' is deprecated'`,\n          additional: new Error().stack.split('\\n').splice(2).join('\\n')\n        })\n      }\n      return targetVal\n    }\n  })\n}\n\nconst isIndex = s => /(.*)\\/index\\.[^/]+$/.test(s)\n\nexport function isIndexFileAndFolder (pluginFiles) {\n  // Return early in case the matching file count exceeds 2 (index.js + folder)\n  if (pluginFiles.length !== 2) {\n    return false\n  }\n  return pluginFiles.some(isIndex)\n}\n\nexport const getMainModule = () => {\n  return (require && require.main) || (module && module.main) || module\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/resolve.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 532,
    "kind": "function",
    "name": "startsWithAlias",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~startsWithAlias",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{startsWithAlias}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "aliasArray",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 533,
    "kind": "variable",
    "name": "startsWithSrcAlias",
    "memberof": "packages/utils/src/resolve.js",
    "static": true,
    "longname": "packages/utils/src/resolve.js~startsWithSrcAlias",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{startsWithSrcAlias}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 534,
    "kind": "variable",
    "name": "startsWithRootAlias",
    "memberof": "packages/utils/src/resolve.js",
    "static": true,
    "longname": "packages/utils/src/resolve.js~startsWithRootAlias",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{startsWithRootAlias}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "variable",
    "name": "isWindows",
    "memberof": "packages/utils/src/resolve.js",
    "static": true,
    "longname": "packages/utils/src/resolve.js~isWindows",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{isWindows}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 536,
    "kind": "function",
    "name": "wp",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~wp",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{wp}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "p",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 537,
    "kind": "function",
    "name": "wChunk",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~wChunk",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{wChunk}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "p",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "variable",
    "name": "reqSep",
    "memberof": "packages/utils/src/resolve.js",
    "static": true,
    "longname": "packages/utils/src/resolve.js~reqSep",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 539,
    "kind": "variable",
    "name": "sysSep",
    "memberof": "packages/utils/src/resolve.js",
    "static": true,
    "longname": "packages/utils/src/resolve.js~sysSep",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 540,
    "kind": "function",
    "name": "normalize",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~normalize",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "string",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 541,
    "kind": "function",
    "name": "r",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~r",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{r}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "function",
    "name": "relativeTo",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~relativeTo",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{relativeTo}",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "function",
    "name": "defineAlias",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~defineAlias",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{defineAlias}",
    "description": "",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "prop",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "opts",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 544,
    "kind": "function",
    "name": "isIndex",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~isIndex",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 545,
    "kind": "function",
    "name": "isIndexFileAndFolder",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~isIndexFileAndFolder",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{isIndexFileAndFolder}",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pluginFiles",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 546,
    "kind": "function",
    "name": "getMainModule",
    "memberof": "packages/utils/src/resolve.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/resolve.js~getMainModule",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/resolve.js",
    "importStyle": "{getMainModule}",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "file",
    "name": "packages/utils/src/route.js",
    "content": "import path from 'path'\nimport { get } from 'lodash'\nimport consola from 'consola'\nimport { normalizeURL, withTrailingSlash, withoutTrailingSlash } from 'ufo'\nimport { r } from './resolve'\n\nconst routeChildren = function (route) {\n  const hasChildWithEmptyPath = route.children.some(child => child.path === '')\n  if (hasChildWithEmptyPath) {\n    return route.children\n  }\n  return [\n    // Add default child to render parent page\n    {\n      ...route,\n      children: undefined\n    },\n    ...route.children\n  ]\n}\n\nexport const flatRoutes = function flatRoutes (router, fileName = '', routes = []) {\n  router.forEach((r) => {\n    if ([':', '*'].some(c => r.path.includes(c))) {\n      return\n    }\n    const route = `${fileName}${r.path}/`.replace(/\\/+/g, '/')\n    if (r.children) {\n      return flatRoutes(routeChildren(r), route, routes)\n    }\n\n    // if child path is already absolute, do not make any concatenations\n    if (r.path && r.path.startsWith('/')) {\n      routes.push(r.path)\n    } else if (route !== '/' && route[route.length - 1] === '/') {\n      routes.push(route.slice(0, -1))\n    } else {\n      routes.push(route)\n    }\n  })\n  return routes\n}\n\n// eslint-disable-next-line default-param-last\nfunction cleanChildrenRoutes (routes, isChild = false, routeNameSplitter = '-', trailingSlash, parentRouteName) {\n  const regExpIndex = new RegExp(`${routeNameSplitter}index$`)\n  const regExpParentRouteName = new RegExp(`^${parentRouteName}${routeNameSplitter}`)\n  const routesIndex = []\n  routes.forEach((route) => {\n    if (regExpIndex.test(route.name) || route.name === 'index') {\n      const res = route.name.replace(regExpParentRouteName, '').split(routeNameSplitter)\n      routesIndex.push(res)\n    }\n  })\n  routes.forEach((route) => {\n    route.path = isChild ? route.path.replace('/', '') : route.path\n    if (route.path.includes('?')) {\n      if (route.name.endsWith(`${routeNameSplitter}index`)) {\n        route.path = route.path.replace(/\\?$/, '')\n      }\n      const names = route.name.replace(regExpParentRouteName, '').split(routeNameSplitter)\n      const paths = route.path.split('/')\n      if (!isChild) {\n        paths.shift()\n      } // clean first / for parents\n      routesIndex.forEach((r) => {\n        const i = r.indexOf('index')\n        if (i < paths.length) {\n          for (let a = 0; a <= i; a++) {\n            if (a === i) {\n              paths[a] = paths[a].replace('?', '')\n            }\n            if (a < i && names[a] !== r[a]) {\n              break\n            }\n          }\n        }\n      })\n      route.path = (isChild ? '' : '/') + paths.join('/')\n    }\n    route.name = route.name.replace(regExpIndex, '')\n    if (route.children) {\n      const defaultChildRoute = route.children.find(child => child.path === '/' || child.path === '')\n      const routeName = route.name\n      if (defaultChildRoute) {\n        route.children.forEach((child) => {\n          if (child.path !== defaultChildRoute.path) {\n            const parts = child.path.split('/')\n            parts[1] = parts[1].endsWith('?') ? parts[1].substr(0, parts[1].length - 1) : parts[1]\n            child.path = parts.join('/')\n          }\n        })\n        delete route.name\n      }\n      route.children = cleanChildrenRoutes(route.children, true, routeNameSplitter, trailingSlash, routeName)\n    }\n  })\n  return routes\n}\n\nconst DYNAMIC_ROUTE_REGEX = /^\\/([:*])/\n\nexport const sortRoutes = function sortRoutes (routes) {\n  routes.sort((a, b) => {\n    if (!a.path.length) {\n      return -1\n    }\n    if (!b.path.length) {\n      return 1\n    }\n    // Order: /static, /index, /:dynamic\n    // Match exact route before index: /login before /index/_slug\n    if (a.path === '/') {\n      return DYNAMIC_ROUTE_REGEX.test(b.path) ? -1 : 1\n    }\n    if (b.path === '/') {\n      return DYNAMIC_ROUTE_REGEX.test(a.path) ? 1 : -1\n    }\n\n    let i\n    let res = 0\n    let y = 0\n    let z = 0\n    const _a = a.path.split('/')\n    const _b = b.path.split('/')\n    for (i = 0; i < _a.length; i++) {\n      if (res !== 0) {\n        break\n      }\n      y = _a[i] === '*' ? 2 : _a[i].includes(':') ? 1 : 0\n      z = _b[i] === '*' ? 2 : _b[i].includes(':') ? 1 : 0\n      res = y - z\n      // If a.length >= b.length\n      if (i === _b.length - 1 && res === 0) {\n        // unless * found sort by level, then alphabetically\n        res = _a[i] === '*'\n          ? -1\n          : (\n            _a.length === _b.length ? a.path.localeCompare(b.path) : (_a.length - _b.length)\n          )\n      }\n    }\n\n    if (res === 0) {\n      // unless * found sort by level, then alphabetically\n      res = _a[i - 1] === '*' && _b[i]\n        ? 1\n        : (\n          _a.length === _b.length ? a.path.localeCompare(b.path) : (_a.length - _b.length)\n        )\n    }\n    return res\n  })\n\n  routes.forEach((route) => {\n    if (route.children) {\n      sortRoutes(route.children)\n    }\n  })\n\n  return routes\n}\n\nexport const createRoutes = function createRoutes ({\n  files,\n  srcDir,\n  pagesDir = '',\n  routeNameSplitter = '-',\n  supportedExtensions = ['vue', 'js'],\n  trailingSlash\n}) {\n  const routes = []\n  files.forEach((file) => {\n    const keys = file\n      .replace(new RegExp(`^${pagesDir}`), '')\n      .replace(new RegExp(`\\\\.(${supportedExtensions.join('|')})$`), '')\n      .replace(/\\/{2,}/g, '/')\n      .split('/')\n      .slice(1)\n    const route = { name: '', path: '', component: r(srcDir, file) }\n    let parent = routes\n    keys.forEach((key, i) => {\n      // remove underscore only, if its the prefix\n      const sanitizedKey = key.startsWith('_') ? key.substr(1) : key\n\n      route.name = route.name\n        ? route.name + routeNameSplitter + sanitizedKey\n        : sanitizedKey\n      route.name += key === '_' ? 'all' : ''\n      route.chunkName = file.replace(new RegExp(`\\\\.(${supportedExtensions.join('|')})$`), '')\n      const child = parent.find(parentRoute => parentRoute.name === route.name)\n\n      if (child) {\n        child.children = child.children || []\n        parent = child.children\n        route.path = ''\n      } else if (key === 'index' && i + 1 === keys.length) {\n        route.path += i > 0 ? '' : '/'\n      } else {\n        route.path += '/' + normalizeURL(getRoutePathExtension(key))\n        if (key.startsWith('_') && key.length > 1) {\n          route.path += '?'\n        }\n      }\n    })\n    if (trailingSlash !== undefined) {\n      route.pathToRegexpOptions = { ...route.pathToRegexpOptions, strict: true }\n      if (trailingSlash && !route.path.endsWith('*')) {\n        route.path = withTrailingSlash(route.path)\n      } else {\n        route.path = withoutTrailingSlash(route.path)\n      }\n    }\n\n    parent.push(route)\n  })\n\n  sortRoutes(routes)\n  return cleanChildrenRoutes(routes, false, routeNameSplitter, trailingSlash)\n}\n\n// Guard dir1 from dir2 which can be indiscriminately removed\nexport const guardDir = function guardDir (options, key1, key2) {\n  const dir1 = get(options, key1, false)\n  const dir2 = get(options, key2, false)\n\n  if (\n    dir1 &&\n    dir2 &&\n    (\n      dir1 === dir2 ||\n      (\n        dir1.startsWith(dir2) &&\n        !path.basename(dir1).startsWith(path.basename(dir2))\n      )\n    )\n  ) {\n    const errorMessage = `options.${key2} cannot be a parent of or same as ${key1}`\n    consola.fatal(errorMessage)\n    throw new Error(errorMessage)\n  }\n}\n\nconst getRoutePathExtension = (key) => {\n  if (key === '_') {\n    return '*'\n  }\n\n  if (key.startsWith('_')) {\n    return `:${key.substr(1)}`\n  }\n\n  return key\n}\n\nexport const promisifyRoute = function promisifyRoute (fn, ...args) {\n  // If routes is an array\n  if (Array.isArray(fn)) {\n    return Promise.resolve(fn)\n  }\n  // If routes is a function expecting a callback\n  if (fn.length === arguments.length) {\n    return new Promise((resolve, reject) => {\n      fn((err, routeParams) => {\n        if (err) {\n          reject(err)\n        }\n        resolve(routeParams)\n      }, ...args)\n    })\n  }\n  let promise = fn(...args)\n  if (\n    !promise ||\n    (!(promise instanceof Promise) && typeof promise.then !== 'function')\n  ) {\n    promise = Promise.resolve(promise)\n  }\n  return promise\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/route.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 548,
    "kind": "function",
    "name": "routeChildren",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~routeChildren",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 549,
    "kind": "function",
    "name": "flatRoutes",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~flatRoutes",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": "{flatRoutes}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "router",
        "types": [
          "*"
        ]
      },
      {
        "name": "fileName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      },
      {
        "name": "routes",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "function",
    "name": "cleanChildrenRoutes",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~cleanChildrenRoutes",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "routes",
        "types": [
          "*"
        ]
      },
      {
        "name": "isChild",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "routeNameSplitter",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "-",
        "defaultValue": "-"
      },
      {
        "name": "trailingSlash",
        "types": [
          "*"
        ]
      },
      {
        "name": "parentRouteName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "variable",
    "name": "DYNAMIC_ROUTE_REGEX",
    "memberof": "packages/utils/src/route.js",
    "static": true,
    "longname": "packages/utils/src/route.js~DYNAMIC_ROUTE_REGEX",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "function",
    "name": "sortRoutes",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~sortRoutes",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": "{sortRoutes}",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "routes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 553,
    "kind": "function",
    "name": "createRoutes",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~createRoutes",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": "{createRoutes}",
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"files\": *, \"srcDir\": *, \"pagesDir\": *, \"routeNameSplitter\": *, \"supportedExtensions\": *, \"trailingSlash\": *}"
        ],
        "defaultRaw": {
          "files": null,
          "srcDir": null,
          "pagesDir": null,
          "routeNameSplitter": null,
          "supportedExtensions": null,
          "trailingSlash": null
        },
        "defaultValue": "{\"files\":null,\"srcDir\":null,\"pagesDir\":null,\"routeNameSplitter\":null,\"supportedExtensions\":null,\"trailingSlash\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "function",
    "name": "guardDir",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~guardDir",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": "{guardDir}",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "key1",
        "types": [
          "*"
        ]
      },
      {
        "name": "key2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 555,
    "kind": "function",
    "name": "getRoutePathExtension",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~getRoutePathExtension",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 556,
    "kind": "function",
    "name": "promisifyRoute",
    "memberof": "packages/utils/src/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/route.js~promisifyRoute",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/route.js",
    "importStyle": "{promisifyRoute}",
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 557,
    "kind": "file",
    "name": "packages/utils/src/serialize.js",
    "content": "import serialize from 'serialize-javascript'\n\nexport function normalizeFunctions (obj) {\n  if (typeof obj !== 'object' || Array.isArray(obj) || obj === null) {\n    return obj\n  }\n  for (const key in obj) {\n    if (key === '__proto__' || key === 'constructor') {\n      continue\n    }\n    const val = obj[key]\n    if (val !== null && typeof val === 'object' && !Array.isArray(obj)) {\n      obj[key] = normalizeFunctions(val)\n    }\n    if (typeof obj[key] === 'function') {\n      const asString = obj[key].toString()\n      const match = asString.match(/^([^{(]+)=>\\s*([\\0-\\uFFFF]*)/)\n      if (match) {\n        const fullFunctionBody = match[2].match(/^{?(\\s*return\\s+)?([\\0-\\uFFFF]*?)}?$/)\n        let functionBody = fullFunctionBody[2].trim()\n        if (fullFunctionBody[1] || !match[2].trim().match(/^\\s*{/)) {\n          functionBody = `return ${functionBody}`\n        }\n        // eslint-disable-next-line no-new-func\n        obj[key] = new Function(...match[1].split(',').map(arg => arg.trim()), functionBody)\n      }\n    }\n  }\n  return obj\n}\n\nexport function serializeFunction (func) {\n  let open = false\n  func = normalizeFunctions(func)\n  return serialize(func)\n    .replace(serializeFunction.assignmentRE, (_, spaces) => {\n      return `${spaces}: function (`\n    })\n    .replace(serializeFunction.internalFunctionRE, (_, spaces, name, args) => {\n      if (open) {\n        return `${spaces}${name}: function (${args}) {`\n      } else {\n        open = true\n        return _\n      }\n    })\n    .replace(new RegExp(`${(func.name || 'function').replace('$', '\\\\$')}\\\\s*\\\\(`), 'function(')\n    .replace('function function', 'function')\n}\n\nserializeFunction.internalFunctionRE = /^(\\s*)(?!(?:if)|(?:for)|(?:while)|(?:switch)|(?:catch))(\\w+)\\s*\\((.*?)\\)\\s*\\{/gm\nserializeFunction.assignmentRE = /^(\\s*):(\\w+)\\(/gm\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/serialize.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 558,
    "kind": "function",
    "name": "normalizeFunctions",
    "memberof": "packages/utils/src/serialize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/serialize.js~normalizeFunctions",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/serialize.js",
    "importStyle": "{normalizeFunctions}",
    "description": "",
    "lineNumber": 3,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 559,
    "kind": "function",
    "name": "serializeFunction",
    "memberof": "packages/utils/src/serialize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/serialize.js~serializeFunction",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/serialize.js",
    "importStyle": "{serializeFunction}",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "file",
    "name": "packages/utils/src/task.js",
    "content": "export const sequence = function sequence (tasks, fn) {\n  return tasks.reduce(\n    (promise, task) => promise.then(() => fn(task)),\n    Promise.resolve()\n  )\n}\n\nexport const parallel = function parallel (tasks, fn) {\n  return Promise.all(tasks.map(fn))\n}\n\nexport const chainFn = function chainFn (base, fn) {\n  if (typeof fn !== 'function') {\n    return base\n  }\n\n  if (typeof base !== 'function') {\n    return fn\n  }\n\n  return function (arg0, ...args) {\n    const next = (previous = arg0) => {\n      const fnResult = fn.call(this, previous, ...args)\n\n      if (fnResult && typeof fnResult.then === 'function') {\n        return fnResult.then(res => res || previous)\n      }\n\n      return fnResult || previous\n    }\n\n    const baseResult = base.call(this, arg0, ...args)\n\n    if (baseResult && typeof baseResult.then === 'function') {\n      return baseResult.then(res => next(res))\n    }\n\n    return next(baseResult)\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/task.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "function",
    "name": "sequence",
    "memberof": "packages/utils/src/task.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/task.js~sequence",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/task.js",
    "importStyle": "{sequence}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "tasks",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 562,
    "kind": "function",
    "name": "parallel",
    "memberof": "packages/utils/src/task.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/task.js~parallel",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/task.js",
    "importStyle": "{parallel}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "tasks",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 563,
    "kind": "function",
    "name": "chainFn",
    "memberof": "packages/utils/src/task.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/task.js~chainFn",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/task.js",
    "importStyle": "{chainFn}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "base",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 564,
    "kind": "file",
    "name": "packages/utils/src/timer.js",
    "content": "async function promiseFinally (fn, finalFn) {\n  let result\n  try {\n    if (typeof fn === 'function') {\n      result = await fn()\n    } else {\n      result = await fn\n    }\n  } finally {\n    finalFn()\n  }\n  return result\n}\n\nexport const timeout = function timeout (fn, ms, msg) {\n  let timerId\n  const warpPromise = promiseFinally(fn, () => clearTimeout(timerId))\n  const timerPromise = new Promise((resolve, reject) => {\n    timerId = setTimeout(() => reject(new Error(msg)), ms)\n  })\n  return Promise.race([warpPromise, timerPromise])\n}\n\nexport const waitFor = function waitFor (ms) {\n  return new Promise(resolve => setTimeout(resolve, ms || 0))\n}\nexport class Timer {\n  constructor () {\n    this._times = new Map()\n  }\n\n  start (name, description) {\n    const time = {\n      name,\n      description,\n      start: this.hrtime()\n    }\n    this._times.set(name, time)\n    return time\n  }\n\n  end (name) {\n    if (this._times.has(name)) {\n      const time = this._times.get(name)\n      time.duration = this.hrtime(time.start)\n      this._times.delete(name)\n      return time\n    }\n  }\n\n  hrtime (start) {\n    const useBigInt = typeof process.hrtime.bigint === 'function'\n    if (start) {\n      const end = useBigInt ? process.hrtime.bigint() : process.hrtime(start)\n      return useBigInt\n        ? (end - start) / BigInt(1000000)\n        : (end[0] * 1e3) + (end[1] * 1e-6)\n    }\n    return useBigInt ? process.hrtime.bigint() : process.hrtime()\n  }\n\n  clear () {\n    this._times.clear()\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/src/timer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "function",
    "name": "promiseFinally",
    "memberof": "packages/utils/src/timer.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/utils/src/timer.js~promiseFinally",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/utils/src/timer.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 1,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "finalFn",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 566,
    "kind": "function",
    "name": "timeout",
    "memberof": "packages/utils/src/timer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/timer.js~timeout",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/timer.js",
    "importStyle": "{timeout}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      },
      {
        "name": "ms",
        "types": [
          "*"
        ]
      },
      {
        "name": "msg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 567,
    "kind": "function",
    "name": "waitFor",
    "memberof": "packages/utils/src/timer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/utils/src/timer.js~waitFor",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/timer.js",
    "importStyle": "{waitFor}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "ms",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 568,
    "kind": "class",
    "name": "Timer",
    "memberof": "packages/utils/src/timer.js",
    "static": true,
    "longname": "packages/utils/src/timer.js~Timer",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/utils/src/timer.js",
    "importStyle": "{Timer}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 569,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/utils/src/timer.js~Timer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/utils/src/timer.js~Timer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 28
  },
  {
    "__docId__": 570,
    "kind": "member",
    "name": "_times",
    "memberof": "packages/utils/src/timer.js~Timer",
    "static": false,
    "longname": "packages/utils/src/timer.js~Timer#_times",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 571,
    "kind": "method",
    "name": "start",
    "memberof": "packages/utils/src/timer.js~Timer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/utils/src/timer.js~Timer#start",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 572,
    "kind": "method",
    "name": "end",
    "memberof": "packages/utils/src/timer.js~Timer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/utils/src/timer.js~Timer#end",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 573,
    "kind": "method",
    "name": "hrtime",
    "memberof": "packages/utils/src/timer.js~Timer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/utils/src/timer.js~Timer#hrtime",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 574,
    "kind": "method",
    "name": "clear",
    "memberof": "packages/utils/src/timer.js~Timer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/utils/src/timer.js~Timer#clear",
    "access": "public",
    "description": "",
    "lineNumber": 62,
    "params": [],
    "return": null
  },
  {
    "__docId__": 575,
    "kind": "file",
    "name": "packages/utils/test/serialize.test.input.js",
    "content": "// NOTE: This file is excluded from being transformed by babel-jest and needs to use the CommonJS syntax.\n\nmodule.exports = {\n  arrow: {\n  // eslint-disable-next-line arrow-parens\n    fn1: foobar => {},\n    fn2: foobar => 1,\n    // eslint-disable-next-line arrow-parens\n    fn3: foobar => {\n      return 3\n    },\n    // eslint-disable-next-line arrow-parens\n    fn4: arg1 =>\n      2 * arg1,\n    fn5: () => {},\n    // eslint-disable-next-line arrow-parens\n    fn6: foobar => (foobar ? 1 : 0)\n  },\n  normal: {\n    fn: function () {} // eslint-disable-line object-shorthand\n  },\n  shorthand: {\n    fn () {},\n    // eslint-disable-next-line space-before-function-paren\n    $fn() {},\n    // eslint-disable-next-line no-unused-vars\n    fn_arrow () { const _ = rule => rule },\n    fn_script () {\n      return 'function xyz(){};a=false?true:xyz();'\n    },\n    fn_internal (arg) {\n      if (arg) {\n        return {\n          title () {\n            return 'test'\n          }\n        }\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/utils/test/serialize.test.input.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 576,
    "kind": "file",
    "name": "packages/vue-app/package.js",
    "content": "export default {\n  build: true,\n  ignoreUnused: [\n    // used in vue-app\n    'ufo',\n    'node-fetch',\n    'unfetch',\n    'vue',\n    'vue-client-only',\n    'vue-meta',\n    'vue-no-ssr',\n    'vue-router',\n    'vue-template-compiler',\n    'vuex'\n  ]\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-app/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 577,
    "kind": "file",
    "name": "packages/vue-app/src/index.js",
    "content": "import path from 'path'\nimport { dependencies } from '../package.json'\n\nexport const template = {\n  dependencies,\n  dir: path.join(__dirname, '..', 'template'),\n  files: [\n    'App.js',\n    'client.js',\n    'index.js',\n    'jsonp.js',\n    'router.js',\n    'router.scrollBehavior.js',\n    'routes.json',\n    'server.js',\n    'utils.js',\n    'empty.js',\n    'mixins/fetch.server.js',\n    'mixins/fetch.client.js',\n    'components/nuxt-error.vue',\n    'components/nuxt-child.js',\n    'components/nuxt-link.server.js',\n    'components/nuxt-link.client.js',\n    'components/nuxt.js',\n    'views/app.template.html',\n    'views/error.html'\n  ]\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-app/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 578,
    "kind": "variable",
    "name": "template",
    "memberof": "packages/vue-app/src/index.js",
    "static": true,
    "longname": "packages/vue-app/src/index.js~template",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-app/src/index.js",
    "importStyle": "{template}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"dependencies\": *, \"dir\": *, \"files\": *}"
      ]
    }
  },
  {
    "__docId__": 579,
    "kind": "file",
    "name": "packages/vue-app/template/empty.js",
    "content": "// This file is intentionally left empty for noop aliases\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-app/template/empty.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 580,
    "kind": "file",
    "name": "packages/vue-app/template/jsonp.js",
    "content": "const chunks = {} // chunkId => exports\nconst chunksInstalling = {} // chunkId => Promise\nconst failedChunks = {}\n\nfunction importChunk(chunkId, src) {\n  // Already installed\n  if (chunks[chunkId]) {\n    return Promise.resolve(chunks[chunkId])\n  }\n\n  // Failed loading\n  if (failedChunks[chunkId]) {\n    return Promise.reject(failedChunks[chunkId])\n  }\n\n  // Installing\n  if (chunksInstalling[chunkId]) {\n    return chunksInstalling[chunkId]\n  }\n\n  // Set a promise in chunk cache\n  let resolve, reject\n  const promise = chunksInstalling[chunkId] = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  })\n\n  // Clear chunk data from cache\n  delete chunks[chunkId]\n\n  // Start chunk loading\n  const script = document.createElement('script')\n  script.charset = 'utf-8'\n  script.timeout = 120\n  script.src = src\n  let timeout\n\n  // Create error before stack unwound to get useful stacktrace later\n  const error = new Error()\n\n  // Complete handlers\n  const onScriptComplete = script.onerror = script.onload = (event) => {\n    // Cleanups\n    clearTimeout(timeout)\n    delete chunksInstalling[chunkId]\n\n    // Avoid mem leaks in IE\n    script.onerror = script.onload = null\n\n    // Verify chunk is loaded\n    if (chunks[chunkId]) {\n      return resolve(chunks[chunkId])\n    }\n\n    // Something bad happened\n    const errorType = event && (event.type === 'load' ? 'missing' : event.type)\n    const realSrc = event && event.target && event.target.src\n    error.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')'\n    error.name = 'ChunkLoadError'\n    error.type = errorType\n    error.request = realSrc\n    failedChunks[chunkId] = error\n    reject(error)\n  }\n\n  // Timeout\n  timeout = setTimeout(() => {\n    onScriptComplete({ type: 'timeout', target: script })\n  }, 120000)\n\n  // Append script\n  document.head.appendChild(script)\n\n  // Return promise\n  return promise\n}\n\nexport function installJsonp() {\n  window.__NUXT_JSONP__ = function (chunkId, exports) { chunks[chunkId] = exports }\n  window.__NUXT_JSONP_CACHE__ = chunks\n  window.__NUXT_IMPORT__ = importChunk\n}\n\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-app/template/jsonp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 581,
    "kind": "variable",
    "name": "chunks",
    "memberof": "packages/vue-app/template/jsonp.js",
    "static": true,
    "longname": "packages/vue-app/template/jsonp.js~chunks",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/vue-app/template/jsonp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 582,
    "kind": "variable",
    "name": "chunksInstalling",
    "memberof": "packages/vue-app/template/jsonp.js",
    "static": true,
    "longname": "packages/vue-app/template/jsonp.js~chunksInstalling",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/vue-app/template/jsonp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 583,
    "kind": "variable",
    "name": "failedChunks",
    "memberof": "packages/vue-app/template/jsonp.js",
    "static": true,
    "longname": "packages/vue-app/template/jsonp.js~failedChunks",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/vue-app/template/jsonp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 584,
    "kind": "function",
    "name": "importChunk",
    "memberof": "packages/vue-app/template/jsonp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/vue-app/template/jsonp.js~importChunk",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/vue-app/template/jsonp.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "chunkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 585,
    "kind": "function",
    "name": "installJsonp",
    "memberof": "packages/vue-app/template/jsonp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/vue-app/template/jsonp.js~installJsonp",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-app/template/jsonp.js",
    "importStyle": "{installJsonp}",
    "description": "",
    "lineNumber": 78,
    "params": [],
    "return": null
  },
  {
    "__docId__": 586,
    "kind": "file",
    "name": "packages/vue-app/test/__utils__/index.js",
    "content": "import path from 'path'\nimport { remove } from 'fs-extra'\nimport consola from 'consola'\nimport { getNuxtConfig, Nuxt, Builder } from '../../../../test/utils'\n\nconst rootDir = path.resolve(__dirname, '..')\n\nexport async function compileTemplate (template, destination, options = {}) {\n  if (arguments.length < 3) {\n    options = destination || {}\n    destination = undefined\n  }\n\n  const config = getNuxtConfig(options)\n\n  config.rootDir = rootDir\n  config.dev = false\n  config.test = false\n  config.server = false\n\n  const nuxt = new Nuxt(config)\n  const builder = new Builder(nuxt)\n\n  const templateContext = builder.createTemplateContext()\n\n  const multipleTemplates = Array.isArray(template)\n  if (!multipleTemplates) {\n    template = [template]\n  }\n\n  templateContext.templateFiles = template.map((template) => {\n    if (typeof template === 'string') {\n      return {\n        src: path.resolve(rootDir, '../template', template),\n        dst: path.join(rootDir, '.nuxt', destination || path.basename(template)),\n        custom: false\n      }\n    }\n\n    return {\n      src: path.resolve(rootDir, '../template', template.src),\n      dst: path.join(rootDir, '.nuxt', template.dst),\n      custom: template.custom\n    }\n  })\n\n  try {\n    // clear all destinations\n    await Promise.all(templateContext.templateFiles.map(({ dst }) => remove(dst)))\n\n    await builder.compileTemplates(templateContext)\n\n    if (multipleTemplates) {\n      return templateContext.templateFiles.map(template => template.dst)\n    }\n\n    const [template] = templateContext.templateFiles\n    return template.dst\n  } catch (err) {\n    consola.error('Could not compile template', err.message, template)\n    return false\n  }\n}\n\nexport function importComponent (componentPath) {\n  return import(componentPath).then(m => m.default || m)\n}\n\nexport const vmTick = (vm) => {\n  return new Promise((resolve) => {\n    vm.$nextTick(resolve)\n  })\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-app/test/__utils__/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 587,
    "kind": "variable",
    "name": "rootDir",
    "memberof": "packages/vue-app/test/__utils__/index.js",
    "static": true,
    "longname": "packages/vue-app/test/__utils__/index.js~rootDir",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/vue-app/test/__utils__/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 588,
    "kind": "function",
    "name": "compileTemplate",
    "memberof": "packages/vue-app/test/__utils__/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "packages/vue-app/test/__utils__/index.js~compileTemplate",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-app/test/__utils__/index.js",
    "importStyle": "{compileTemplate}",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 589,
    "kind": "function",
    "name": "importComponent",
    "memberof": "packages/vue-app/test/__utils__/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/vue-app/test/__utils__/index.js~importComponent",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-app/test/__utils__/index.js",
    "importStyle": "{importComponent}",
    "description": "",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "componentPath",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 590,
    "kind": "function",
    "name": "vmTick",
    "memberof": "packages/vue-app/test/__utils__/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/vue-app/test/__utils__/index.js~vmTick",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-app/test/__utils__/index.js",
    "importStyle": "{vmTick}",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [
      {
        "name": "vm",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 591,
    "kind": "file",
    "name": "packages/vue-renderer/package.js",
    "content": "export default {\n  build: true\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-renderer/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 592,
    "kind": "file",
    "name": "packages/vue-renderer/src/index.js",
    "content": "export { default as VueRenderer } from './renderer'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-renderer/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 593,
    "kind": "file",
    "name": "packages/vue-renderer/src/renderer.js",
    "content": "import path from 'path'\nimport fs from 'fs-extra'\nimport consola from 'consola'\nimport { template } from 'lodash'\nimport { TARGETS, isModernRequest, urlJoin, waitFor } from '@nuxt/utils'\nimport { normalizeURL } from 'ufo'\nimport defu from 'defu'\n\nimport SPARenderer from './renderers/spa'\nimport SSRRenderer from './renderers/ssr'\nimport ModernRenderer from './renderers/modern'\n\nexport default class VueRenderer {\n  constructor (context) {\n    this.serverContext = context\n    this.options = this.serverContext.options\n\n    // Will be set by createRenderer\n    this.renderer = {\n      ssr: undefined,\n      modern: undefined,\n      spa: undefined\n    }\n\n    // Renderer runtime resources\n    Object.assign(this.serverContext.resources, {\n      clientManifest: undefined,\n      modernManifest: undefined,\n      serverManifest: undefined,\n      ssrTemplate: undefined,\n      spaTemplate: undefined,\n      errorTemplate: this.parseTemplate('Nuxt Internal Server Error')\n    })\n\n    // Default status\n    this._state = 'created'\n    this._error = null\n  }\n\n  ready () {\n    if (!this._readyPromise) {\n      this._state = 'loading'\n      this._readyPromise = this._ready()\n        .then(() => {\n          this._state = 'ready'\n          return this\n        })\n        .catch((error) => {\n          this._state = 'error'\n          this._error = error\n          throw error\n        })\n    }\n\n    return this._readyPromise\n  }\n\n  async _ready () {\n    // Resolve dist path\n    this.distPath = path.resolve(this.options.buildDir, 'dist', 'server')\n\n    // -- Development mode --\n    if (this.options.dev) {\n      this.serverContext.nuxt.hook('build:resources', mfs => this.loadResources(mfs))\n      return\n    }\n\n    // -- Production mode --\n\n    // Try once to load SSR resources from fs\n    await this.loadResources(fs)\n\n    // Without using `nuxt start` (programmatic, tests and generate)\n    if (!this.options._start) {\n      this.serverContext.nuxt.hook('build:resources', () => this.loadResources(fs))\n      return\n    }\n\n    // Verify resources\n    if (this.options.modern && !this.isModernReady) {\n      throw new Error(\n        `No modern build files found in ${this.distPath}.\\nUse either \\`nuxt build --modern\\` or \\`modern\\` option to build modern files.`\n      )\n    } else if (!this.isReady) {\n      throw new Error(\n        `No build files found in ${this.distPath}.\\nUse either \\`nuxt build\\` or \\`builder.build()\\` or start nuxt in development mode.`\n      )\n    }\n  }\n\n  async loadResources (_fs) {\n    const updated = []\n\n    const readResource = async (fileName, encoding) => {\n      try {\n        const fullPath = path.resolve(this.distPath, fileName)\n\n        if (!await _fs.exists(fullPath)) {\n          return\n        }\n        const contents = await _fs.readFile(fullPath, encoding)\n\n        return contents\n      } catch (err) {\n        consola.error('Unable to load resource:', fileName, err)\n      }\n    }\n\n    for (const resourceName in this.resourceMap) {\n      const { fileName, transform, encoding } = this.resourceMap[resourceName]\n\n      // Load resource\n      let resource = await readResource(fileName, encoding)\n\n      // Skip unavailable resources\n      if (!resource) {\n        continue\n      }\n\n      // Apply transforms\n      if (typeof transform === 'function') {\n        resource = await transform(resource, { readResource })\n      }\n\n      // Update resource\n      this.serverContext.resources[resourceName] = resource\n      updated.push(resourceName)\n    }\n\n    // Load templates\n    await this.loadTemplates()\n\n    await this.serverContext.nuxt.callHook('render:resourcesLoaded', this.serverContext.resources)\n\n    // Detect if any resource updated\n    if (updated.length > 0) {\n      // Create new renderer\n      this.createRenderer()\n    }\n  }\n\n  async loadTemplates () {\n    // Reload error template\n    const errorTemplatePath = path.resolve(this.options.buildDir, 'views/error.html')\n\n    if (await fs.exists(errorTemplatePath)) {\n      const errorTemplate = await fs.readFile(errorTemplatePath, 'utf8')\n      this.serverContext.resources.errorTemplate = this.parseTemplate(errorTemplate)\n    }\n\n    // Reload loading template\n    const loadingHTMLPath = path.resolve(this.options.buildDir, 'loading.html')\n\n    if (await fs.exists(loadingHTMLPath)) {\n      this.serverContext.resources.loadingHTML = await fs.readFile(loadingHTMLPath, 'utf8')\n      this.serverContext.resources.loadingHTML = this.serverContext.resources.loadingHTML.replace(/\\r|\\n|[\\t\\s]{3,}/g, '')\n    } else {\n      this.serverContext.resources.loadingHTML = ''\n    }\n  }\n\n  // TODO: Remove in Nuxt 3\n  get noSSR () { /* Backward compatibility */\n    return this.options.render.ssr === false\n  }\n\n  get SSR () {\n    return this.options.render.ssr === true\n  }\n\n  get isReady () {\n    // SPA\n    if (!this.serverContext.resources.spaTemplate || !this.renderer.spa) {\n      return false\n    }\n\n    // SSR\n    if (this.SSR && (!this.serverContext.resources.ssrTemplate || !this.renderer.ssr)) {\n      return false\n    }\n\n    return true\n  }\n\n  get isModernReady () {\n    return this.isReady && this.serverContext.resources.modernManifest\n  }\n\n  // TODO: Remove in Nuxt 3\n  get isResourcesAvailable () { /* Backward compatibility */\n    return this.isReady\n  }\n\n  detectModernBuild () {\n    const { options, resources } = this.serverContext\n    if ([false, 'client', 'server'].includes(options.modern)) {\n      return\n    }\n\n    const isExplicitStaticModern = options.target === TARGETS.static && options.modern\n    if (!resources.modernManifest && !isExplicitStaticModern) {\n      options.modern = false\n      return\n    }\n\n    options.modern = options.render.ssr ? 'server' : 'client'\n    consola.info(`Modern bundles are detected. Modern mode (\\`${options.modern}\\`) is enabled now.`)\n  }\n\n  createRenderer () {\n    // Resource clientManifest is always required\n    if (!this.serverContext.resources.clientManifest) {\n      return\n    }\n\n    this.detectModernBuild()\n\n    // Create SPA renderer\n    if (this.serverContext.resources.spaTemplate) {\n      this.renderer.spa = new SPARenderer(this.serverContext)\n    }\n\n    // Skip the rest if SSR resources are not available\n    if (this.serverContext.resources.ssrTemplate && this.serverContext.resources.serverManifest) {\n      // Create bundle renderer for SSR\n      this.renderer.ssr = new SSRRenderer(this.serverContext)\n\n      if (this.options.modern !== false) {\n        this.renderer.modern = new ModernRenderer(this.serverContext)\n      }\n    }\n  }\n\n  renderSPA (renderContext) {\n    return this.renderer.spa.render(renderContext)\n  }\n\n  renderSSR (renderContext) {\n    // Call renderToString from the bundleRenderer and generate the HTML (will update the renderContext as well)\n    const renderer = renderContext.modern ? this.renderer.modern : this.renderer.ssr\n    return renderer.render(renderContext)\n  }\n\n  async renderRoute (url, renderContext = {}, _retried = 0) {\n    /* istanbul ignore if */\n    if (!this.isReady) {\n      // Fall-back to loading-screen if enabled\n      if (this.options.build.loadingScreen) {\n        // Tell nuxt middleware to use `server:nuxt:renderLoading hook\n        return false\n      }\n\n      // Retry\n      const retryLimit = this.options.dev ? 60 : 3\n      if (_retried < retryLimit && this._state !== 'error') {\n        await this.ready().then(() => waitFor(1000))\n        return this.renderRoute(url, renderContext, _retried + 1)\n      }\n\n      // Throw Error\n      switch (this._state) {\n        case 'created':\n          throw new Error('Renderer ready() is not called! Please ensure `nuxt.ready()` is called and awaited.')\n        case 'loading':\n          throw new Error('Renderer is loading.')\n        case 'error':\n          throw this._error\n        case 'ready':\n          throw new Error(`Renderer resources are not loaded! Please check possible console errors and ensure dist (${this.distPath}) exists.`)\n        default:\n          throw new Error('Renderer is in unknown state!')\n      }\n    }\n\n    // Log rendered url\n    consola.debug(`Rendering url ${url}`)\n\n    // Add url to the renderContext\n    renderContext.url = normalizeURL(url)\n\n    // Add target to the renderContext\n    renderContext.target = this.options.target\n\n    const { req = {}, res = {} } = renderContext\n\n    // renderContext.spa\n    if (renderContext.spa === undefined) {\n      // TODO: Remove reading from renderContext.res in Nuxt3\n      renderContext.spa = !this.SSR || req.spa || res.spa\n    }\n\n    // renderContext.modern\n    if (renderContext.modern === undefined) {\n      const modernMode = this.options.modern\n      renderContext.modern = modernMode === 'client' || isModernRequest(req, modernMode)\n    }\n\n    // Set runtime config on renderContext\n    renderContext.runtimeConfig = {\n      private: renderContext.spa ? {} : defu(this.options.privateRuntimeConfig, this.options.publicRuntimeConfig),\n      public: { ...this.options.publicRuntimeConfig }\n    }\n\n    // Call renderContext hook\n    await this.serverContext.nuxt.callHook('vue-renderer:context', renderContext)\n\n    // Render SPA or SSR\n    return renderContext.spa\n      ? this.renderSPA(renderContext)\n      : this.renderSSR(renderContext)\n  }\n\n  get resourceMap () {\n    const publicPath = urlJoin(this.options.app.cdnURL, this.options.app.assetsPath)\n    return {\n      clientManifest: {\n        fileName: 'client.manifest.json',\n        transform: src => Object.assign(JSON.parse(src), { publicPath })\n      },\n      modernManifest: {\n        fileName: 'modern.manifest.json',\n        transform: src => Object.assign(JSON.parse(src), { publicPath })\n      },\n      serverManifest: {\n        fileName: 'server.manifest.json',\n        // BundleRenderer needs resolved contents\n        transform: async (src, { readResource }) => {\n          const serverManifest = JSON.parse(src)\n\n          const readResources = async (obj) => {\n            const _obj = {}\n            await Promise.all(Object.keys(obj).map(async (key) => {\n              _obj[key] = await readResource(obj[key])\n            }))\n            return _obj\n          }\n\n          const [files, maps] = await Promise.all([\n            readResources(serverManifest.files),\n            readResources(serverManifest.maps)\n          ])\n\n          // Try to parse sourcemaps\n          for (const map in maps) {\n            if (maps[map] && maps[map].version) {\n              continue\n            }\n            try {\n              maps[map] = JSON.parse(maps[map])\n            } catch (e) {\n              maps[map] = { version: 3, sources: [], mappings: '' }\n            }\n          }\n\n          return {\n            ...serverManifest,\n            files,\n            maps\n          }\n        }\n      },\n      ssrTemplate: {\n        fileName: 'index.ssr.html',\n        transform: src => this.parseTemplate(src)\n      },\n      spaTemplate: {\n        fileName: 'index.spa.html',\n        transform: src => this.parseTemplate(src)\n      }\n    }\n  }\n\n  parseTemplate (templateStr) {\n    return template(templateStr, {\n      interpolate: /{{([\\s\\S]+?)}}/g,\n      evaluate: /{%([\\s\\S]+?)%}/g\n    })\n  }\n\n  close () {\n    if (this.__closed) {\n      return\n    }\n    this.__closed = true\n\n    for (const key in this.renderer) {\n      delete this.renderer[key]\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-renderer/src/renderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 594,
    "kind": "class",
    "name": "VueRenderer",
    "memberof": "packages/vue-renderer/src/renderer.js",
    "static": true,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-renderer/src/renderer.js",
    "importStyle": "VueRenderer",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 595,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 596,
    "kind": "member",
    "name": "serverContext",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#serverContext",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 597,
    "kind": "member",
    "name": "options",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#options",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "renderer",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#renderer",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"ssr\": *, \"modern\": *, \"spa\": *}"
      ]
    }
  },
  {
    "__docId__": 599,
    "kind": "member",
    "name": "_state",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#_state",
    "access": "private",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 600,
    "kind": "member",
    "name": "_error",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#_error",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 601,
    "kind": "method",
    "name": "ready",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#ready",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 603,
    "kind": "member",
    "name": "_readyPromise",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#_readyPromise",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 607,
    "kind": "method",
    "name": "_ready",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#_ready",
    "access": "private",
    "description": "",
    "lineNumber": 58,
    "params": [],
    "return": null
  },
  {
    "__docId__": 608,
    "kind": "member",
    "name": "distPath",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#distPath",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 609,
    "kind": "method",
    "name": "loadResources",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#loadResources",
    "access": "public",
    "description": "",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_fs",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 610,
    "kind": "method",
    "name": "loadTemplates",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#loadTemplates",
    "access": "public",
    "description": "",
    "lineNumber": 142,
    "params": [],
    "return": null
  },
  {
    "__docId__": 611,
    "kind": "get",
    "name": "noSSR",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#noSSR",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 612,
    "kind": "get",
    "name": "SSR",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#SSR",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 613,
    "kind": "get",
    "name": "isReady",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#isReady",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 614,
    "kind": "get",
    "name": "isModernReady",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#isModernReady",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 615,
    "kind": "get",
    "name": "isResourcesAvailable",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#isResourcesAvailable",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 616,
    "kind": "method",
    "name": "detectModernBuild",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#detectModernBuild",
    "access": "public",
    "description": "",
    "lineNumber": 194,
    "params": [],
    "return": null
  },
  {
    "__docId__": 617,
    "kind": "method",
    "name": "createRenderer",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#createRenderer",
    "access": "public",
    "description": "",
    "lineNumber": 210,
    "params": [],
    "return": null
  },
  {
    "__docId__": 618,
    "kind": "method",
    "name": "renderSPA",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#renderSPA",
    "access": "public",
    "description": "",
    "lineNumber": 234,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 619,
    "kind": "method",
    "name": "renderSSR",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#renderSSR",
    "access": "public",
    "description": "",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 620,
    "kind": "method",
    "name": "renderRoute",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#renderRoute",
    "access": "public",
    "description": "",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "renderContext",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "_retried",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 621,
    "kind": "get",
    "name": "resourceMap",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#resourceMap",
    "access": "public",
    "description": null,
    "lineNumber": 313,
    "undocument": true,
    "type": {
      "types": [
        "{\"clientManifest\": *, \"modernManifest\": *, \"serverManifest\": *, \"ssrTemplate\": *, \"spaTemplate\": *}"
      ]
    }
  },
  {
    "__docId__": 622,
    "kind": "method",
    "name": "parseTemplate",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#parseTemplate",
    "access": "public",
    "description": "",
    "lineNumber": 373,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateStr",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 623,
    "kind": "method",
    "name": "close",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#close",
    "access": "public",
    "description": "",
    "lineNumber": 380,
    "params": [],
    "return": null
  },
  {
    "__docId__": 624,
    "kind": "member",
    "name": "__closed",
    "memberof": "packages/vue-renderer/src/renderer.js~VueRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderer.js~VueRenderer#__closed",
    "access": "private",
    "description": null,
    "lineNumber": 384,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 625,
    "kind": "file",
    "name": "packages/vue-renderer/src/renderers/base.js",
    "content": "export default class BaseRenderer {\n  constructor (serverContext) {\n    this.serverContext = serverContext\n    this.options = serverContext.options\n\n    this.vueRenderer = this.createRenderer()\n  }\n\n  createRenderer () {\n    throw new Error('`createRenderer()` needs to be implemented')\n  }\n\n  renderTemplate (templateFn, opts) {\n    // Fix problem with HTMLPlugin's minify option (#3392)\n    opts.html_attrs = opts.HTML_ATTRS\n    opts.head_attrs = opts.HEAD_ATTRS\n    opts.body_attrs = opts.BODY_ATTRS\n\n    return templateFn(opts)\n  }\n\n  render () {\n    throw new Error('`render()` needs to be implemented')\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-renderer/src/renderers/base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 626,
    "kind": "class",
    "name": "BaseRenderer",
    "memberof": "packages/vue-renderer/src/renderers/base.js",
    "static": true,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-renderer/src/renderers/base.js",
    "importStyle": "BaseRenderer",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 627,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 2,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "serverContext",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 628,
    "kind": "member",
    "name": "serverContext",
    "memberof": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer#serverContext",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 629,
    "kind": "member",
    "name": "options",
    "memberof": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer#options",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 630,
    "kind": "member",
    "name": "vueRenderer",
    "memberof": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer#vueRenderer",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 631,
    "kind": "method",
    "name": "createRenderer",
    "memberof": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer#createRenderer",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [],
    "return": null
  },
  {
    "__docId__": 632,
    "kind": "method",
    "name": "renderTemplate",
    "memberof": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer#renderTemplate",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateFn",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 633,
    "kind": "method",
    "name": "render",
    "memberof": "packages/vue-renderer/src/renderers/base.js~BaseRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/base.js~BaseRenderer#render",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [],
    "return": null
  },
  {
    "__docId__": 634,
    "kind": "file",
    "name": "packages/vue-renderer/src/renderers/modern.js",
    "content": "import { isUrl, urlJoin, safariNoModuleFix } from '@nuxt/utils'\nimport SSRRenderer from './ssr'\n\nexport default class ModernRenderer extends SSRRenderer {\n  constructor (serverContext) {\n    super(serverContext)\n\n    const { build: { publicPath }, router: { base } } = this.options\n    this.publicPath = isUrl(publicPath) ? publicPath : urlJoin(base, publicPath)\n  }\n\n  get assetsMapping () {\n    if (this._assetsMapping) {\n      return this._assetsMapping\n    }\n\n    const { clientManifest, modernManifest } = this.serverContext.resources\n    const legacyAssets = clientManifest.assetsMapping\n    const modernAssets = modernManifest.assetsMapping\n    const mapping = {}\n\n    Object.keys(legacyAssets).forEach((componentHash) => {\n      const modernComponentAssets = modernAssets[componentHash] || []\n      legacyAssets[componentHash].forEach((legacyAssetName, index) => {\n        mapping[legacyAssetName] = modernComponentAssets[index]\n      })\n    })\n    delete clientManifest.assetsMapping\n    delete modernManifest.assetsMapping\n    this._assetsMapping = mapping\n\n    return mapping\n  }\n\n  get isServerMode () {\n    return this.options.modern === 'server'\n  }\n\n  get rendererOptions () {\n    const rendererOptions = super.rendererOptions\n    if (this.isServerMode) {\n      rendererOptions.clientManifest = this.serverContext.resources.modernManifest\n    }\n    return rendererOptions\n  }\n\n  renderScripts (renderContext) {\n    const scripts = super.renderScripts(renderContext)\n\n    if (this.isServerMode) {\n      return scripts\n    }\n\n    const scriptPattern = /<script[^>]*?src=\"([^\"]*?)\" defer( async)?><\\/script>/g\n\n    const modernScripts = scripts.replace(scriptPattern, (scriptTag, jsFile) => {\n      const legacyJsFile = jsFile.replace(this.publicPath, '')\n      const modernJsFile = this.assetsMapping[legacyJsFile]\n      if (!modernJsFile) {\n        return scriptTag.replace('<script', `<script nomodule`)\n      }\n      const moduleTag = scriptTag\n        .replace('<script', `<script type=\"module\"`)\n        .replace(legacyJsFile, modernJsFile)\n      const noModuleTag = scriptTag.replace('<script', `<script nomodule`)\n\n      return noModuleTag + moduleTag\n    })\n\n    const safariNoModuleFixScript = `<script>${safariNoModuleFix}</script>`\n\n    return safariNoModuleFixScript + modernScripts\n  }\n\n  getModernFiles (legacyFiles = []) {\n    const modernFiles = []\n\n    for (const legacyJsFile of legacyFiles) {\n      const modernFile = { ...legacyJsFile, modern: true }\n      if (modernFile.asType === 'script') {\n        const file = this.assetsMapping[legacyJsFile.file]\n        modernFile.file = file\n        modernFile.fileWithoutQuery = file.replace(/\\?.*/, '')\n      }\n      modernFiles.push(modernFile)\n    }\n\n    return modernFiles\n  }\n\n  getPreloadFiles (renderContext) {\n    const preloadFiles = super.getPreloadFiles(renderContext)\n    // In eligible server modern mode, preloadFiles are modern bundles from modern renderer\n    return this.isServerMode ? preloadFiles : this.getModernFiles(preloadFiles)\n  }\n\n  renderResourceHints (renderContext) {\n    const resourceHints = super.renderResourceHints(renderContext)\n    if (this.isServerMode) {\n      return resourceHints\n    }\n\n    const linkPattern = /<link[^>]*?href=\"([^\"]*?)\"[^>]*?as=\"script\"[^>]*?>/g\n\n    return resourceHints.replace(linkPattern, (linkTag, jsFile) => {\n      const legacyJsFile = jsFile.replace(this.publicPath, '')\n      const modernJsFile = this.assetsMapping[legacyJsFile]\n      if (!modernJsFile) {\n        return ''\n      }\n      return linkTag\n        .replace('rel=\"preload\"', `rel=\"modulepreload\"`)\n        .replace(legacyJsFile, modernJsFile)\n    })\n  }\n\n  render (renderContext) {\n    if (this.isServerMode) {\n      renderContext.res.setHeader('Vary', 'User-Agent')\n    }\n    return super.render(renderContext)\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-renderer/src/renderers/modern.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 635,
    "kind": "class",
    "name": "ModernRenderer",
    "memberof": "packages/vue-renderer/src/renderers/modern.js",
    "static": true,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-renderer/src/renderers/modern.js",
    "importStyle": "ModernRenderer",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer"
    ]
  },
  {
    "__docId__": 636,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "serverContext",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 637,
    "kind": "member",
    "name": "publicPath",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#publicPath",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 638,
    "kind": "get",
    "name": "assetsMapping",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#assetsMapping",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 639,
    "kind": "member",
    "name": "_assetsMapping",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#_assetsMapping",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 640,
    "kind": "get",
    "name": "isServerMode",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#isServerMode",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 641,
    "kind": "get",
    "name": "rendererOptions",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#rendererOptions",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 642,
    "kind": "method",
    "name": "renderScripts",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#renderScripts",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 643,
    "kind": "method",
    "name": "getModernFiles",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#getModernFiles",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "legacyFiles",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 644,
    "kind": "method",
    "name": "getPreloadFiles",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#getPreloadFiles",
    "access": "public",
    "description": "",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 645,
    "kind": "method",
    "name": "renderResourceHints",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#renderResourceHints",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 646,
    "kind": "method",
    "name": "render",
    "memberof": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/modern.js~ModernRenderer#render",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 647,
    "kind": "file",
    "name": "packages/vue-renderer/src/renderers/spa.js",
    "content": "import { extname } from 'path'\nimport { cloneDeep } from 'lodash'\nimport VueMeta from 'vue-meta'\nimport { createRenderer } from 'vue-server-renderer'\nimport LRU from 'lru-cache'\nimport devalue from '@nuxt/devalue'\nimport { TARGETS, isModernRequest } from '@nuxt/utils'\nimport BaseRenderer from './base'\n\nexport default class SPARenderer extends BaseRenderer {\n  constructor (serverContext) {\n    super(serverContext)\n\n    this.cache = new LRU()\n\n    this.vueMetaConfig = {\n      ssrAppId: '1',\n      ...this.options.vueMeta,\n      keyName: 'head',\n      attribute: 'data-n-head',\n      ssrAttribute: 'data-n-head-ssr',\n      tagIDKeyName: 'hid'\n    }\n  }\n\n  createRenderer () {\n    return createRenderer()\n  }\n\n  async render (renderContext) {\n    const { url = '/', req = {} } = renderContext\n    const modernMode = this.options.modern\n    const modern = (modernMode && this.options.target === TARGETS.static) || isModernRequest(req, modernMode)\n    const cacheKey = `${modern ? 'modern:' : 'legacy:'}${url}`\n    let meta = this.cache.get(cacheKey)\n\n    if (meta) {\n      // Return a copy of the content, so that future\n      // modifications do not effect the data in cache\n      return cloneDeep(meta)\n    }\n\n    meta = {\n      HTML_ATTRS: '',\n      HEAD_ATTRS: '',\n      BODY_ATTRS: '',\n      HEAD: '',\n      BODY_SCRIPTS_PREPEND: '',\n      BODY_SCRIPTS: ''\n    }\n\n    if (this.options.features.meta) {\n      // Get vue-meta context\n      renderContext.head = typeof this.options.head === 'function'\n        ? this.options.head()\n        : cloneDeep(this.options.head)\n    }\n\n    // Allow overriding renderContext\n    await this.serverContext.nuxt.callHook('vue-renderer:spa:prepareContext', renderContext)\n\n    if (this.options.features.meta) {\n      const m = VueMeta.generate(renderContext.head || {}, this.vueMetaConfig)\n\n      // HTML_ATTRS\n      meta.HTML_ATTRS = m.htmlAttrs.text()\n\n      // HEAD_ATTRS\n      meta.HEAD_ATTRS = m.headAttrs.text()\n\n      // BODY_ATTRS\n      meta.BODY_ATTRS = m.bodyAttrs.text()\n\n      // HEAD tags\n      meta.HEAD =\n        m.title.text() +\n        m.meta.text() +\n        m.link.text() +\n        m.style.text() +\n        m.script.text() +\n        m.noscript.text()\n\n      // Add <base href=\"\"> meta if router base specified\n      if (this.options._routerBaseSpecified) {\n        meta.HEAD += `<base href=\"${this.options.router.base}\">`\n      }\n\n      // BODY_SCRIPTS (PREPEND)\n      meta.BODY_SCRIPTS_PREPEND =\n        m.meta.text({ pbody: true }) +\n        m.link.text({ pbody: true }) +\n        m.style.text({ pbody: true }) +\n        m.script.text({ pbody: true }) +\n        m.noscript.text({ pbody: true })\n\n      // BODY_SCRIPTS (APPEND)\n      meta.BODY_SCRIPTS =\n        m.meta.text({ body: true }) +\n        m.link.text({ body: true }) +\n        m.style.text({ body: true }) +\n        m.script.text({ body: true }) +\n        m.noscript.text({ body: true })\n    }\n\n    // Resources Hints\n    meta.resourceHints = ''\n\n    const { resources: { modernManifest, clientManifest } } = this.serverContext\n    const manifest = modern ? modernManifest : clientManifest\n\n    const { shouldPreload, shouldPrefetch } = this.options.render.bundleRenderer\n\n    if (this.options.render.resourceHints && manifest) {\n      const publicPath = manifest.publicPath || '/_nuxt/'\n\n      // Preload initial resources\n      if (Array.isArray(manifest.initial)) {\n        const { crossorigin } = this.options.render\n        const cors = `${crossorigin ? ` crossorigin=\"${crossorigin}\"` : ''}`\n\n        meta.preloadFiles = manifest.initial\n          .map(SPARenderer.normalizeFile)\n          .filter(({ fileWithoutQuery, asType }) => shouldPreload(fileWithoutQuery, asType))\n          .map(file => ({ ...file, modern }))\n\n        meta.resourceHints += meta.preloadFiles\n          .map(({ file, extension, fileWithoutQuery, asType, modern }) => {\n            let extra = ''\n            if (asType === 'font') {\n              extra = ` type=\"font/${extension}\"${cors ? '' : ' crossorigin'}`\n            }\n            const rel = modern && asType === 'script' ? 'modulepreload' : 'preload'\n            return `<link rel=\"${rel}\"${cors} href=\"${publicPath}${file}\"${\n              asType !== '' ? ` as=\"${asType}\"` : ''}${extra}>`\n          })\n          .join('')\n      }\n\n      // Prefetch async resources\n      if (Array.isArray(manifest.async)) {\n        meta.resourceHints += manifest.async\n          .map(SPARenderer.normalizeFile)\n          .filter(({ fileWithoutQuery, asType }) => shouldPrefetch(fileWithoutQuery, asType))\n          .map(({ file }) => `<link rel=\"prefetch\" href=\"${publicPath}${file}\">`)\n          .join('')\n      }\n\n      // Add them to HEAD\n      if (meta.resourceHints) {\n        meta.HEAD += meta.resourceHints\n      }\n    }\n\n    // Serialize state (runtime config)\n    let APP = `${meta.BODY_SCRIPTS_PREPEND}<div id=\"${this.serverContext.globals.id}\">${this.serverContext.resources.loadingHTML}</div>${meta.BODY_SCRIPTS}`\n\n    const payload = {\n      config: renderContext.runtimeConfig.public\n    }\n    if (renderContext.staticAssetsBase) {\n      payload.staticAssetsBase = renderContext.staticAssetsBase\n    }\n    APP += `<script>window.${this.serverContext.globals.context}=${devalue(payload)}</script>`\n\n    // Prepare template params\n    const templateParams = {\n      ...meta,\n      APP,\n      ENV: this.options.env\n    }\n\n    // Call spa:templateParams hook\n    await this.serverContext.nuxt.callHook('vue-renderer:spa:templateParams', templateParams)\n\n    // Render with SPA template\n    const html = this.renderTemplate(this.serverContext.resources.spaTemplate, templateParams)\n    const content = {\n      html,\n      preloadFiles: meta.preloadFiles || []\n    }\n\n    // Set meta tags inside cache\n    this.cache.set(cacheKey, content)\n\n    // Return a copy of the content, so that future\n    // modifications do not effect the data in cache\n    return cloneDeep(content)\n  }\n\n  static normalizeFile (file) {\n    const withoutQuery = file.replace(/\\?.*/, '')\n    const extension = extname(withoutQuery).slice(1)\n    return {\n      file,\n      extension,\n      fileWithoutQuery: withoutQuery,\n      asType: SPARenderer.getPreloadType(extension)\n    }\n  }\n\n  static getPreloadType (ext) {\n    if (ext === 'js') {\n      return 'script'\n    } else if (ext === 'css') {\n      return 'style'\n    } else if (/jpe?g|png|svg|gif|webp|ico|avif/.test(ext)) {\n      return 'image'\n    } else if (/woff2?|ttf|otf|eot/.test(ext)) {\n      return 'font'\n    } else {\n      return ''\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-renderer/src/renderers/spa.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 648,
    "kind": "class",
    "name": "SPARenderer",
    "memberof": "packages/vue-renderer/src/renderers/spa.js",
    "static": true,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-renderer/src/renderers/spa.js",
    "importStyle": "SPARenderer",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "packages/vue-renderer/src/renderers/base.js~BaseRenderer"
    ]
  },
  {
    "__docId__": 649,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "serverContext",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 650,
    "kind": "member",
    "name": "cache",
    "memberof": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer#cache",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 651,
    "kind": "member",
    "name": "vueMetaConfig",
    "memberof": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer#vueMetaConfig",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "{\"ssrAppId\": string, ...undefined: Object, \"keyName\": string, \"attribute\": string, \"ssrAttribute\": string, \"tagIDKeyName\": string}"
      ]
    }
  },
  {
    "__docId__": 652,
    "kind": "method",
    "name": "createRenderer",
    "memberof": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer#createRenderer",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 653,
    "kind": "method",
    "name": "render",
    "memberof": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer#render",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 654,
    "kind": "method",
    "name": "normalizeFile",
    "memberof": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer.normalizeFile",
    "access": "public",
    "description": "",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"file\": *, \"extension\": *, \"fileWithoutQuery\": *, \"asType\": *}"
      ]
    }
  },
  {
    "__docId__": 655,
    "kind": "method",
    "name": "getPreloadType",
    "memberof": "packages/vue-renderer/src/renderers/spa.js~SPARenderer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/vue-renderer/src/renderers/spa.js~SPARenderer.getPreloadType",
    "access": "public",
    "description": "",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 656,
    "kind": "file",
    "name": "packages/vue-renderer/src/renderers/ssr.js",
    "content": "import path from 'path'\nimport crypto from 'crypto'\nimport { format } from 'util'\nimport fs from 'fs-extra'\nimport consola from 'consola'\nimport { TARGETS, urlJoin } from '@nuxt/utils'\nimport { parsePath, withoutTrailingSlash } from 'ufo'\nimport devalue from '@nuxt/devalue'\nimport { createBundleRenderer } from 'vue-server-renderer'\nimport BaseRenderer from './base'\n\nexport default class SSRRenderer extends BaseRenderer {\n  get rendererOptions () {\n    const hasModules = fs.existsSync(path.resolve(this.options.rootDir, 'node_modules'))\n\n    return {\n      clientManifest: this.serverContext.resources.clientManifest,\n      // for globally installed nuxt command, search dependencies in global dir\n      basedir: hasModules ? this.options.rootDir : __dirname,\n      ...this.options.render.bundleRenderer\n    }\n  }\n\n  addAttrs (tags, referenceTag, referenceAttr) {\n    const reference = referenceTag ? `<${referenceTag}` : referenceAttr\n    if (!reference) {\n      return tags\n    }\n\n    const { render: { crossorigin } } = this.options\n    if (crossorigin) {\n      tags = tags.replace(\n        new RegExp(reference, 'g'),\n        `${reference} crossorigin=\"${crossorigin}\"`\n      )\n    }\n\n    return tags\n  }\n\n  renderResourceHints (renderContext) {\n    return this.addAttrs(renderContext.renderResourceHints(), null, 'rel=\"preload\"')\n  }\n\n  renderScripts (renderContext) {\n    let renderedScripts = this.addAttrs(renderContext.renderScripts(), 'script')\n    if (this.options.render.asyncScripts) {\n      renderedScripts = renderedScripts.replace(/defer>/g, 'defer async>')\n    }\n    return renderedScripts\n  }\n\n  renderStyles (renderContext) {\n    return this.addAttrs(renderContext.renderStyles(), 'link')\n  }\n\n  getPreloadFiles (renderContext) {\n    return renderContext.getPreloadFiles()\n  }\n\n  createRenderer () {\n    // Create bundle renderer for SSR\n    return createBundleRenderer(\n      this.serverContext.resources.serverManifest,\n      this.rendererOptions\n    )\n  }\n\n  useSSRLog () {\n    if (!this.options.render.ssrLog) {\n      return\n    }\n    const logs = []\n    const devReporter = {\n      log (logObj) {\n        logs.push({\n          ...logObj,\n          args: logObj.args.map(arg => format(arg))\n        })\n      }\n    }\n    consola.addReporter(devReporter)\n\n    return () => {\n      consola.removeReporter(devReporter)\n      return logs\n    }\n  }\n\n  async render (renderContext) {\n    // Call ssr:context hook to extend context from modules\n    await this.serverContext.nuxt.callHook('vue-renderer:ssr:prepareContext', renderContext)\n\n    const getSSRLog = this.useSSRLog()\n\n    // Call Vue renderer renderToString\n    let APP = await this.vueRenderer.renderToString(renderContext)\n\n    if (typeof getSSRLog === 'function') {\n      renderContext.nuxt.logs = getSSRLog()\n    }\n\n    // Call ssr:context hook\n    await this.serverContext.nuxt.callHook('vue-renderer:ssr:context', renderContext)\n\n    // TODO: Remove in next major release (#4722)\n    await this.serverContext.nuxt.callHook('_render:context', renderContext.nuxt)\n\n    // Fallback to empty response\n    if (!renderContext.nuxt.serverRendered) {\n      APP = `<div id=\"${this.serverContext.globals.id}\"></div>`\n    }\n\n    // Perf: early returns if server target and redirected\n    if (renderContext.redirected && renderContext.target === TARGETS.server) {\n      return {\n        html: APP,\n        error: renderContext.nuxt.error,\n        redirected: renderContext.redirected\n      }\n    }\n\n    let HEAD = ''\n\n    // Inject head meta\n    // (this is unset when features.meta is false in server template)\n    const meta = renderContext.meta && renderContext.meta.inject({\n      isSSR: renderContext.nuxt.serverRendered,\n      ln: this.options.dev\n    })\n\n    if (meta) {\n      HEAD += meta.title.text() + meta.meta.text()\n    }\n\n    // Add <base href=\"\"> meta if router base specified\n    if (this.options._routerBaseSpecified) {\n      HEAD += `<base href=\"${this.options.router.base}\">`\n    }\n\n    if (meta) {\n      HEAD += meta.link.text() +\n        meta.style.text() +\n        meta.script.text() +\n        meta.noscript.text()\n    }\n\n    // Check if we need to inject scripts and state\n    const shouldInjectScripts = this.options.render.injectScripts !== false\n\n    // Inject resource hints\n    if (this.options.render.resourceHints && shouldInjectScripts) {\n      HEAD += this.renderResourceHints(renderContext)\n    }\n\n    // Inject styles\n    HEAD += this.renderStyles(renderContext)\n\n    if (meta) {\n      const prependInjectorOptions = { pbody: true }\n\n      const BODY_PREPEND =\n        meta.meta.text(prependInjectorOptions) +\n        meta.link.text(prependInjectorOptions) +\n        meta.style.text(prependInjectorOptions) +\n        meta.script.text(prependInjectorOptions) +\n        meta.noscript.text(prependInjectorOptions)\n\n      if (BODY_PREPEND) {\n        APP = `${BODY_PREPEND}${APP}`\n      }\n    }\n\n    const { csp } = this.options.render\n    // Only add the hash if 'unsafe-inline' rule isn't present to avoid conflicts (#5387)\n    const containsUnsafeInlineScriptSrc = csp.policies && csp.policies['script-src'] && csp.policies['script-src'].includes('\\'unsafe-inline\\'')\n    const shouldHashCspScriptSrc = csp && (csp.unsafeInlineCompatibility || !containsUnsafeInlineScriptSrc)\n    const inlineScripts = []\n\n    if (renderContext.staticAssetsBase) {\n      const preloadScripts = []\n      renderContext.staticAssets = []\n      const { staticAssetsBase, url, nuxt, staticAssets } = renderContext\n      const { data, fetch, mutations, ...state } = nuxt\n\n      // Initial state\n      const stateScript = `window.${this.serverContext.globals.context}=${devalue({\n        staticAssetsBase,\n        ...state\n      })};`\n\n      // Make chunk for initial state > 10 KB\n      const stateScriptKb = (stateScript.length * 4 /* utf8 */) / 100\n      if (stateScriptKb > 10) {\n        const statePath = urlJoin(url, 'state.js')\n        const stateUrl = urlJoin(staticAssetsBase, statePath)\n        staticAssets.push({ path: statePath, src: stateScript })\n        if (this.options.render.asyncScripts) {\n          APP += `<script defer async src=\"${stateUrl}\"></script>`\n        } else {\n          APP += `<script defer src=\"${stateUrl}\"></script>`\n        }\n        preloadScripts.push(stateUrl)\n      } else {\n        APP += `<script>${stateScript}</script>`\n      }\n\n      // Save payload only if no error or redirection were made\n      if (!renderContext.nuxt.error && !renderContext.redirected) {\n        // Page level payload.js (async loaded for CSR)\n        const payloadPath = urlJoin(url, 'payload.js')\n        const payloadUrl = urlJoin(staticAssetsBase, payloadPath)\n        const routePath = withoutTrailingSlash(parsePath(url).pathname)\n        const payloadScript = `__NUXT_JSONP__(\"${routePath}\", ${devalue({ data, fetch, mutations })});`\n        staticAssets.push({ path: payloadPath, src: payloadScript })\n        preloadScripts.push(payloadUrl)\n        // Add manifest preload\n        if (this.options.generate.manifest) {\n          const manifestUrl = urlJoin(staticAssetsBase, 'manifest.js')\n          preloadScripts.push(manifestUrl)\n        }\n      }\n\n      // Preload links\n      for (const href of preloadScripts) {\n        HEAD += `<link rel=\"preload\" href=\"${href}\" as=\"script\">`\n      }\n    } else {\n      // Serialize state\n      let serializedSession\n      if (shouldInjectScripts || shouldHashCspScriptSrc) {\n        // Only serialized session if need inject scripts or csp hash\n        serializedSession = `window.${this.serverContext.globals.context}=${devalue(renderContext.nuxt)};`\n        inlineScripts.push(serializedSession)\n      }\n\n      if (shouldInjectScripts) {\n        APP += `<script>${serializedSession}</script>`\n      }\n    }\n\n    // Calculate CSP hashes\n    const cspScriptSrcHashes = []\n    if (csp) {\n      if (shouldHashCspScriptSrc) {\n        for (const script of inlineScripts) {\n          const hash = crypto.createHash(csp.hashAlgorithm)\n          hash.update(script)\n          cspScriptSrcHashes.push(`'${csp.hashAlgorithm}-${hash.digest('base64')}'`)\n        }\n      }\n\n      // Call ssr:csp hook\n      await this.serverContext.nuxt.callHook('vue-renderer:ssr:csp', cspScriptSrcHashes)\n\n      // Add csp meta tags\n      if (csp.addMeta) {\n        HEAD += `<meta http-equiv=\"Content-Security-Policy\" content=\"script-src ${cspScriptSrcHashes.join()}\">`\n      }\n    }\n\n    // Prepend scripts\n    if (shouldInjectScripts) {\n      APP += this.renderScripts(renderContext)\n    }\n\n    if (meta) {\n      const appendInjectorOptions = { body: true }\n\n      // Append body scripts\n      APP += meta.meta.text(appendInjectorOptions)\n      APP += meta.link.text(appendInjectorOptions)\n      APP += meta.style.text(appendInjectorOptions)\n      APP += meta.script.text(appendInjectorOptions)\n      APP += meta.noscript.text(appendInjectorOptions)\n    }\n\n    // Template params\n    const templateParams = {\n      HTML_ATTRS: meta ? meta.htmlAttrs.text(renderContext.nuxt.serverRendered /* addSrrAttribute */) : '',\n      HEAD_ATTRS: meta ? meta.headAttrs.text() : '',\n      BODY_ATTRS: meta ? meta.bodyAttrs.text() : '',\n      HEAD,\n      APP,\n      ENV: this.options.env\n    }\n\n    // Call ssr:templateParams hook\n    await this.serverContext.nuxt.callHook('vue-renderer:ssr:templateParams', templateParams, renderContext)\n\n    // Render with SSR template\n    const html = this.renderTemplate(this.serverContext.resources.ssrTemplate, templateParams)\n\n    let preloadFiles\n    if (this.options.render.http2.push) {\n      preloadFiles = this.getPreloadFiles(renderContext)\n    }\n\n    return {\n      html,\n      cspScriptSrcHashes,\n      preloadFiles,\n      error: renderContext.nuxt.error,\n      redirected: renderContext.redirected\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/vue-renderer/src/renderers/ssr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 657,
    "kind": "class",
    "name": "SSRRenderer",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js",
    "static": true,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/vue-renderer/src/renderers/ssr.js",
    "importStyle": "SSRRenderer",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "packages/vue-renderer/src/renderers/base.js~BaseRenderer"
    ]
  },
  {
    "__docId__": 658,
    "kind": "get",
    "name": "rendererOptions",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#rendererOptions",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{\"clientManifest\": *, \"basedir\": *, ...undefined: Object}"
      ]
    }
  },
  {
    "__docId__": 659,
    "kind": "method",
    "name": "addAttrs",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#addAttrs",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "referenceTag",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "referenceAttr",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 660,
    "kind": "method",
    "name": "renderResourceHints",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#renderResourceHints",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 661,
    "kind": "method",
    "name": "renderScripts",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#renderScripts",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 662,
    "kind": "method",
    "name": "renderStyles",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#renderStyles",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 663,
    "kind": "method",
    "name": "getPreloadFiles",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#getPreloadFiles",
    "access": "public",
    "description": "",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 664,
    "kind": "method",
    "name": "createRenderer",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#createRenderer",
    "access": "public",
    "description": "",
    "lineNumber": 61,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 665,
    "kind": "method",
    "name": "useSSRLog",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#useSSRLog",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 666,
    "kind": "method",
    "name": "render",
    "memberof": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/vue-renderer/src/renderers/ssr.js~SSRRenderer#render",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderContext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"html\": *, \"cspScriptSrcHashes\": *, \"preloadFiles\": *, \"error\": *, \"redirected\": *}"
      ]
    }
  },
  {
    "__docId__": 667,
    "kind": "file",
    "name": "packages/webpack/package.js",
    "content": "export default {\n  build: true,\n  ignoreUnused: [\n    '@nuxt/babel-preset-app',\n    '@babel/core', // peerDependency of babel-loader\n    'babel-loader',\n    'cache-loader',\n    'caniuse-lite',\n    'css-loader',\n    'cssnano',\n    'eventsource-polyfill',\n    'file-loader',\n    'postcss-loader',\n    'postcss-preset-env',\n    'postcss-url',\n    'style-resources-loader',\n    'vue-style-loader', // vue-loader\n    'vue-template-compiler', // vue-loader\n    'url-loader'\n  ]\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 668,
    "kind": "file",
    "name": "packages/webpack/src/builder.js",
    "content": "import path from 'path'\nimport pify from 'pify'\nimport webpack from 'webpack'\nimport Glob from 'glob'\nimport webpackDevMiddleware from 'webpack-dev-middleware'\nimport webpackHotMiddleware from 'webpack-hot-middleware'\nimport consola from 'consola'\n\nimport { TARGETS, parallel, sequence, tryResolve, wrapArray, isModernRequest } from '@nuxt/utils'\nimport AsyncMFS from './utils/async-mfs'\n\nimport * as WebpackConfigs from './config'\nimport PerfLoader from './utils/perf-loader'\n\nconst glob = pify(Glob)\n\nexport class WebpackBundler {\n  constructor (buildContext) {\n    this.buildContext = buildContext\n\n    // Class fields\n    this.compilers = []\n    this.compilersWatching = []\n    this.devMiddleware = {}\n    this.hotMiddleware = {}\n\n    // Bind middleware to self\n    this.middleware = this.middleware.bind(this)\n\n    // Initialize shared MFS for dev\n    if (this.buildContext.options.dev) {\n      this.mfs = new AsyncMFS()\n    }\n  }\n\n  getWebpackConfig (name) {\n    const Config = WebpackConfigs[name.toLowerCase()] // eslint-disable-line import/namespace\n    if (!Config) {\n      throw new Error(`Unsupported webpack config ${name}`)\n    }\n    const config = new Config(this)\n    return config.config()\n  }\n\n  async build () {\n    const { options } = this.buildContext\n\n    const webpackConfigs = [\n      this.getWebpackConfig('Client')\n    ]\n\n    if (options.modern) {\n      webpackConfigs.push(this.getWebpackConfig('Modern'))\n    }\n\n    if (options.build.ssr) {\n      webpackConfigs.push(this.getWebpackConfig('Server'))\n    }\n\n    await this.buildContext.nuxt.callHook('webpack:config', webpackConfigs)\n\n    // Check styleResource existence\n    const { styleResources } = this.buildContext.options.build\n    if (styleResources && Object.keys(styleResources).length) {\n      consola.warn(\n        'Using styleResources without the @nuxtjs/style-resources is not suggested and can lead to severe performance issues.',\n        'Please use https://github.com/nuxt-community/style-resources-module'\n      )\n      for (const ext of Object.keys(styleResources)) {\n        await Promise.all(wrapArray(styleResources[ext]).map(async (p) => {\n          const styleResourceFiles = await glob(path.resolve(this.buildContext.options.rootDir, p))\n\n          if (!styleResourceFiles || styleResourceFiles.length === 0) {\n            throw new Error(`Style Resource not found: ${p}`)\n          }\n        }))\n      }\n    }\n\n    // Configure compilers\n    this.compilers = webpackConfigs.map((config) => {\n      const compiler = webpack(config)\n\n      // In dev, write files in memory FS\n      if (options.dev) {\n        compiler.outputFileSystem = this.mfs\n      }\n\n      return compiler\n    })\n\n    // Warm up perfLoader before build\n    if (options.build.parallel) {\n      consola.info('Warming up worker pools')\n      PerfLoader.warmupAll({ dev: options.dev, resolveModule: id => tryResolve(id, __filename) || id })\n      consola.success('Worker pools ready')\n    }\n\n    // Start Builds\n    const runner = options.dev ? parallel : sequence\n\n    await runner(this.compilers, compiler => this.webpackCompile(compiler))\n  }\n\n  async webpackCompile (compiler) {\n    const { name } = compiler.options\n    const { nuxt, options } = this.buildContext\n\n    await nuxt.callHook('build:compile', { name, compiler })\n\n    // Load renderer resources after build\n    compiler.hooks.done.tap('load-resources', async (stats) => {\n      await nuxt.callHook('build:compiled', {\n        name,\n        compiler,\n        stats\n      })\n\n      // Reload renderer\n      await nuxt.callHook('build:resources', this.mfs)\n    })\n\n    // --- Dev Build ---\n    if (options.dev) {\n      // Client Build, watch is started by dev-middleware\n      if (['client', 'modern'].includes(name)) {\n        return new Promise((resolve, reject) => {\n          compiler.hooks.done.tap('nuxt-dev', () => resolve())\n          return this.webpackDev(compiler)\n        })\n      }\n\n      // Server, build and watch for changes\n      return new Promise((resolve, reject) => {\n        const watching = compiler.watch(options.watchers.webpack, (err) => {\n          if (err) {\n            return reject(err)\n          }\n          resolve()\n        })\n\n        watching.close = pify(watching.close)\n        this.compilersWatching.push(watching)\n      })\n    }\n\n    // --- Production Build ---\n    compiler.run = pify(compiler.run)\n    const stats = await compiler.run()\n\n    if (stats.hasErrors()) {\n      // non-quiet mode: errors will be printed by webpack itself\n      const error = new Error('Nuxt build error')\n      if (options.build.quiet === true) {\n        error.stack = stats.toString('errors-only')\n      }\n      throw error\n    }\n\n    // Await for renderer to load resources (programmatic, tests and generate)\n    await nuxt.callHook('build:resources')\n  }\n\n  async webpackDev (compiler) {\n    consola.debug('Creating webpack middleware...')\n\n    const { name } = compiler.options\n    const buildOptions = this.buildContext.options.build\n    const { client, ...hotMiddlewareOptions } = buildOptions.hotMiddleware || {}\n\n    compiler.options.watchOptions = this.buildContext.options.watchers.webpack\n    compiler.hooks.infrastructureLog.tap('webpack-dev-middleware-log', (name) => {\n      if (name === 'webpack-dev-middleware') {\n        return false\n      }\n      return undefined\n    })\n\n    // Create webpack dev middleware\n    this.devMiddleware[name] = pify(\n      webpackDevMiddleware(\n        compiler, {\n          outputFileSystem: compiler.outputFileSystem,\n          ...buildOptions.devMiddleware\n        })\n    )\n\n    this.devMiddleware[name].close = pify(this.devMiddleware[name].close)\n\n    this.compilersWatching.push(this.devMiddleware[name].context.watching)\n\n    this.hotMiddleware[name] = pify(\n      webpackHotMiddleware(\n        compiler, {\n          log: false,\n          heartbeat: 10000,\n          path: `/__webpack_hmr/${name}`,\n          ...hotMiddlewareOptions\n        })\n    )\n\n    // Register devMiddleware on server\n    await this.buildContext.nuxt.callHook('server:devMiddleware', this.middleware)\n  }\n\n  async middleware (req, res, next) {\n    const name = isModernRequest(req, this.buildContext.options.modern) ? 'modern' : 'client'\n\n    if (this.devMiddleware && this.devMiddleware[name]) {\n      const { url } = req\n      req.url = req.originalUrl || req.url\n      await this.devMiddleware[name](req, res)\n      req.url = url\n    }\n\n    if (this.hotMiddleware && this.hotMiddleware[name]) {\n      await this.hotMiddleware[name](req, res)\n    }\n\n    next()\n  }\n\n  async unwatch () {\n    await Promise.all(this.compilersWatching.map(watching => watching.close()))\n  }\n\n  async close () {\n    if (this.__closed) {\n      return\n    }\n    this.__closed = true\n\n    // Unwatch\n    await this.unwatch()\n\n    // Stop webpack middleware\n    for (const devMiddleware of Object.values(this.devMiddleware)) {\n      await devMiddleware.close()\n    }\n\n    // Cleanup MFS\n    if (this.mfs) {\n      delete this.mfs.data\n      delete this.mfs\n    }\n\n    // Cleanup more resources\n    delete this.compilers\n    delete this.compilersWatching\n    delete this.devMiddleware\n    delete this.hotMiddleware\n  }\n\n  forGenerate () {\n    this.buildContext.target = TARGETS.static\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/builder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 669,
    "kind": "variable",
    "name": "glob",
    "memberof": "packages/webpack/src/builder.js",
    "static": true,
    "longname": "packages/webpack/src/builder.js~glob",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/builder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 670,
    "kind": "class",
    "name": "WebpackBundler",
    "memberof": "packages/webpack/src/builder.js",
    "static": true,
    "longname": "packages/webpack/src/builder.js~WebpackBundler",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/builder.js",
    "importStyle": "{WebpackBundler}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 671,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "buildContext",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 672,
    "kind": "member",
    "name": "buildContext",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#buildContext",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 673,
    "kind": "member",
    "name": "compilers",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#compilers",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 674,
    "kind": "member",
    "name": "compilersWatching",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#compilersWatching",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 675,
    "kind": "member",
    "name": "devMiddleware",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#devMiddleware",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 676,
    "kind": "member",
    "name": "hotMiddleware",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#hotMiddleware",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 678,
    "kind": "member",
    "name": "mfs",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#mfs",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 679,
    "kind": "method",
    "name": "getWebpackConfig",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#getWebpackConfig",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 680,
    "kind": "method",
    "name": "build",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#build",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [],
    "return": null
  },
  {
    "__docId__": 682,
    "kind": "method",
    "name": "webpackCompile",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#webpackCompile",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 683,
    "kind": "method",
    "name": "webpackDev",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#webpackDev",
    "access": "public",
    "description": "",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 684,
    "kind": "method",
    "name": "middleware",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#middleware",
    "access": "public",
    "description": "",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 685,
    "kind": "method",
    "name": "unwatch",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#unwatch",
    "access": "public",
    "description": "",
    "lineNumber": 223,
    "params": [],
    "return": null
  },
  {
    "__docId__": 686,
    "kind": "method",
    "name": "close",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#close",
    "access": "public",
    "description": "",
    "lineNumber": 227,
    "params": [],
    "return": null
  },
  {
    "__docId__": 687,
    "kind": "member",
    "name": "__closed",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#__closed",
    "access": "private",
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 688,
    "kind": "method",
    "name": "forGenerate",
    "memberof": "packages/webpack/src/builder.js~WebpackBundler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/builder.js~WebpackBundler#forGenerate",
    "access": "public",
    "description": "",
    "lineNumber": 254,
    "params": [],
    "return": null
  },
  {
    "__docId__": 689,
    "kind": "file",
    "name": "packages/webpack/src/config/base.js",
    "content": "import path from 'path'\nimport consola from 'consola'\nimport TimeFixPlugin from 'time-fix-plugin'\nimport { escapeRegExp, cloneDeep } from 'lodash'\nimport VueLoader from 'vue-loader'\nimport ExtractCssChunksPlugin from 'extract-css-chunks-webpack-plugin'\nimport * as PnpWebpackPlugin from 'pnp-webpack-plugin'\nimport HardSourcePlugin from 'hard-source-webpack-plugin'\nimport TerserWebpackPlugin from 'terser-webpack-plugin'\nimport WebpackBar from 'webpackbar'\nimport env from 'std-env'\nimport semver from 'semver'\n\nimport { TARGETS, isUrl, urlJoin, getPKG, tryResolve, requireModule, resolveModule } from '@nuxt/utils'\n\nimport PerfLoader from '../utils/perf-loader'\nimport StyleLoader from '../utils/style-loader'\nimport WarningIgnorePlugin from '../plugins/warning-ignore'\nimport { Watchpack2Plugin } from '../plugins/watchpack'\nimport { reservedVueTags } from '../utils/reserved-tags'\n\nexport default class WebpackBaseConfig {\n  constructor (builder) {\n    this.builder = builder\n    this.buildContext = builder.buildContext\n    this.resolveModule = id => tryResolve(id, [this.buildContext.options.rootDir, __dirname]) || id\n  }\n\n  get colors () {\n    return {\n      client: 'green',\n      server: 'orange',\n      modern: 'blue'\n    }\n  }\n\n  get nuxtEnv () {\n    return {\n      isDev: this.dev,\n      isServer: this.isServer,\n      isClient: !this.isServer,\n      isModern: Boolean(this.isModern),\n      isLegacy: Boolean(!this.isModern)\n    }\n  }\n\n  get mode () {\n    return this.dev ? 'development' : 'production'\n  }\n\n  get target () {\n    return this.buildContext.target\n  }\n\n  get dev () {\n    return this.buildContext.options.dev\n  }\n\n  get loaders () {\n    if (!this._loaders) {\n      this._loaders = cloneDeep(this.buildContext.buildOptions.loaders)\n      // sass-loader<8 support (#6460)\n      const sassLoaderPKG = getPKG('sass-loader')\n      if (sassLoaderPKG && semver.lt(sassLoaderPKG.version, '8.0.0')) {\n        const { sass } = this._loaders\n        sass.indentedSyntax = sass.sassOptions.indentedSyntax\n        delete sass.sassOptions.indentedSyntax\n      }\n    }\n    return this._loaders\n  }\n\n  get modulesToTranspile () {\n    return [\n      /\\.vue\\.js/i, // include SFCs in node_modules\n      /consola\\/src/,\n      /ufo/, // exports modern syntax for browser field\n      ...this.normalizeTranspile({ pathNormalize: true })\n    ]\n  }\n\n  normalizeTranspile ({ pathNormalize = false } = {}) {\n    const transpile = []\n    for (let pattern of this.buildContext.buildOptions.transpile) {\n      if (typeof pattern === 'function') {\n        pattern = pattern(this.nuxtEnv)\n      }\n      if (pattern instanceof RegExp) {\n        transpile.push(pattern)\n      } else if (typeof pattern === 'string') {\n        const posixModule = pattern.replace(/\\\\/g, '/')\n        transpile.push(new RegExp(escapeRegExp(\n          pathNormalize ? path.normalize(posixModule) : posixModule\n        )))\n      }\n    }\n    return transpile\n  }\n\n  getBabelOptions () {\n    const envName = this.name\n    const { buildOptions: { corejs }, options: { rootDir } } = this.buildContext\n    const options = {\n      ...this.buildContext.buildOptions.babel,\n      envName\n    }\n\n    if (options.configFile || options.babelrc) {\n      return options\n    }\n\n    if (typeof options.plugins === 'function') {\n      options.plugins = options.plugins(\n        {\n          envName,\n          ...this.nuxtEnv\n        }\n      )\n    }\n\n    // Auto detect corejs version\n    let corejsVersion = corejs\n    if (corejsVersion === 'auto') {\n      try {\n        corejsVersion = Number.parseInt(requireModule('core-js/package.json', rootDir).version.split('.')[0])\n      } catch (_err) {\n        corejsVersion = 2\n      }\n    } else {\n      corejsVersion = Number.parseInt(corejsVersion)\n    }\n\n    if (![2, 3].includes(corejsVersion)) {\n      consola.warn(`Invalid corejs version ${corejsVersion}! Please set \"build.corejs\" to either \"auto\", 2 or 3.`)\n      corejsVersion = 2\n    }\n\n    const defaultPreset = [this.resolveModule('@nuxt/babel-preset-app'), {\n      corejs: {\n        version: corejsVersion\n      }\n    }]\n\n    if (typeof options.presets === 'function') {\n      options.presets = options.presets(\n        {\n          envName,\n          ...this.nuxtEnv\n        },\n        defaultPreset\n      )\n    }\n\n    if (!options.presets) {\n      options.presets = [defaultPreset]\n    }\n\n    return options\n  }\n\n  getFileName (key) {\n    let fileName = this.buildContext.buildOptions.filenames[key]\n    if (typeof fileName === 'function') {\n      fileName = fileName(this.nuxtEnv)\n    }\n    if (this.dev) {\n      const hash = /\\[(chunkhash|contenthash|hash)(?::(\\d+))?]/.exec(fileName)\n      if (hash) {\n        consola.warn(`Notice: Please do not use ${hash[1]} in dev mode to prevent memory leak`)\n      }\n    }\n    if (this.buildContext.buildOptions.analyze && !fileName.includes('[name]')) {\n      fileName = '[name].' + fileName\n    }\n    return fileName\n  }\n\n  env () {\n    const env = {\n      'process.env.NODE_ENV': JSON.stringify(this.mode),\n      'process.mode': JSON.stringify(this.mode),\n      'process.dev': this.dev,\n      'process.static': this.target === TARGETS.static,\n      'process.target': JSON.stringify(this.target)\n    }\n    if (this.buildContext.buildOptions.aggressiveCodeRemoval) {\n      env['typeof process'] = JSON.stringify(this.isServer ? 'object' : 'undefined')\n      env['typeof window'] = JSON.stringify(!this.isServer ? 'object' : 'undefined')\n      env['typeof document'] = JSON.stringify(!this.isServer ? 'object' : 'undefined')\n    }\n\n    Object.entries(this.buildContext.options.env).forEach(([key, value]) => {\n      env['process.env.' + key] =\n        ['boolean', 'number'].includes(typeof value)\n          ? value\n          : JSON.stringify(value)\n    })\n    return env\n  }\n\n  output () {\n    const {\n      options: { buildDir, router },\n      buildOptions: { publicPath }\n    } = this.buildContext\n    return {\n      path: path.resolve(buildDir, 'dist', this.isServer ? 'server' : 'client'),\n      filename: this.getFileName('app'),\n      futureEmitAssets: true, // TODO: Remove when using webpack 5\n      chunkFilename: this.getFileName('chunk'),\n      publicPath: isUrl(publicPath) ? publicPath : urlJoin(router.base, publicPath)\n    }\n  }\n\n  optimization () {\n    const optimization = cloneDeep(this.buildContext.buildOptions.optimization)\n\n    if (optimization.minimize && optimization.minimizer === undefined) {\n      optimization.minimizer = this.minimizer()\n    }\n\n    return optimization\n  }\n\n  resolve () {\n    // Prioritize nested node_modules in webpack search path (#2558)\n    const webpackModulesDir = ['node_modules'].concat(this.buildContext.options.modulesDir)\n\n    const resolvePath = [\n      this.buildContext.options.rootDir,\n      __dirname,\n      ...(global.__NUXT_PATHS__ || []),\n      resolveModule('@nuxt/vue-app'),\n      resolveModule('@nuxt/babel-preset-app')\n    ]\n    const resolvePlugins = [PnpWebpackPlugin].concat(resolvePath.map(p => PnpWebpackPlugin.moduleLoader(p)))\n\n    return {\n      resolve: {\n        extensions: ['.wasm', '.mjs', '.js', '.json', '.vue', '.jsx'],\n        alias: this.alias(),\n        modules: webpackModulesDir,\n        plugins: resolvePlugins\n      },\n      resolveLoader: {\n        modules: [\n          path.resolve(__dirname, '../node_modules'),\n          ...webpackModulesDir\n        ],\n        plugins: resolvePlugins\n      }\n    }\n  }\n\n  minimizer () {\n    const minimizer = []\n    const { terser, cache } = this.buildContext.buildOptions\n\n    // https://github.com/webpack-contrib/terser-webpack-plugin\n    if (terser) {\n      minimizer.push(\n        new TerserWebpackPlugin(Object.assign({\n          cache,\n          extractComments: {\n            condition: 'some',\n            filename: 'LICENSES'\n          },\n          terserOptions: {\n            compress: {\n              ecma: this.isModern ? 2015 : undefined\n            },\n            mangle: {\n              reserved: reservedVueTags\n            }\n          }\n        }, terser))\n      )\n    }\n\n    return minimizer\n  }\n\n  alias () {\n    return {\n      ...this.buildContext.options.alias,\n      'vue-meta': this.resolveModule(`vue-meta${this.isServer ? '' : '/dist/vue-meta.esm.browser.js'}`)\n    }\n  }\n\n  rules () {\n    const perfLoader = new PerfLoader(this.name, this.buildContext, { resolveModule: this.resolveModule })\n    const styleLoader = new StyleLoader(\n      this.buildContext,\n      { isServer: this.isServer, perfLoader, resolveModule: this.resolveModule }\n    )\n\n    const babelLoader = {\n      loader: this.resolveModule('babel-loader'),\n      options: this.getBabelOptions()\n    }\n\n    return [\n      {\n        test: /\\.vue$/i,\n        loader: this.resolveModule('vue-loader'),\n        options: this.loaders.vue\n      },\n      {\n        test: /\\.pug$/i,\n        oneOf: [\n          {\n            resourceQuery: /^\\?vue/i,\n            use: [{\n              loader: this.resolveModule('pug-plain-loader'),\n              options: this.loaders.pugPlain\n            }]\n          },\n          {\n            use: [\n              this.resolveModule('raw-loader'),\n              {\n                loader: this.resolveModule('pug-plain-loader'),\n                options: this.loaders.pugPlain\n              }\n            ]\n          }\n        ]\n      },\n      {\n        test: /\\.m?jsx?$/i,\n        exclude: (file) => {\n          file = file.split(/node_modules(.*)/)[1]\n\n          // not exclude files outside node_modules\n          if (!file) {\n            return false\n          }\n\n          // item in transpile can be string or regex object\n          return !this.modulesToTranspile.some(module => module.test(file))\n        },\n        use: perfLoader.js().concat(babelLoader)\n      },\n      {\n        test: /\\.css$/i,\n        oneOf: styleLoader.apply('css')\n      },\n      {\n        test: /\\.p(ost)?css$/i,\n        oneOf: styleLoader.apply('postcss')\n      },\n      {\n        test: /\\.less$/i,\n        oneOf: styleLoader.apply('less', {\n          loader: this.resolveModule('less-loader'),\n          options: this.loaders.less\n        })\n      },\n      {\n        test: /\\.sass$/i,\n        oneOf: styleLoader.apply('sass', {\n          loader: this.resolveModule('sass-loader'),\n          options: this.loaders.sass\n        })\n      },\n      {\n        test: /\\.scss$/i,\n        oneOf: styleLoader.apply('scss', {\n          loader: this.resolveModule('sass-loader'),\n          options: this.loaders.scss\n        })\n      },\n      {\n        test: /\\.styl(us)?$/i,\n        oneOf: styleLoader.apply('stylus', {\n          loader: this.resolveModule('stylus-loader'),\n          options: this.loaders.stylus\n        })\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg|webp|avif)$/i,\n        use: [{\n          loader: this.resolveModule('url-loader'),\n          options: Object.assign(\n            this.loaders.imgUrl,\n            { name: this.getFileName('img') }\n          )\n        }]\n      },\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/i,\n        use: [{\n          loader: this.resolveModule('url-loader'),\n          options: Object.assign(\n            this.loaders.fontUrl,\n            { name: this.getFileName('font') }\n          )\n        }]\n      },\n      {\n        test: /\\.(webm|mp4|ogv)$/i,\n        use: [{\n          loader: this.resolveModule('file-loader'),\n          options: Object.assign(\n            this.loaders.file,\n            { name: this.getFileName('video') }\n          )\n        }]\n      }\n    ]\n  }\n\n  plugins () {\n    const plugins = []\n    const { nuxt, buildOptions } = this.buildContext\n\n    // Add timefix-plugin before others plugins\n    if (this.dev) {\n      plugins.push(new TimeFixPlugin())\n    }\n\n    // CSS extraction)\n    if (buildOptions.extractCSS) {\n      plugins.push(new ExtractCssChunksPlugin(Object.assign({\n        filename: this.getFileName('css'),\n        chunkFilename: this.getFileName('css')\n      }, buildOptions.extractCSS)))\n    }\n\n    plugins.push(new VueLoader.VueLoaderPlugin())\n\n    plugins.push(...(buildOptions.plugins || []))\n\n    plugins.push(new WarningIgnorePlugin(this.warningIgnoreFilter()))\n\n    // Build progress indicator\n    plugins.push(new WebpackBar({\n      name: this.name,\n      color: this.colors[this.name],\n      reporters: [\n        'basic',\n        'fancy',\n        'profile',\n        'stats'\n      ],\n      basic: !buildOptions.quiet && env.minimalCLI,\n      fancy: !buildOptions.quiet && !env.minimalCLI,\n      profile: !buildOptions.quiet && buildOptions.profile,\n      stats: !buildOptions.quiet && !this.dev && buildOptions.stats,\n      reporter: {\n        change: (_, { shortPath }) => {\n          if (!this.isServer) {\n            nuxt.callHook('bundler:change', shortPath)\n          }\n        },\n        done: (buildContext) => {\n          if (buildContext.hasErrors) {\n            nuxt.callHook('bundler:error')\n          }\n        },\n        allDone: () => {\n          nuxt.callHook('bundler:done')\n        },\n        progress ({ statesArray }) {\n          nuxt.callHook('bundler:progress', statesArray)\n        }\n      }\n    }))\n\n    if (buildOptions.hardSource) {\n      // https://github.com/mzgoddard/hard-source-webpack-plugin\n      plugins.push(new HardSourcePlugin({\n        info: {\n          level: 'warn'\n        },\n        ...buildOptions.hardSource\n      }))\n    }\n\n    plugins.push(new Watchpack2Plugin())\n\n    return plugins\n  }\n\n  warningIgnoreFilter () {\n    const filters = [\n      // Hide warnings about plugins without a default export (#1179)\n      warn => warn.name === 'ModuleDependencyWarning' &&\n        warn.message.includes('export \\'default\\'') &&\n        warn.message.includes('nuxt_plugin_'),\n      ...(this.buildContext.buildOptions.warningIgnoreFilters || [])\n    ]\n\n    return warn => !filters.some(ignoreFilter => ignoreFilter(warn))\n  }\n\n  extendConfig (config) {\n    const { extend } = this.buildContext.buildOptions\n    if (typeof extend === 'function') {\n      const extendedConfig = extend.call(\n        this.builder, config, { loaders: this.loaders, ...this.nuxtEnv }\n      ) || config\n\n      const pragma = /@|#/\n      const { devtool } = extendedConfig\n      if (typeof devtool === 'string' && pragma.test(devtool)) {\n        extendedConfig.devtool = devtool.replace(pragma, '')\n        consola.warn(`devtool has been normalized to ${extendedConfig.devtool} as webpack documented value`)\n      }\n\n      return extendedConfig\n    }\n    return config\n  }\n\n  config () {\n    const config = {\n      name: this.name,\n      mode: this.mode,\n      devtool: this.devtool,\n      optimization: this.optimization(),\n      output: this.output(),\n      performance: {\n        maxEntrypointSize: 1000 * 1024,\n        hints: this.dev ? false : 'warning'\n      },\n      module: {\n        rules: this.rules()\n      },\n      plugins: this.plugins(),\n      ...this.resolve()\n    }\n\n    // Clone deep avoid leaking config between Client and Server\n    const extendedConfig = cloneDeep(this.extendConfig(config))\n\n    return extendedConfig\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/config/base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 690,
    "kind": "class",
    "name": "WebpackBaseConfig",
    "memberof": "packages/webpack/src/config/base.js",
    "static": true,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/config/base.js",
    "importStyle": "WebpackBaseConfig",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 691,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "builder",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 692,
    "kind": "member",
    "name": "builder",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#builder",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 693,
    "kind": "member",
    "name": "buildContext",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#buildContext",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 694,
    "kind": "member",
    "name": "resolveModule",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#resolveModule",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 695,
    "kind": "get",
    "name": "colors",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#colors",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "{\"client\": string, \"server\": string, \"modern\": string}"
      ]
    }
  },
  {
    "__docId__": 696,
    "kind": "get",
    "name": "nuxtEnv",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#nuxtEnv",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "{\"isDev\": *, \"isServer\": *, \"isClient\": *, \"isModern\": *, \"isLegacy\": *}"
      ]
    }
  },
  {
    "__docId__": 697,
    "kind": "get",
    "name": "mode",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#mode",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 698,
    "kind": "get",
    "name": "target",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#target",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 699,
    "kind": "get",
    "name": "dev",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#dev",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 700,
    "kind": "get",
    "name": "loaders",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#loaders",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 701,
    "kind": "member",
    "name": "_loaders",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#_loaders",
    "access": "private",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 702,
    "kind": "get",
    "name": "modulesToTranspile",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#modulesToTranspile",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 703,
    "kind": "method",
    "name": "normalizeTranspile",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#normalizeTranspile",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 704,
    "kind": "method",
    "name": "getBabelOptions",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#getBabelOptions",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 705,
    "kind": "method",
    "name": "getFileName",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#getFileName",
    "access": "public",
    "description": "",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 706,
    "kind": "method",
    "name": "env",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#env",
    "access": "public",
    "description": "",
    "lineNumber": 178,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 707,
    "kind": "method",
    "name": "output",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#output",
    "access": "public",
    "description": "",
    "lineNumber": 201,
    "params": [],
    "return": {
      "types": [
        "{\"path\": *, \"filename\": *, \"futureEmitAssets\": boolean, \"chunkFilename\": *, \"publicPath\": *}"
      ]
    }
  },
  {
    "__docId__": 708,
    "kind": "method",
    "name": "optimization",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#optimization",
    "access": "public",
    "description": "",
    "lineNumber": 215,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 709,
    "kind": "method",
    "name": "resolve",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#resolve",
    "access": "public",
    "description": "",
    "lineNumber": 225,
    "params": [],
    "return": {
      "types": [
        "{\"resolve\": *, \"resolveLoader\": *}"
      ]
    }
  },
  {
    "__docId__": 710,
    "kind": "method",
    "name": "minimizer",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#minimizer",
    "access": "public",
    "description": "",
    "lineNumber": 255,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 711,
    "kind": "method",
    "name": "alias",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#alias",
    "access": "public",
    "description": "",
    "lineNumber": 283,
    "params": [],
    "return": {
      "types": [
        "{...undefined: Object, \"vue-meta\": *}"
      ]
    }
  },
  {
    "__docId__": 712,
    "kind": "method",
    "name": "rules",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#rules",
    "access": "public",
    "description": "",
    "lineNumber": 290,
    "params": [],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 713,
    "kind": "method",
    "name": "plugins",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#plugins",
    "access": "public",
    "description": "",
    "lineNumber": 413,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 714,
    "kind": "method",
    "name": "warningIgnoreFilter",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#warningIgnoreFilter",
    "access": "public",
    "description": "",
    "lineNumber": 485,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 715,
    "kind": "method",
    "name": "extendConfig",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#extendConfig",
    "access": "public",
    "description": "",
    "lineNumber": 497,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 716,
    "kind": "method",
    "name": "config",
    "memberof": "packages/webpack/src/config/base.js~WebpackBaseConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/base.js~WebpackBaseConfig#config",
    "access": "public",
    "description": "",
    "lineNumber": 516,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 717,
    "kind": "file",
    "name": "packages/webpack/src/config/client.js",
    "content": "import path from 'path'\nimport querystring from 'querystring'\nimport webpack from 'webpack'\nimport HTMLPlugin from 'html-webpack-plugin'\nimport BundleAnalyzer from 'webpack-bundle-analyzer'\nimport OptimizeCSSAssetsPlugin from 'optimize-css-assets-webpack-plugin'\nimport FriendlyErrorsWebpackPlugin from '@nuxt/friendly-errors-webpack-plugin'\n\nimport CorsPlugin from '../plugins/vue/cors'\nimport ModernModePlugin from '../plugins/vue/modern'\nimport VueSSRClientPlugin from '../plugins/vue/client'\nimport WebpackBaseConfig from './base'\n\nexport default class WebpackClientConfig extends WebpackBaseConfig {\n  constructor (builder) {\n    super(builder)\n    this.name = 'client'\n    this.isServer = false\n    this.isModern = false\n  }\n\n  get devtool () {\n    if (!this.dev) {\n      return false\n    }\n    const scriptPolicy = this.getCspScriptPolicy()\n    const noUnsafeEval = scriptPolicy && !scriptPolicy.includes('\\'unsafe-eval\\'')\n    return noUnsafeEval\n      ? 'cheap-module-source-map'\n      : 'cheap-module-eval-source-map'\n  }\n\n  getCspScriptPolicy () {\n    const { csp } = this.buildContext.options.render\n    if (csp) {\n      const { policies = {} } = csp\n      return policies['script-src'] || policies['default-src'] || []\n    }\n  }\n\n  env () {\n    return Object.assign(\n      super.env(),\n      {\n        'process.env.VUE_ENV': JSON.stringify('client'),\n        'process.browser': true,\n        'process.client': true,\n        'process.server': false,\n        'process.modern': false\n      }\n    )\n  }\n\n  optimization () {\n    const optimization = super.optimization()\n    const { splitChunks } = optimization\n    const { cacheGroups } = splitChunks\n\n    // Small, known and common modules which are usually used project-wise\n    // Sum of them may not be more than 244 KiB\n    if (\n      this.buildContext.buildOptions.splitChunks.commons === true &&\n      cacheGroups.commons === undefined\n    ) {\n      cacheGroups.commons = {\n        test: /node_modules[\\\\/](vue|vue-loader|vue-router|vuex|vue-meta|core-js|@babel\\/runtime|axios|webpack|setimmediate|timers-browserify|process|regenerator-runtime|cookie|js-cookie|is-buffer|dotprop|url-polyfill|@nuxt[\\\\/]ufo|ufo|nuxt\\.js)[\\\\/]/,\n        chunks: 'all',\n        name: true,\n        priority: 10\n      }\n    }\n\n    return optimization\n  }\n\n  minimizer () {\n    const minimizer = super.minimizer()\n    const { optimizeCSS } = this.buildContext.buildOptions\n\n    // https://github.com/NMFR/optimize-css-assets-webpack-plugin\n    // https://github.com/webpack-contrib/mini-css-extract-plugin#minimizing-for-production\n    // TODO: Remove OptimizeCSSAssetsPlugin when upgrading to webpack 5\n    if (optimizeCSS) {\n      minimizer.push(new OptimizeCSSAssetsPlugin(Object.assign({}, optimizeCSS)))\n    }\n\n    return minimizer\n  }\n\n  alias () {\n    const aliases = super.alias()\n\n    for (const p of this.buildContext.plugins) {\n      if (!aliases[p.name]) {\n        // Do not load server-side plugins on client-side\n        aliases[p.name] = p.mode === 'server' ? './empty.js' : p.src\n      }\n    }\n\n    return aliases\n  }\n\n  plugins () {\n    const plugins = super.plugins()\n    const { buildOptions, options: { appTemplatePath, buildDir, modern, render } } = this.buildContext\n\n    // Generate output HTML for SSR\n    if (buildOptions.ssr) {\n      plugins.push(\n        new HTMLPlugin({\n          filename: '../server/index.ssr.html',\n          template: appTemplatePath,\n          minify: buildOptions.html.minify,\n          inject: false // Resources will be injected using bundleRenderer\n        })\n      )\n    }\n\n    plugins.push(\n      new HTMLPlugin({\n        filename: '../server/index.spa.html',\n        template: appTemplatePath,\n        minify: buildOptions.html.minify,\n        inject: true\n      }),\n      new VueSSRClientPlugin({\n        filename: `../server/${this.name}.manifest.json`\n      }),\n      new webpack.DefinePlugin(this.env())\n    )\n\n    if (this.dev) {\n      // TODO: webpackHotUpdate is not defined: https://github.com/webpack/webpack/issues/6693\n      plugins.push(new webpack.HotModuleReplacementPlugin())\n    }\n\n    // Webpack Bundle Analyzer\n    // https://github.com/webpack-contrib/webpack-bundle-analyzer\n    if (!this.dev && buildOptions.analyze) {\n      const statsDir = path.resolve(buildDir, 'stats')\n\n      plugins.push(new BundleAnalyzer.BundleAnalyzerPlugin(Object.assign({\n        analyzerMode: 'static',\n        defaultSizes: 'gzip',\n        generateStatsFile: true,\n        openAnalyzer: !buildOptions.quiet,\n        reportFilename: path.resolve(statsDir, `${this.name}.html`),\n        statsFilename: path.resolve(statsDir, `${this.name}.json`)\n      }, buildOptions.analyze)))\n    }\n\n    if (modern) {\n      const scriptPolicy = this.getCspScriptPolicy()\n      const noUnsafeInline = scriptPolicy && !scriptPolicy.includes('\\'unsafe-inline\\'')\n      plugins.push(new ModernModePlugin({\n        targetDir: path.resolve(buildDir, 'dist', 'client'),\n        isModernBuild: this.isModern,\n        noUnsafeInline\n      }))\n    }\n\n    if (render.crossorigin) {\n      plugins.push(new CorsPlugin({\n        crossorigin: render.crossorigin\n      }))\n    }\n\n    return plugins\n  }\n\n  config () {\n    const config = super.config()\n    const {\n      options: { router, buildDir },\n      buildOptions: { hotMiddleware, quiet, friendlyErrors }\n    } = this.buildContext\n\n    const { client = {} } = hotMiddleware || {}\n    const { ansiColors, overlayStyles, ...options } = client\n\n    const hotMiddlewareClientOptions = {\n      reload: true,\n      timeout: 30000,\n      ansiColors: JSON.stringify(ansiColors),\n      overlayStyles: JSON.stringify(overlayStyles),\n      path: `${router.base}/__webpack_hmr/${this.name}`.replace(/\\/\\//g, '/'),\n      ...options,\n      name: this.name\n    }\n\n    const hotMiddlewareClientOptionsStr = querystring.stringify(hotMiddlewareClientOptions)\n\n    // Entry points\n    config.entry = Object.assign({}, config.entry, {\n      app: [path.resolve(buildDir, 'client.js')]\n    })\n\n    // Add HMR support\n    if (this.dev) {\n      config.entry.app.unshift(\n        // https://github.com/webpack-contrib/webpack-hot-middleware/issues/53#issuecomment-162823945\n        this.resolveModule('eventsource-polyfill'),\n        // https://github.com/glenjamin/webpack-hot-middleware#config\n        `${this.resolveModule('webpack-hot-middleware/client')}?${hotMiddlewareClientOptionsStr}`\n      )\n    }\n\n    // Add friendly error plugin\n    if (this.dev && !quiet && friendlyErrors) {\n      config.plugins.push(\n        new FriendlyErrorsWebpackPlugin({\n          clearConsole: false,\n          reporter: 'consola',\n          logLevel: 'WARNING'\n        })\n      )\n    }\n\n    return config\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/config/client.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 718,
    "kind": "class",
    "name": "WebpackClientConfig",
    "memberof": "packages/webpack/src/config/client.js",
    "static": true,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/config/client.js",
    "importStyle": "WebpackClientConfig",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "packages/webpack/src/config/base.js~WebpackBaseConfig"
    ]
  },
  {
    "__docId__": 719,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "builder",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 720,
    "kind": "member",
    "name": "name",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#name",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 721,
    "kind": "member",
    "name": "isServer",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#isServer",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 722,
    "kind": "member",
    "name": "isModern",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#isModern",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 723,
    "kind": "get",
    "name": "devtool",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#devtool",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 724,
    "kind": "method",
    "name": "getCspScriptPolicy",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#getCspScriptPolicy",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 725,
    "kind": "method",
    "name": "env",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#env",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 726,
    "kind": "method",
    "name": "optimization",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#optimization",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 727,
    "kind": "method",
    "name": "minimizer",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#minimizer",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 728,
    "kind": "method",
    "name": "alias",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#alias",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 729,
    "kind": "method",
    "name": "plugins",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#plugins",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 730,
    "kind": "method",
    "name": "config",
    "memberof": "packages/webpack/src/config/client.js~WebpackClientConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/client.js~WebpackClientConfig#config",
    "access": "public",
    "description": "",
    "lineNumber": 171,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 731,
    "kind": "file",
    "name": "packages/webpack/src/config/index.js",
    "content": "export { default as client } from './client'\nexport { default as modern } from './modern'\nexport { default as server } from './server'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/config/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 732,
    "kind": "file",
    "name": "packages/webpack/src/config/modern.js",
    "content": "import WebpackClientConfig from './client'\n\nexport default class WebpackModernConfig extends WebpackClientConfig {\n  constructor (...args) {\n    super(...args)\n    this.name = 'modern'\n    this.isModern = true\n  }\n\n  env () {\n    return Object.assign(super.env(), {\n      'process.modern': true\n    })\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/config/modern.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 733,
    "kind": "class",
    "name": "WebpackModernConfig",
    "memberof": "packages/webpack/src/config/modern.js",
    "static": true,
    "longname": "packages/webpack/src/config/modern.js~WebpackModernConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/config/modern.js",
    "importStyle": "WebpackModernConfig",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "packages/webpack/src/config/client.js~WebpackClientConfig"
    ]
  },
  {
    "__docId__": 734,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/config/modern.js~WebpackModernConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/modern.js~WebpackModernConfig#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 4,
    "params": [
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 735,
    "kind": "member",
    "name": "name",
    "memberof": "packages/webpack/src/config/modern.js~WebpackModernConfig",
    "static": false,
    "longname": "packages/webpack/src/config/modern.js~WebpackModernConfig#name",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 736,
    "kind": "member",
    "name": "isModern",
    "memberof": "packages/webpack/src/config/modern.js~WebpackModernConfig",
    "static": false,
    "longname": "packages/webpack/src/config/modern.js~WebpackModernConfig#isModern",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 737,
    "kind": "method",
    "name": "env",
    "memberof": "packages/webpack/src/config/modern.js~WebpackModernConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/modern.js~WebpackModernConfig#env",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 738,
    "kind": "file",
    "name": "packages/webpack/src/config/server.js",
    "content": "import path from 'path'\nimport fs from 'fs'\nimport { DefinePlugin, ProvidePlugin } from 'webpack'\nimport nodeExternals from 'webpack-node-externals'\n\nimport VueSSRServerPlugin from '../plugins/vue/server'\n\nimport WebpackBaseConfig from './base'\n\nconst nativeFileExtensions = [\n  '.json',\n  '.js'\n]\n\nexport default class WebpackServerConfig extends WebpackBaseConfig {\n  constructor (...args) {\n    super(...args)\n    this.name = 'server'\n    this.isServer = true\n  }\n\n  get devtool () {\n    return 'cheap-module-source-map'\n  }\n\n  get externalsAllowlist () {\n    return [\n      this.isNonNativeImport.bind(this),\n      ...this.normalizeTranspile()\n    ]\n  }\n\n  /**\n   * files *not* ending on js|json should be processed by webpack\n   *\n   * this might generate false-positives for imports like\n   * - \"someFile.umd\" (actually requiring someFile.umd.js)\n   * - \"some.folder\" (some.folder being a directory containing a package.json)\n   */\n  isNonNativeImport (modulePath) {\n    const extname = path.extname(modulePath)\n    return extname !== '' && !nativeFileExtensions.includes(extname)\n  }\n\n  env () {\n    return Object.assign(\n      super.env(),\n      {\n        'process.env.VUE_ENV': JSON.stringify('server'),\n        'process.browser': false,\n        'process.client': false,\n        'process.server': true,\n        'process.modern': false\n      }\n    )\n  }\n\n  optimization () {\n    const { _minifyServer } = this.buildContext.buildOptions\n\n    return {\n      splitChunks: false,\n      minimizer: _minifyServer ? this.minimizer() : []\n    }\n  }\n\n  resolve () {\n    const resolveConfig = super.resolve()\n\n    resolveConfig.resolve.mainFields = ['main', 'module']\n\n    return resolveConfig\n  }\n\n  alias () {\n    const aliases = super.alias()\n\n    for (const p of this.buildContext.plugins) {\n      if (!aliases[p.name]) {\n        // Do not load client-side plugins on server-side\n        aliases[p.name] = p.mode === 'client' ? './empty.js' : p.src\n      }\n    }\n\n    return aliases\n  }\n\n  plugins () {\n    const plugins = super.plugins()\n    plugins.push(\n      new VueSSRServerPlugin({ filename: `${this.name}.manifest.json` }),\n      new DefinePlugin(this.env())\n    )\n\n    const { serverURLPolyfill } = this.buildContext.options.build\n\n    if (serverURLPolyfill) {\n      plugins.push(new ProvidePlugin({\n        URL: [serverURLPolyfill, 'URL'],\n        URLSearchParams: [serverURLPolyfill, 'URLSearchParams']\n      }))\n    }\n\n    return plugins\n  }\n\n  config () {\n    const config = super.config()\n\n    Object.assign(config, {\n      target: 'node',\n      node: false,\n      entry: Object.assign({}, config.entry, {\n        app: [path.resolve(this.buildContext.options.buildDir, 'server.js')]\n      }),\n      output: Object.assign({}, config.output, {\n        filename: 'server.js',\n        chunkFilename: '[name].js',\n        libraryTarget: 'commonjs2'\n      }),\n      performance: {\n        hints: false,\n        maxEntrypointSize: Infinity,\n        maxAssetSize: Infinity\n      },\n      externals: [].concat(config.externals || [])\n    })\n\n    // https://webpack.js.org/configuration/externals/#externals\n    // https://github.com/liady/webpack-node-externals\n    // https://vue-loader.vuejs.org/migrating.html#ssr-externals\n    if (!this.buildContext.buildOptions.standalone) {\n      this.buildContext.options.modulesDir.forEach((dir) => {\n        if (fs.existsSync(dir)) {\n          config.externals.push(\n            nodeExternals({\n              allowlist: this.externalsAllowlist,\n              modulesDir: dir\n            })\n          )\n        }\n      })\n    }\n\n    return config\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/config/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 739,
    "kind": "variable",
    "name": "nativeFileExtensions",
    "memberof": "packages/webpack/src/config/server.js",
    "static": true,
    "longname": "packages/webpack/src/config/server.js~nativeFileExtensions",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/config/server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 740,
    "kind": "class",
    "name": "WebpackServerConfig",
    "memberof": "packages/webpack/src/config/server.js",
    "static": true,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/config/server.js",
    "importStyle": "WebpackServerConfig",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "packages/webpack/src/config/base.js~WebpackBaseConfig"
    ]
  },
  {
    "__docId__": 741,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 742,
    "kind": "member",
    "name": "name",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#name",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 743,
    "kind": "member",
    "name": "isServer",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#isServer",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 744,
    "kind": "get",
    "name": "devtool",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#devtool",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 745,
    "kind": "get",
    "name": "externalsAllowlist",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#externalsAllowlist",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 746,
    "kind": "method",
    "name": "isNonNativeImport",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#isNonNativeImport",
    "access": "public",
    "description": "files *not* ending on js|json should be processed by webpack\n\nthis might generate false-positives for imports like\n- \"someFile.umd\" (actually requiring someFile.umd.js)\n- \"some.folder\" (some.folder being a directory containing a package.json) ",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "modulePath",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 747,
    "kind": "method",
    "name": "env",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#env",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 748,
    "kind": "method",
    "name": "optimization",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#optimization",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "params": [],
    "return": {
      "types": [
        "{\"splitChunks\": *, \"minimizer\": *}"
      ]
    }
  },
  {
    "__docId__": 749,
    "kind": "method",
    "name": "resolve",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#resolve",
    "access": "public",
    "description": "",
    "lineNumber": 67,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 750,
    "kind": "method",
    "name": "alias",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#alias",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 751,
    "kind": "method",
    "name": "plugins",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#plugins",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 752,
    "kind": "method",
    "name": "config",
    "memberof": "packages/webpack/src/config/server.js~WebpackServerConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/config/server.js~WebpackServerConfig#config",
    "access": "public",
    "description": "",
    "lineNumber": 107,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 753,
    "kind": "file",
    "name": "packages/webpack/src/index.js",
    "content": "export { WebpackBundler as BundleBuilder } from './builder'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 754,
    "kind": "file",
    "name": "packages/webpack/src/plugins/vue/client.js",
    "content": "/**\n * This file is based on Vue.js (MIT) webpack plugins\n * https://github.com/vuejs/vue/blob/dev/src/server/webpack-plugin/client.js\n */\n\nimport hash from 'hash-sum'\nimport { uniq } from 'lodash'\n\nimport { isJS, isCSS } from './util'\n\nexport default class VueSSRClientPlugin {\n  constructor (options = {}) {\n    this.options = Object.assign({\n      filename: null\n    }, options)\n  }\n\n  apply (compiler) {\n    compiler.hooks.emit.tapAsync('vue-client-plugin', (compilation, cb) => {\n      const stats = compilation.getStats().toJson()\n\n      const allFiles = uniq(stats.assets\n        .map(a => a.name))\n\n      const initialFiles = uniq(Object.keys(stats.entrypoints)\n        .map(name => stats.entrypoints[name].assets)\n        .reduce((assets, all) => all.concat(assets), [])\n        .filter(file => isJS(file) || isCSS(file)))\n\n      const asyncFiles = allFiles\n        .filter(file => isJS(file) || isCSS(file))\n        .filter(file => !initialFiles.includes(file))\n\n      const assetsMapping = {}\n      stats.assets\n        .filter(({ name }) => isJS(name))\n        .forEach(({ name, chunkNames }) => {\n          const componentHash = hash(chunkNames.join('|'))\n          if (!assetsMapping[componentHash]) {\n            assetsMapping[componentHash] = []\n          }\n          assetsMapping[componentHash].push(name)\n        })\n\n      const manifest = {\n        publicPath: stats.publicPath,\n        all: allFiles,\n        initial: initialFiles,\n        async: asyncFiles,\n        modules: { /* [identifier: string]: Array<index: number> */ },\n        assetsMapping\n      }\n\n      const { entrypoints, namedChunkGroups } = stats\n      const assetModules = stats.modules.filter(m => m.assets.length)\n      const fileToIndex = file => manifest.all.indexOf(file)\n      stats.modules.forEach((m) => {\n        // Ignore modules duplicated in multiple chunks\n        if (m.chunks.length === 1) {\n          const [cid] = m.chunks\n          const chunk = stats.chunks.find(c => c.id === cid)\n          if (!chunk || !chunk.files) {\n            return\n          }\n          const id = m.identifier.replace(/\\s\\w+$/, '') // remove appended hash\n          const filesSet = new Set(chunk.files.map(fileToIndex))\n\n          for (const chunkName of chunk.names) {\n            if (!entrypoints[chunkName]) {\n              const chunkGroup = namedChunkGroups[chunkName]\n              if (chunkGroup) {\n                for (const asset of chunkGroup.assets) {\n                  filesSet.add(fileToIndex(asset))\n                }\n              }\n            }\n          }\n\n          const files = Array.from(filesSet)\n          manifest.modules[hash(id)] = files\n\n          // In production mode, modules may be concatenated by scope hoisting\n          // Include ConcatenatedModule for not losing module-component mapping\n          if (Array.isArray(m.modules)) {\n            for (const concatenatedModule of m.modules) {\n              const id = hash(concatenatedModule.identifier.replace(/\\s\\w+$/, ''))\n              if (!manifest.modules[id]) {\n                manifest.modules[id] = files\n              }\n            }\n          }\n\n          // Find all asset modules associated with the same chunk\n          assetModules.forEach((m) => {\n            if (m.chunks.some(id => id === cid)) {\n              files.push.apply(files, m.assets.map(fileToIndex))\n            }\n          })\n        }\n      })\n\n      const src = JSON.stringify(manifest, null, 2)\n\n      compilation.assets[this.options.filename] = {\n        source: () => src,\n        size: () => src.length\n      }\n      cb()\n    })\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/plugins/vue/client.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 755,
    "kind": "class",
    "name": "VueSSRClientPlugin",
    "memberof": "packages/webpack/src/plugins/vue/client.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/client.js~VueSSRClientPlugin",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/client.js",
    "importStyle": "VueSSRClientPlugin",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 756,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/plugins/vue/client.js~VueSSRClientPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/client.js~VueSSRClientPlugin#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 757,
    "kind": "member",
    "name": "options",
    "memberof": "packages/webpack/src/plugins/vue/client.js~VueSSRClientPlugin",
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/client.js~VueSSRClientPlugin#options",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 758,
    "kind": "method",
    "name": "apply",
    "memberof": "packages/webpack/src/plugins/vue/client.js~VueSSRClientPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/client.js~VueSSRClientPlugin#apply",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 759,
    "kind": "file",
    "name": "packages/webpack/src/plugins/vue/cors.js",
    "content": "import HtmlWebpackPlugin from 'html-webpack-plugin'\n\nexport default class CorsPlugin {\n  constructor ({ crossorigin }) {\n    this.crossorigin = crossorigin\n  }\n\n  apply (compiler) {\n    const ID = 'vue-cors-plugin'\n    compiler.hooks.compilation.tap(ID, (compilation) => {\n      HtmlWebpackPlugin.getHooks(compilation).alterAssetTagGroups.tap(ID, (data) => {\n        if (!this.crossorigin) {\n          return\n        }\n        [...data.headTags, ...data.bodyTags].forEach((tag) => {\n          if (['script', 'link'].includes(tag.tagName)) {\n            if (tag.attributes) {\n              tag.attributes.crossorigin = this.crossorigin\n            }\n          }\n        })\n      })\n    })\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/plugins/vue/cors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 760,
    "kind": "class",
    "name": "CorsPlugin",
    "memberof": "packages/webpack/src/plugins/vue/cors.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/cors.js~CorsPlugin",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/cors.js",
    "importStyle": "CorsPlugin",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 761,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/plugins/vue/cors.js~CorsPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/cors.js~CorsPlugin#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 4,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 762,
    "kind": "member",
    "name": "crossorigin",
    "memberof": "packages/webpack/src/plugins/vue/cors.js~CorsPlugin",
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/cors.js~CorsPlugin#crossorigin",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 763,
    "kind": "method",
    "name": "apply",
    "memberof": "packages/webpack/src/plugins/vue/cors.js~CorsPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/cors.js~CorsPlugin#apply",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 764,
    "kind": "file",
    "name": "packages/webpack/src/plugins/vue/modern.js",
    "content": "/*\n* This file is based on @vue/cli-service (MIT) ModernModePlugin\n* https://github.com/vuejs/vue-cli/blob/dev/packages/@vue/cli-service/lib/webpack/ModernModePlugin.js\n*/\n\nimport EventEmitter from 'events'\nimport HtmlWebpackPlugin from 'html-webpack-plugin'\nimport { safariNoModuleFix } from '@nuxt/utils'\n\nconst legacyTemplateTags = {}\nconst legacyTemplateWatcher = new EventEmitter()\n\nexport default class ModernModePlugin {\n  constructor ({ targetDir, isModernBuild, noUnsafeInline }) {\n    this.targetDir = targetDir\n    this.isModernBuild = isModernBuild\n    this.noUnsafeInline = noUnsafeInline\n  }\n\n  apply (compiler) {\n    if (!this.isModernBuild) {\n      this.applyLegacy(compiler)\n    } else {\n      this.applyModern(compiler)\n    }\n  }\n\n  getLegacyTemplateTags (name) {\n    return new Promise((resolve) => {\n      const tags = legacyTemplateTags[name]\n      if (tags) {\n        return resolve(tags)\n      }\n      return legacyTemplateWatcher.once(name, () => {\n        const tags = legacyTemplateTags[name]\n        return tags && resolve(tags)\n      })\n    })\n  }\n\n  applyLegacy (compiler) {\n    const ID = 'nuxt-legacy-bundle'\n    compiler.hooks.compilation.tap(ID, (compilation) => {\n      HtmlWebpackPlugin.getHooks(compilation).alterAssetTagGroups.tap(ID, (data) => {\n        HtmlWebpackPlugin.getHooks(compilation).afterEmit.tap(ID, ({ outputName }) => {\n          // get stats, write to disk\n          legacyTemplateTags[data.plugin.options.filename] = data.bodyTags\n          legacyTemplateWatcher.emit(outputName)\n        })\n        return data\n      })\n    })\n  }\n\n  applyModern (compiler) {\n    const ID = 'nuxt-modern-bundle'\n    compiler.hooks.compilation.tap(ID, (compilation) => {\n      HtmlWebpackPlugin.getHooks(compilation).alterAssetTagGroups.tapPromise(ID, async (data) => {\n        // use <script type=\"module\"> for modern assets\n        data.bodyTags.forEach((tag) => {\n          if (tag.tagName === 'script' && tag.attributes) {\n            tag.attributes.type = 'module'\n          }\n        })\n\n        // use <link rel=\"modulepreload\"> instead of <link rel=\"preload\">\n        // for modern assets\n        data.headTags.forEach((tag) => {\n          if (tag.tagName === 'link' &&\n              tag.attributes.rel === 'preload' &&\n              tag.attributes.as === 'script') {\n            tag.attributes.rel = 'modulepreload'\n          }\n        })\n\n        // inject links for legacy assets as <script nomodule>\n        const fileName = data.plugin.options.filename\n        const legacyScriptTags = (await this.getLegacyTemplateTags(fileName))\n          .filter(a => a.tagName === 'script' && a.attributes)\n\n        for (const a of legacyScriptTags) {\n          a.attributes.nomodule = true\n          data.bodyTags.push(a)\n        }\n\n        if (this.noUnsafeInline) {\n          // inject the fix as an external script\n          const safariFixFilename = 'safari-nomodule-fix.js'\n          const safariFixPath = legacyScriptTags[0].attributes.src\n            .split('/')\n            .slice(0, -1)\n            .concat([safariFixFilename])\n            .join('/')\n\n          compilation.assets[safariFixFilename] = {\n            source: () => Buffer.from(safariNoModuleFix),\n            size: () => Buffer.byteLength(safariNoModuleFix)\n          }\n          data.bodyTags.push({\n            tagName: 'script',\n            closeTag: true,\n            attributes: {\n              src: safariFixPath\n            }\n          })\n        } else {\n          // inject Safari 10 nomodule fix\n          data.bodyTags.push({\n            tagName: 'script',\n            closeTag: true,\n            innerHTML: safariNoModuleFix\n          })\n        }\n\n        delete legacyTemplateTags[fileName]\n\n        return data\n      })\n    })\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/plugins/vue/modern.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 765,
    "kind": "variable",
    "name": "legacyTemplateTags",
    "memberof": "packages/webpack/src/plugins/vue/modern.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/modern.js~legacyTemplateTags",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/modern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 766,
    "kind": "variable",
    "name": "legacyTemplateWatcher",
    "memberof": "packages/webpack/src/plugins/vue/modern.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/modern.js~legacyTemplateWatcher",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/modern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 767,
    "kind": "class",
    "name": "ModernModePlugin",
    "memberof": "packages/webpack/src/plugins/vue/modern.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/modern.js",
    "importStyle": "ModernModePlugin",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 768,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 769,
    "kind": "member",
    "name": "targetDir",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#targetDir",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 770,
    "kind": "member",
    "name": "isModernBuild",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#isModernBuild",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 771,
    "kind": "member",
    "name": "noUnsafeInline",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#noUnsafeInline",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 772,
    "kind": "method",
    "name": "apply",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#apply",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 773,
    "kind": "method",
    "name": "getLegacyTemplateTags",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#getLegacyTemplateTags",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 774,
    "kind": "method",
    "name": "applyLegacy",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#applyLegacy",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 775,
    "kind": "method",
    "name": "applyModern",
    "memberof": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/modern.js~ModernModePlugin#applyModern",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 776,
    "kind": "file",
    "name": "packages/webpack/src/plugins/vue/server.js",
    "content": "import { validate, isJS, extractQueryPartJS } from './util'\n\nexport default class VueSSRServerPlugin {\n  constructor (options = {}) {\n    this.options = Object.assign({\n      filename: null\n    }, options)\n  }\n\n  apply (compiler) {\n    validate(compiler)\n\n    compiler.hooks.emit.tapAsync('vue-server-plugin', (compilation, cb) => {\n      const stats = compilation.getStats().toJson()\n      const [entryName] = Object.keys(stats.entrypoints)\n      const entryInfo = stats.entrypoints[entryName]\n\n      if (!entryInfo) {\n        // #5553\n        return cb()\n      }\n\n      const entryAssets = entryInfo.assets.filter(isJS)\n\n      if (entryAssets.length > 1) {\n        throw new Error(\n          'Server-side bundle should have one single entry file. ' +\n          'Avoid using CommonsChunkPlugin in the server config.'\n        )\n      }\n\n      const [entry] = entryAssets\n      if (!entry || typeof entry !== 'string') {\n        throw new Error(\n          `Entry \"${entryName}\" not found. Did you specify the correct entry option?`\n        )\n      }\n\n      const bundle = {\n        entry,\n        files: {},\n        maps: {}\n      }\n\n      stats.assets.forEach((asset) => {\n        if (isJS(asset.name)) {\n          const queryPart = extractQueryPartJS(asset.name)\n          if (queryPart !== undefined) {\n            bundle.files[asset.name] = asset.name.replace(queryPart, '')\n          } else {\n            bundle.files[asset.name] = asset.name\n          }\n        } else if (asset.name.match(/\\.js\\.map$/)) {\n          bundle.maps[asset.name.replace(/\\.map$/, '')] = asset.name\n        } else {\n          // Do not emit non-js assets for server\n          delete compilation.assets[asset.name]\n        }\n      })\n\n      const src = JSON.stringify(bundle, null, 2)\n\n      compilation.assets[this.options.filename] = {\n        source: () => src,\n        size: () => src.length\n      }\n\n      cb()\n    })\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/plugins/vue/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 777,
    "kind": "class",
    "name": "VueSSRServerPlugin",
    "memberof": "packages/webpack/src/plugins/vue/server.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/server.js~VueSSRServerPlugin",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/server.js",
    "importStyle": "VueSSRServerPlugin",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 778,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/plugins/vue/server.js~VueSSRServerPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/server.js~VueSSRServerPlugin#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 4,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 779,
    "kind": "member",
    "name": "options",
    "memberof": "packages/webpack/src/plugins/vue/server.js~VueSSRServerPlugin",
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/server.js~VueSSRServerPlugin#options",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 780,
    "kind": "method",
    "name": "apply",
    "memberof": "packages/webpack/src/plugins/vue/server.js~VueSSRServerPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/vue/server.js~VueSSRServerPlugin#apply",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 781,
    "kind": "file",
    "name": "packages/webpack/src/plugins/vue/util.js",
    "content": "/**\n * This file is based on Vue.js (MIT) webpack plugins\n * https://github.com/vuejs/vue/blob/dev/src/server/webpack-plugin/util.js\n */\n\nimport consola from 'consola'\n\nexport const validate = (compiler) => {\n  if (compiler.options.target !== 'node') {\n    consola.warn('webpack config `target` should be \"node\".')\n  }\n\n  if (compiler.options.output && compiler.options.output.libraryTarget !== 'commonjs2') {\n    consola.warn('webpack config `output.libraryTarget` should be \"commonjs2\".')\n  }\n\n  if (!compiler.options.externals) {\n    consola.info(\n      'It is recommended to externalize dependencies in the server build for ' +\n      'better build performance.'\n    )\n  }\n}\n\nconst isJSRegExp = /\\.js(\\?[^.]+)?$/\n\nexport const isJS = file => isJSRegExp.test(file)\n\nexport const extractQueryPartJS = file => isJSRegExp.exec(file)[1]\n\nexport const isCSS = file => /\\.css(\\?[^.]+)?$/.test(file)\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/plugins/vue/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 782,
    "kind": "function",
    "name": "validate",
    "memberof": "packages/webpack/src/plugins/vue/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/util.js~validate",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/util.js",
    "importStyle": "{validate}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "compiler",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 783,
    "kind": "variable",
    "name": "isJSRegExp",
    "memberof": "packages/webpack/src/plugins/vue/util.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/util.js~isJSRegExp",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 784,
    "kind": "function",
    "name": "isJS",
    "memberof": "packages/webpack/src/plugins/vue/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/util.js~isJS",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/util.js",
    "importStyle": "{isJS}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "file",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 785,
    "kind": "function",
    "name": "extractQueryPartJS",
    "memberof": "packages/webpack/src/plugins/vue/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/util.js~extractQueryPartJS",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/util.js",
    "importStyle": "{extractQueryPartJS}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "file",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 786,
    "kind": "function",
    "name": "isCSS",
    "memberof": "packages/webpack/src/plugins/vue/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/plugins/vue/util.js~isCSS",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/vue/util.js",
    "importStyle": "{isCSS}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "file",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 787,
    "kind": "file",
    "name": "packages/webpack/src/plugins/warning-ignore.js",
    "content": "export default class WarningIgnorePlugin {\n  constructor (filter) {\n    this.filter = filter\n  }\n\n  apply (compiler) /* istanbul ignore next */ {\n    compiler.hooks.done.tap('warnfix-plugin', (stats) => {\n      stats.compilation.warnings = stats.compilation.warnings.filter(this.filter)\n    })\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/plugins/warning-ignore.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 788,
    "kind": "class",
    "name": "WarningIgnorePlugin",
    "memberof": "packages/webpack/src/plugins/warning-ignore.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/warning-ignore.js~WarningIgnorePlugin",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/warning-ignore.js",
    "importStyle": "WarningIgnorePlugin",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 789,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/plugins/warning-ignore.js~WarningIgnorePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/warning-ignore.js~WarningIgnorePlugin#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 2,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 790,
    "kind": "member",
    "name": "filter",
    "memberof": "packages/webpack/src/plugins/warning-ignore.js~WarningIgnorePlugin",
    "static": false,
    "longname": "packages/webpack/src/plugins/warning-ignore.js~WarningIgnorePlugin#filter",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 791,
    "kind": "method",
    "name": "apply",
    "memberof": "packages/webpack/src/plugins/warning-ignore.js~WarningIgnorePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/warning-ignore.js~WarningIgnorePlugin#apply",
    "access": "public",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 792,
    "kind": "file",
    "name": "packages/webpack/src/plugins/watchpack.js",
    "content": "/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Base: https://github.com/webpack/webpack/blob/v4.46.0/lib/node/NodeWatchFileSystem.js (Tobias Koppers @sokra)\n*/\nimport Watchpack from 'watchpack'\nimport objectToMap from 'webpack/lib/util/objectToMap'\n\nexport class Watchpack2Plugin {\n  apply (compiler) {\n    if (compiler.watchFileSystem && compiler.watchFileSystem.watcher) {\n      compiler.watchFileSystem.watcher.close()\n    }\n    compiler.watchFileSystem = new NodeWatchFileSystem(\n      compiler.inputFileSystem\n    )\n  }\n}\n\nexport class NodeWatchFileSystem {\n  constructor (inputFileSystem) {\n    this.inputFileSystem = inputFileSystem\n    this.watcherOptions = {\n      aggregateTimeout: 0\n    }\n    this.watcher = new Watchpack(this.watcherOptions)\n  }\n\n  watch (files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n    if (!Array.isArray(files)) {\n      throw new TypeError(\"Invalid arguments: 'files'\")\n    }\n    if (!Array.isArray(dirs)) {\n      throw new TypeError(\"Invalid arguments: 'dirs'\")\n    }\n    if (!Array.isArray(missing)) {\n      throw new TypeError(\"Invalid arguments: 'missing'\")\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError(\"Invalid arguments: 'callback'\")\n    }\n    if (typeof startTime !== 'number' && startTime) {\n      throw new Error(\"Invalid arguments: 'startTime'\")\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError(\"Invalid arguments: 'options'\")\n    }\n    if (typeof callbackUndelayed !== 'function' && callbackUndelayed) {\n      throw new Error(\"Invalid arguments: 'callbackUndelayed'\")\n    }\n    const oldWatcher = this.watcher\n    this.watcher = new Watchpack(options)\n\n    if (callbackUndelayed) {\n      this.watcher.once('change', callbackUndelayed)\n    }\n    const cachedFiles = files\n    const cachedDirs = dirs\n    this.watcher.once('aggregated', (_changes, _removals) => {\n      const removals = Array.from(_removals)\n      const changes = Array.from(_changes).concat(removals)\n      if (this.inputFileSystem && this.inputFileSystem.purge) {\n        this.inputFileSystem.purge(changes)\n      }\n      const times = objectToMap(this.watcher.getTimes())\n      files = new Set(files)\n      dirs = new Set(dirs)\n      missing = new Set(missing)\n      callback(\n        null,\n        changes.filter(file => files.has(file)).sort(),\n        changes.filter(file => dirs.has(file)).sort(),\n        changes.filter(file => missing.has(file)).sort(),\n        times,\n        times,\n        new Set(removals.filter(file => files.has(file)))\n      )\n    })\n\n    this.watcher.watch(\n      cachedFiles.concat(missing),\n      cachedDirs.concat(missing),\n      startTime\n    )\n\n    if (oldWatcher) {\n      oldWatcher.close()\n    }\n    return {\n      close: () => {\n        if (this.watcher) {\n          this.watcher.close()\n          this.watcher = null\n        }\n      },\n      pause: () => {\n        if (this.watcher) {\n          this.watcher.pause()\n        }\n      },\n      getFileTimestamps: () => {\n        if (this.watcher) {\n          return objectToMap(this.watcher.getTimes())\n        } else {\n          return new Map()\n        }\n      },\n      getContextTimestamps: () => {\n        if (this.watcher) {\n          return objectToMap(this.watcher.getTimes())\n        } else {\n          return new Map()\n        }\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/plugins/watchpack.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 793,
    "kind": "class",
    "name": "Watchpack2Plugin",
    "memberof": "packages/webpack/src/plugins/watchpack.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/watchpack.js~Watchpack2Plugin",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/watchpack.js",
    "importStyle": "{Watchpack2Plugin}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 794,
    "kind": "method",
    "name": "apply",
    "memberof": "packages/webpack/src/plugins/watchpack.js~Watchpack2Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/watchpack.js~Watchpack2Plugin#apply",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compiler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 795,
    "kind": "class",
    "name": "NodeWatchFileSystem",
    "memberof": "packages/webpack/src/plugins/watchpack.js",
    "static": true,
    "longname": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/plugins/watchpack.js",
    "importStyle": "{NodeWatchFileSystem}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 796,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "inputFileSystem",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 797,
    "kind": "member",
    "name": "inputFileSystem",
    "memberof": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem",
    "static": false,
    "longname": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem#inputFileSystem",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 798,
    "kind": "member",
    "name": "watcherOptions",
    "memberof": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem",
    "static": false,
    "longname": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem#watcherOptions",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"aggregateTimeout\": *}"
      ]
    }
  },
  {
    "__docId__": 799,
    "kind": "member",
    "name": "watcher",
    "memberof": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem",
    "static": false,
    "longname": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem#watcher",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 800,
    "kind": "method",
    "name": "watch",
    "memberof": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/plugins/watchpack.js~NodeWatchFileSystem#watch",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "files",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dirs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "missing",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startTime",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callbackUndelayed",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"close\": *, \"pause\": *, \"getFileTimestamps\": *, \"getContextTimestamps\": *}"
      ]
    }
  },
  {
    "__docId__": 803,
    "kind": "file",
    "name": "packages/webpack/src/utils/async-mfs.js",
    "content": "import MFS from 'memory-fs'\nexport default class AsyncMFS extends MFS {}\n\nconst syncRegex = /Sync$/\n\nconst propsToPromisify = Object.getOwnPropertyNames(MFS.prototype).filter(n => syncRegex.test(n))\n\nfor (const prop of propsToPromisify) {\n  const asyncProp = prop.replace(syncRegex, '')\n  const origAsync = AsyncMFS.prototype[asyncProp]\n\n  AsyncMFS.prototype[asyncProp] = function (...args) {\n    // Callback support for webpack\n    if (origAsync && args.length && typeof args[args.length - 1] === 'function') {\n      return origAsync.call(this, ...args)\n    }\n\n    try {\n      return Promise.resolve(MFS.prototype[prop].call(this, ...args))\n    } catch (error) {\n      return Promise.reject(error)\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/utils/async-mfs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 804,
    "kind": "class",
    "name": "AsyncMFS",
    "memberof": "packages/webpack/src/utils/async-mfs.js",
    "static": true,
    "longname": "packages/webpack/src/utils/async-mfs.js~AsyncMFS",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/async-mfs.js",
    "importStyle": "AsyncMFS",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "memory-fs~MFS"
    ]
  },
  {
    "__docId__": 805,
    "kind": "variable",
    "name": "syncRegex",
    "memberof": "packages/webpack/src/utils/async-mfs.js",
    "static": true,
    "longname": "packages/webpack/src/utils/async-mfs.js~syncRegex",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/async-mfs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 806,
    "kind": "variable",
    "name": "propsToPromisify",
    "memberof": "packages/webpack/src/utils/async-mfs.js",
    "static": true,
    "longname": "packages/webpack/src/utils/async-mfs.js~propsToPromisify",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/async-mfs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 807,
    "kind": "file",
    "name": "packages/webpack/src/utils/index.js",
    "content": "export { default as PerfLoader } from './perf-loader'\nexport { default as StyleLoader } from './style-loader'\nexport { reservedVueTags } from './reserved-tags'\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 808,
    "kind": "file",
    "name": "packages/webpack/src/utils/perf-loader.js",
    "content": "import path from 'path'\n\nimport { warmup } from 'thread-loader'\n\n// https://github.com/webpack-contrib/thread-loader\n// https://github.com/webpack-contrib/cache-loader\n\nexport default class PerfLoader {\n  constructor (name, buildContext, { resolveModule }) {\n    this.name = name\n    this.buildContext = buildContext\n    this.workerPools = PerfLoader.defaultPools({ dev: buildContext.options.dev })\n    this.resolveModule = resolveModule\n    return new Proxy(this, {\n      get (target, name) {\n        return target[name] ? target[name] : target.use.bind(target, name)\n      }\n    })\n  }\n\n  static defaultPools ({ dev }) {\n    const poolTimeout = dev ? Infinity : 2000\n    return {\n      js: { name: 'js', poolTimeout },\n      css: { name: 'css', poolTimeout }\n    }\n  }\n\n  static warmupAll ({ dev, resolveModule }) {\n    const pools = PerfLoader.defaultPools({ dev })\n    PerfLoader.warmup(pools.js, [\n      resolveModule('babel-loader'),\n      resolveModule('@babel/preset-env')\n    ])\n    PerfLoader.warmup(pools.css, [resolveModule('css-loader')])\n  }\n\n  static warmup (...args) {\n    warmup(...args)\n  }\n\n  use (poolName) {\n    const loaders = []\n\n    if (this.buildContext.buildOptions.cache) {\n      loaders.push({\n        loader: this.resolveModule('cache-loader'),\n        options: {\n          cacheDirectory: path.resolve(`node_modules/.cache/cache-loader/${this.name}`)\n        }\n      })\n    }\n\n    if (this.buildContext.buildOptions.parallel) {\n      const pool = this.workerPools[poolName]\n      if (pool) {\n        loaders.push({\n          loader: this.resolveModule('thread-loader'),\n          options: pool\n        })\n      }\n    }\n\n    return loaders\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/utils/perf-loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 809,
    "kind": "class",
    "name": "PerfLoader",
    "memberof": "packages/webpack/src/utils/perf-loader.js",
    "static": true,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/perf-loader.js",
    "importStyle": "PerfLoader",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 810,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "buildContext",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 811,
    "kind": "member",
    "name": "name",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader#name",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 812,
    "kind": "member",
    "name": "buildContext",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader#buildContext",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 813,
    "kind": "member",
    "name": "workerPools",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader#workerPools",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 814,
    "kind": "member",
    "name": "resolveModule",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader#resolveModule",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 815,
    "kind": "method",
    "name": "defaultPools",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader.defaultPools",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"js\": *, \"css\": *}"
      ]
    }
  },
  {
    "__docId__": 816,
    "kind": "method",
    "name": "warmupAll",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader.warmupAll",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 817,
    "kind": "method",
    "name": "warmup",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader.warmup",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 818,
    "kind": "method",
    "name": "use",
    "memberof": "packages/webpack/src/utils/perf-loader.js~PerfLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/perf-loader.js~PerfLoader#use",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "poolName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 819,
    "kind": "file",
    "name": "packages/webpack/src/utils/postcss-v8.js",
    "content": "import fs from 'fs'\nimport path from 'path'\nimport consola from 'consola'\nimport { defaults, merge, cloneDeep } from 'lodash'\nimport createResolver from 'postcss-import-resolver'\n\nimport { isPureObject } from '@nuxt/utils'\n\nexport const orderPresets = {\n  cssnanoLast (names) {\n    const nanoIndex = names.indexOf('cssnano')\n    if (nanoIndex !== names.length - 1) {\n      names.push(names.splice(nanoIndex, 1)[0])\n    }\n    return names\n  },\n  presetEnvLast (names) {\n    const nanoIndex = names.indexOf('postcss-preset-env')\n    if (nanoIndex !== names.length - 1) {\n      names.push(names.splice(nanoIndex, 1)[0])\n    }\n    return names\n  },\n  presetEnvAndCssnanoLast (names) {\n    return orderPresets.cssnanoLast(orderPresets.presetEnvLast(names))\n  }\n}\n\nfunction postcssConfigFileWarning () {\n  if (postcssConfigFileWarning.executed) {\n    return\n  }\n  consola.warn('Please use `build.postcss` in your nuxt.config.js instead of an external config file. Support for such files will be removed in Nuxt 3 as they remove all defaults set by Nuxt and can cause severe problems with features like alias resolving inside your CSS.')\n  postcssConfigFileWarning.executed = true\n}\n\nexport default class PostcssConfig {\n  constructor (buildContext) {\n    this.buildContext = buildContext\n  }\n\n  get cssSourceMap () {\n    return this.buildContext.buildOptions.cssSourceMap\n  }\n\n  get postcssOptions () {\n    return this.buildContext.buildOptions.postcss\n  }\n\n  get postcssImportAlias () {\n    const alias = { ...this.buildContext.options.alias }\n\n    for (const key in alias) {\n      if (key.startsWith('~')) {\n        continue\n      }\n      const newKey = '~' + key\n      if (!alias[newKey]) {\n        alias[newKey] = alias[key]\n      }\n    }\n\n    return alias\n  }\n\n  get defaultPostcssOptions () {\n    const { dev, srcDir, rootDir, modulesDir } = this.buildContext.options\n    return {\n      plugins: {\n        // https://github.com/postcss/postcss-import\n        'postcss-import': {\n          resolve: createResolver({\n            alias: this.postcssImportAlias,\n            modules: [srcDir, rootDir, ...modulesDir]\n          })\n        },\n\n        // https://github.com/postcss/postcss-url\n        'postcss-url': {},\n\n        // https://github.com/csstools/postcss-preset-env\n        // TODO: enable when https://github.com/csstools/postcss-preset-env/issues/191 gets closed\n        // 'postcss-preset-env': this.preset || {},\n        cssnano: dev\n          ? false\n          : {\n            preset: ['default', {\n              // Keep quotes in font values to prevent from HEX conversion\n              // https://github.com/nuxt/nuxt.js/issues/6306\n              minifyFontValues: { removeQuotes: false }\n            }]\n          }\n      },\n      // Array, String or Function\n      order: 'presetEnvAndCssnanoLast'\n    }\n  }\n\n  searchConfigFile () {\n    // Search for postCSS config file and use it if exists\n    // https://github.com/michael-ciniawsky/postcss-load-config\n    // TODO: Remove in Nuxt 3\n    const { srcDir, rootDir } = this.buildContext.options\n    for (const dir of [srcDir, rootDir]) {\n      for (const file of [\n        'postcss.config.js',\n        '.postcssrc.js',\n        '.postcssrc',\n        '.postcssrc.json',\n        '.postcssrc.yaml'\n      ]) {\n        const configFile = path.resolve(dir, file)\n        if (fs.existsSync(configFile)) {\n          postcssConfigFileWarning()\n          return configFile\n        }\n      }\n    }\n  }\n\n  configFromFile () {\n    const loaderConfig = (this.postcssOptions && this.postcssOptions.config) || {}\n    loaderConfig.path = loaderConfig.path || this.searchConfigFile()\n\n    if (loaderConfig.path) {\n      return {\n        config: loaderConfig\n      }\n    }\n  }\n\n  normalize (postcssOptions) {\n    // TODO: Remove in Nuxt 3\n    if (Array.isArray(postcssOptions)) {\n      consola.warn('Using an Array as `build.postcss` will be deprecated in Nuxt 3. Please switch to the object' +\n        ' declaration')\n      postcssOptions = { plugins: postcssOptions }\n    }\n    return postcssOptions\n  }\n\n  sortPlugins ({ plugins, order }) {\n    const names = Object.keys(plugins)\n    if (typeof order === 'string') {\n      order = orderPresets[order]\n    }\n    return typeof order === 'function' ? order(names, orderPresets) : (order || names)\n  }\n\n  loadPlugins (postcssOptions) {\n    const { plugins } = postcssOptions\n    if (isPureObject(plugins)) {\n      // Map postcss plugins into instances on object mode once\n      postcssOptions.plugins = this.sortPlugins(postcssOptions)\n        .map((p) => {\n          const plugin = this.buildContext.nuxt.resolver.requireModule(p, { paths: [__dirname] })\n          const opts = plugins[p]\n          if (opts === false) {\n            return false // Disabled\n          }\n          return plugin(opts)\n        })\n        .filter(Boolean)\n    }\n  }\n\n  config () {\n    /* istanbul ignore if */\n    if (!this.postcssOptions) {\n      return false\n    }\n\n    let postcssOptions = this.configFromFile()\n    if (postcssOptions) {\n      return {\n        postcssOptions,\n        sourceMap: this.cssSourceMap\n      }\n    }\n\n    postcssOptions = this.normalize(cloneDeep(this.postcssOptions))\n\n    // Apply default plugins\n    if (isPureObject(postcssOptions)) {\n      if (postcssOptions.preset) {\n        this.preset = postcssOptions.preset\n        delete postcssOptions.preset\n      }\n      if (Array.isArray(postcssOptions.plugins)) {\n        defaults(postcssOptions, this.defaultPostcssOptions)\n      } else {\n        // Keep the order of default plugins\n        postcssOptions = merge({}, this.defaultPostcssOptions, postcssOptions)\n        this.loadPlugins(postcssOptions)\n      }\n\n      const { execute } = postcssOptions\n      delete postcssOptions.execute\n      delete postcssOptions.order\n\n      return {\n        execute,\n        postcssOptions,\n        sourceMap: this.cssSourceMap\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/utils/postcss-v8.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 820,
    "kind": "variable",
    "name": "orderPresets",
    "memberof": "packages/webpack/src/utils/postcss-v8.js",
    "static": true,
    "longname": "packages/webpack/src/utils/postcss-v8.js~orderPresets",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/postcss-v8.js",
    "importStyle": "{orderPresets}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"cssnanoLast\": function, \"presetEnvLast\": function, \"presetEnvAndCssnanoLast\": function}"
      ]
    }
  },
  {
    "__docId__": 821,
    "kind": "function",
    "name": "postcssConfigFileWarning",
    "memberof": "packages/webpack/src/utils/postcss-v8.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/utils/postcss-v8.js~postcssConfigFileWarning",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/postcss-v8.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 822,
    "kind": "class",
    "name": "PostcssConfig",
    "memberof": "packages/webpack/src/utils/postcss-v8.js",
    "static": true,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/postcss-v8.js",
    "importStyle": "PostcssConfig",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 823,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "buildContext",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 824,
    "kind": "member",
    "name": "buildContext",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#buildContext",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 825,
    "kind": "get",
    "name": "cssSourceMap",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#cssSourceMap",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 826,
    "kind": "get",
    "name": "postcssOptions",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#postcssOptions",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 827,
    "kind": "get",
    "name": "postcssImportAlias",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#postcssImportAlias",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 828,
    "kind": "get",
    "name": "defaultPostcssOptions",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#defaultPostcssOptions",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "{\"plugins\": *, \"order\": string}"
      ]
    }
  },
  {
    "__docId__": 829,
    "kind": "method",
    "name": "searchConfigFile",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#searchConfigFile",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 830,
    "kind": "method",
    "name": "configFromFile",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#configFromFile",
    "access": "public",
    "description": "",
    "lineNumber": 121,
    "params": [],
    "return": {
      "types": [
        "{\"config\": *}"
      ]
    }
  },
  {
    "__docId__": 831,
    "kind": "method",
    "name": "normalize",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#normalize",
    "access": "public",
    "description": "",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "postcssOptions",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 832,
    "kind": "method",
    "name": "sortPlugins",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#sortPlugins",
    "access": "public",
    "description": "",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 833,
    "kind": "method",
    "name": "loadPlugins",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#loadPlugins",
    "access": "public",
    "description": "",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "postcssOptions",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 834,
    "kind": "method",
    "name": "config",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#config",
    "access": "public",
    "description": "",
    "lineNumber": 167,
    "params": [],
    "return": {
      "types": [
        "{\"execute\": *, \"postcssOptions\": *, \"sourceMap\": *}"
      ]
    }
  },
  {
    "__docId__": 835,
    "kind": "member",
    "name": "preset",
    "memberof": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig",
    "static": false,
    "longname": "packages/webpack/src/utils/postcss-v8.js~PostcssConfig#preset",
    "access": "public",
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 836,
    "kind": "file",
    "name": "packages/webpack/src/utils/postcss.js",
    "content": "import fs from 'fs'\nimport path from 'path'\nimport consola from 'consola'\nimport { defaults, merge, cloneDeep } from 'lodash'\nimport createResolver from 'postcss-import-resolver'\n\nimport { isPureObject } from '@nuxt/utils'\n\nexport const orderPresets = {\n  cssnanoLast (names) {\n    const nanoIndex = names.indexOf('cssnano')\n    if (nanoIndex !== names.length - 1) {\n      names.push(names.splice(nanoIndex, 1)[0])\n    }\n    return names\n  },\n  presetEnvLast (names) {\n    const nanoIndex = names.indexOf('postcss-preset-env')\n    if (nanoIndex !== names.length - 1) {\n      names.push(names.splice(nanoIndex, 1)[0])\n    }\n    return names\n  },\n  presetEnvAndCssnanoLast (names) {\n    return orderPresets.cssnanoLast(orderPresets.presetEnvLast(names))\n  }\n}\n\nfunction postcssConfigFileWarning () {\n  if (postcssConfigFileWarning.executed) {\n    return\n  }\n  consola.warn('Please use `build.postcss` in your nuxt.config.js instead of an external config file. Support for such files will be removed in Nuxt 3 as they remove all defaults set by Nuxt and can cause severe problems with features like alias resolving inside your CSS.')\n  postcssConfigFileWarning.executed = true\n}\n\nexport default class PostcssConfig {\n  constructor (buildContext) {\n    this.buildContext = buildContext\n  }\n\n  get postcssOptions () {\n    return this.buildContext.buildOptions.postcss\n  }\n\n  get postcssImportAlias () {\n    const alias = { ...this.buildContext.options.alias }\n\n    for (const key in alias) {\n      if (key.startsWith('~')) {\n        continue\n      }\n      const newKey = '~' + key\n      if (!alias[newKey]) {\n        alias[newKey] = alias[key]\n      }\n    }\n\n    return alias\n  }\n\n  get defaultConfig () {\n    const { dev, srcDir, rootDir, modulesDir } = this.buildContext.options\n    return {\n      sourceMap: this.buildContext.buildOptions.cssSourceMap,\n      plugins: {\n        // https://github.com/postcss/postcss-import\n        'postcss-import': {\n          resolve: createResolver({\n            alias: this.postcssImportAlias,\n            modules: [srcDir, rootDir, ...modulesDir]\n          })\n        },\n\n        // https://github.com/postcss/postcss-url\n        'postcss-url': {},\n\n        // https://github.com/csstools/postcss-preset-env\n        'postcss-preset-env': this.preset || {},\n        cssnano: dev\n          ? false\n          : {\n            preset: ['default', {\n              // Keep quotes in font values to prevent from HEX conversion\n              // https://github.com/nuxt/nuxt.js/issues/6306\n              minifyFontValues: { removeQuotes: false }\n            }]\n          }\n      },\n      // Array, String or Function\n      order: 'presetEnvAndCssnanoLast'\n    }\n  }\n\n  searchConfigFile () {\n    // Search for postCSS config file and use it if exists\n    // https://github.com/michael-ciniawsky/postcss-load-config\n    // TODO: Remove in Nuxt 3\n    const { srcDir, rootDir } = this.buildContext.options\n    for (const dir of [srcDir, rootDir]) {\n      for (const file of [\n        'postcss.config.js',\n        '.postcssrc.js',\n        '.postcssrc',\n        '.postcssrc.json',\n        '.postcssrc.yaml'\n      ]) {\n        const configFile = path.resolve(dir, file)\n        if (fs.existsSync(configFile)) {\n          postcssConfigFileWarning()\n          return configFile\n        }\n      }\n    }\n  }\n\n  configFromFile () {\n    const loaderConfig = (this.postcssOptions && this.postcssOptions.config) || {}\n    loaderConfig.path = loaderConfig.path || this.searchConfigFile()\n\n    if (loaderConfig.path) {\n      return {\n        sourceMap: this.buildContext.buildOptions.cssSourceMap,\n        config: loaderConfig\n      }\n    }\n  }\n\n  normalize (config) {\n    // TODO: Remove in Nuxt 3\n    if (Array.isArray(config)) {\n      consola.warn('Using an Array as `build.postcss` will be deprecated in Nuxt 3. Please switch to the object' +\n        ' declaration')\n      config = { plugins: config }\n    }\n    return config\n  }\n\n  sortPlugins ({ plugins, order }) {\n    const names = Object.keys(plugins)\n    if (typeof order === 'string') {\n      order = orderPresets[order]\n    }\n    return typeof order === 'function' ? order(names, orderPresets) : (order || names)\n  }\n\n  loadPlugins (config) {\n    const { plugins } = config\n    if (isPureObject(plugins)) {\n      // Map postcss plugins into instances on object mode once\n      config.plugins = this.sortPlugins(config)\n        .map((p) => {\n          const plugin = this.buildContext.nuxt.resolver.requireModule(p, { paths: [__dirname] })\n          const opts = plugins[p]\n          if (opts === false) {\n            return false // Disabled\n          }\n          return plugin(opts)\n        })\n        .filter(Boolean)\n    }\n  }\n\n  config () {\n    /* istanbul ignore if */\n    if (!this.postcssOptions) {\n      return false\n    }\n\n    let config = this.configFromFile()\n    if (config) {\n      return config\n    }\n\n    config = this.normalize(cloneDeep(this.postcssOptions))\n\n    // Apply default plugins\n    if (isPureObject(config)) {\n      if (config.preset) {\n        this.preset = config.preset\n        delete config.preset\n      }\n      if (Array.isArray(config.plugins)) {\n        defaults(config, this.defaultConfig)\n      } else {\n        // Keep the order of default plugins\n        config = merge({}, this.defaultConfig, config)\n        this.loadPlugins(config)\n      }\n      return config\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/utils/postcss.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 837,
    "kind": "variable",
    "name": "orderPresets",
    "memberof": "packages/webpack/src/utils/postcss.js",
    "static": true,
    "longname": "packages/webpack/src/utils/postcss.js~orderPresets",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/postcss.js",
    "importStyle": "{orderPresets}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"cssnanoLast\": function, \"presetEnvLast\": function, \"presetEnvAndCssnanoLast\": function}"
      ]
    }
  },
  {
    "__docId__": 838,
    "kind": "function",
    "name": "postcssConfigFileWarning",
    "memberof": "packages/webpack/src/utils/postcss.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "packages/webpack/src/utils/postcss.js~postcssConfigFileWarning",
    "access": "public",
    "export": false,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/postcss.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 839,
    "kind": "class",
    "name": "PostcssConfig",
    "memberof": "packages/webpack/src/utils/postcss.js",
    "static": true,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/postcss.js",
    "importStyle": "PostcssConfig",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 840,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "buildContext",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 841,
    "kind": "member",
    "name": "buildContext",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#buildContext",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 842,
    "kind": "get",
    "name": "postcssOptions",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#postcssOptions",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 843,
    "kind": "get",
    "name": "postcssImportAlias",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#postcssImportAlias",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 844,
    "kind": "get",
    "name": "defaultConfig",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#defaultConfig",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "{\"sourceMap\": *, \"plugins\": *, \"order\": string}"
      ]
    }
  },
  {
    "__docId__": 845,
    "kind": "method",
    "name": "searchConfigFile",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#searchConfigFile",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 846,
    "kind": "method",
    "name": "configFromFile",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#configFromFile",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "params": [],
    "return": {
      "types": [
        "{\"sourceMap\": *, \"config\": *}"
      ]
    }
  },
  {
    "__docId__": 847,
    "kind": "method",
    "name": "normalize",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#normalize",
    "access": "public",
    "description": "",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 848,
    "kind": "method",
    "name": "sortPlugins",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#sortPlugins",
    "access": "public",
    "description": "",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 849,
    "kind": "method",
    "name": "loadPlugins",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#loadPlugins",
    "access": "public",
    "description": "",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 850,
    "kind": "method",
    "name": "config",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#config",
    "access": "public",
    "description": "",
    "lineNumber": 164,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 851,
    "kind": "member",
    "name": "preset",
    "memberof": "packages/webpack/src/utils/postcss.js~PostcssConfig",
    "static": false,
    "longname": "packages/webpack/src/utils/postcss.js~PostcssConfig#preset",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 852,
    "kind": "file",
    "name": "packages/webpack/src/utils/reserved-tags.js",
    "content": "export const reservedVueTags = [\n  // HTML tags\n  'html', 'body', 'base', 'head', 'link', 'meta', 'style', 'title', 'address',\n  'article', 'aside', 'footer', 'header', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n  'hgroup', 'nav', 'section', 'div', 'dd', 'dl', 'dt', 'figcaption', 'figure',\n  'picture', 'hr', 'img', 'li', 'main', 'ol', 'p', 'pre', 'ul', 'a', 'b', 'abbr',\n  'bdi', 'bdo', 'br', 'cite', 'code', 'data', 'dfn', 'em', 'i', 'kbd', 'mark',\n  'q', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'small', 'span', 'strong', 'sub',\n  'sup', 'time', 'u', 'var', 'wbr', 'area', 'audio', 'map', 'track', 'video',\n  'embed', 'object', 'param', 'source', 'canvas', 'script', 'noscript', 'del',\n  'ins', 'caption', 'col', 'colgroup', 'table', 'thead', 'tbody', 'td', 'th', 'tr',\n  'button', 'datalist', 'fieldset', 'form', 'input', 'label', 'legend', 'meter',\n  'optgroup', 'option', 'output', 'progress', 'select', 'textarea', 'details',\n  'dialog', 'menu', 'menuitem', 'summary', 'content', 'element', 'shadow', 'template',\n  'blockquote', 'iframe', 'tfoot',\n  // SVG tags\n  'svg', 'animate', 'circle', 'clippath', 'cursor', 'defs', 'desc', 'ellipse', 'filter',\n  'font-face', 'foreignObject', 'g', 'glyph', 'image', 'line', 'marker', 'mask',\n  'missing-glyph', 'path', 'pattern', 'polygon', 'polyline', 'rect', 'switch', 'symbol',\n  'text', 'textpath', 'tspan', 'use', 'view',\n  // Vue built-in tags\n  'slot', 'component'\n]\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/utils/reserved-tags.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 853,
    "kind": "variable",
    "name": "reservedVueTags",
    "memberof": "packages/webpack/src/utils/reserved-tags.js",
    "static": true,
    "longname": "packages/webpack/src/utils/reserved-tags.js~reservedVueTags",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/reserved-tags.js",
    "importStyle": "{reservedVueTags}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 854,
    "kind": "file",
    "name": "packages/webpack/src/utils/style-loader.js",
    "content": "import path from 'path'\nimport ExtractCssChunksPlugin from 'extract-css-chunks-webpack-plugin'\n\nimport { wrapArray } from '@nuxt/utils'\n\nimport PostcssConfig from './postcss'\nimport PostcssV8Config from './postcss-v8'\n\nexport default class StyleLoader {\n  constructor (buildContext, { isServer, perfLoader, resolveModule }) {\n    this.buildContext = buildContext\n    this.isServer = isServer\n    this.perfLoader = perfLoader\n    this.resolveModule = resolveModule\n\n    const { postcss: postcssOptions } = buildContext.options.build\n    if (postcssOptions) {\n      const postcss = require(resolveModule('postcss'))\n      // postcss >= v8\n      if (!postcss.vendor) {\n        this.postcssConfig = new PostcssV8Config(buildContext)\n      } else {\n        this.postcssConfig = new PostcssConfig(buildContext)\n      }\n    }\n  }\n\n  get extractCSS () {\n    return this.buildContext.buildOptions.extractCSS\n  }\n\n  get exportOnlyLocals () {\n    return Boolean(this.isServer && this.extractCSS)\n  }\n\n  isUrlResolvingEnabled (url, resourcePath) {\n    // Ignore absolute URLs, it will be handled by serve-static.\n    return !url.startsWith('/')\n  }\n\n  normalize (loaders) {\n    loaders = wrapArray(loaders)\n    return loaders.map(loader => (typeof loader === 'string' ? { loader } : loader))\n  }\n\n  styleResource (ext) {\n    const { buildOptions: { styleResources }, options: { rootDir } } = this.buildContext\n    const extResource = styleResources[ext]\n    // style-resources-loader\n    // https://github.com/yenshih/style-resources-loader\n    if (!extResource) {\n      return\n    }\n    const patterns = wrapArray(extResource).map(p => path.resolve(rootDir, p))\n\n    return {\n      loader: this.resolveModule('style-resources-loader'),\n      options: Object.assign(\n        { patterns },\n        styleResources.options || {}\n      )\n    }\n  }\n\n  postcss () {\n    // postcss-loader\n    // https://github.com/postcss/postcss-loader\n    if (!this.postcssConfig) {\n      return\n    }\n\n    const config = this.postcssConfig.config()\n\n    if (!config) {\n      return\n    }\n\n    return {\n      loader: this.resolveModule('postcss-loader'),\n      options: Object.assign({ sourceMap: this.buildContext.buildOptions.cssSourceMap }, config)\n    }\n  }\n\n  css (options) {\n    const cssLoader = { loader: this.resolveModule('css-loader'), options }\n\n    if (!options.url) {\n      options.url = this.isUrlResolvingEnabled\n    }\n\n    if (this.exportOnlyLocals) {\n      options.modules = {\n        ...options.modules,\n        exportOnlyLocals: true\n      }\n      return [cssLoader]\n    }\n\n    return [this.styleLoader(), cssLoader]\n  }\n\n  cssModules (options) {\n    return this.css(options)\n  }\n\n  extract () {\n    if (this.extractCSS) {\n      const isDev = this.buildContext.options.dev\n      return {\n        loader: ExtractCssChunksPlugin.loader,\n        options: {\n          // TODO: https://github.com/faceyspacey/extract-css-chunks-webpack-plugin/issues/132\n          // https://github.com/faceyspacey/extract-css-chunks-webpack-plugin/issues/161#issuecomment-500162574\n          reloadAll: isDev,\n          hot: isDev\n        }\n      }\n    }\n  }\n\n  styleLoader () {\n    return this.extract() || {\n      loader: this.resolveModule('vue-style-loader'),\n      options: this.buildContext.buildOptions.loaders.vueStyle\n    }\n  }\n\n  apply (ext, loaders = []) {\n    const { css, cssModules } = this.buildContext.buildOptions.loaders\n\n    const customLoaders = [].concat(\n      this.postcss(),\n      this.normalize(loaders),\n      this.styleResource(ext)\n    ).filter(Boolean)\n\n    css.importLoaders = cssModules.importLoaders = customLoaders.length\n\n    return [\n      // This matches <style module>\n      {\n        resourceQuery: /module/,\n        use: this.perfLoader.css().concat(\n          this.cssModules(cssModules),\n          customLoaders\n        )\n      },\n      // This matches plain <style> or <style scoped>\n      {\n        use: this.perfLoader.css().concat(\n          this.css(css),\n          customLoaders\n        )\n      }\n    ]\n  }\n}\n",
    "static": true,
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/nuxt.js/packages/webpack/src/utils/style-loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 855,
    "kind": "class",
    "name": "StyleLoader",
    "memberof": "packages/webpack/src/utils/style-loader.js",
    "static": true,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "access": "public",
    "export": true,
    "importPath": "nuxtjs-esdocs/packages/webpack/src/utils/style-loader.js",
    "importStyle": "StyleLoader",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 856,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "buildContext",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 857,
    "kind": "member",
    "name": "buildContext",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#buildContext",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 858,
    "kind": "member",
    "name": "isServer",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#isServer",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 859,
    "kind": "member",
    "name": "perfLoader",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#perfLoader",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 860,
    "kind": "member",
    "name": "resolveModule",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#resolveModule",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 861,
    "kind": "member",
    "name": "postcssConfig",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#postcssConfig",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 863,
    "kind": "get",
    "name": "extractCSS",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#extractCSS",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 864,
    "kind": "get",
    "name": "exportOnlyLocals",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#exportOnlyLocals",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 865,
    "kind": "method",
    "name": "isUrlResolvingEnabled",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#isUrlResolvingEnabled",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "resourcePath",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 866,
    "kind": "method",
    "name": "normalize",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#normalize",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "loaders",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 867,
    "kind": "method",
    "name": "styleResource",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#styleResource",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"loader\": *, \"options\": *}"
      ]
    }
  },
  {
    "__docId__": 868,
    "kind": "method",
    "name": "postcss",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#postcss",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "params": [],
    "return": {
      "types": [
        "{\"loader\": *, \"options\": *}"
      ]
    }
  },
  {
    "__docId__": 869,
    "kind": "method",
    "name": "css",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#css",
    "access": "public",
    "description": "",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 870,
    "kind": "method",
    "name": "cssModules",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#cssModules",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 871,
    "kind": "method",
    "name": "extract",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#extract",
    "access": "public",
    "description": "",
    "lineNumber": 106,
    "params": [],
    "return": {
      "types": [
        "{\"loader\": *, \"options\": *}"
      ]
    }
  },
  {
    "__docId__": 872,
    "kind": "method",
    "name": "styleLoader",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#styleLoader",
    "access": "public",
    "description": "",
    "lineNumber": 121,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 873,
    "kind": "method",
    "name": "apply",
    "memberof": "packages/webpack/src/utils/style-loader.js~StyleLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "packages/webpack/src/utils/style-loader.js~StyleLoader#apply",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "loaders",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "kind": "index",
    "content": "",
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"nuxtjs-esdocs\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"nuxt.js\",\n  \"directories\": {\n    \"doc\": \"docs\"\n  },\n  \"scripts\": {\n    \"make:docs\": \"esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/JeremyJaydan/nuxtjs-esdocs.git\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/JeremyJaydan/nuxtjs-esdocs/issues\"\n  },\n  \"homepage\": \"https://github.com/JeremyJaydan/nuxtjs-esdocs#readme\",\n  \"dependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-accessor-plugin\": \"^1.0.0\",\n    \"esdoc-coverage-plugin\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-flow-type-plugin\": \"^1.1.0\",\n    \"esdoc-importpath-plugin\": \"^1.0.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"esdoc-typescript-plugin\": \"^1.0.1\",\n    \"esdoc-undocumented-identifier-plugin\": \"^1.0.0\",\n    \"esdoc-unexported-identifier-plugin\": \"^1.0.0\"\n  }\n}\n",
    "longname": "/home/jeremy/workspace/nuxtjs-esdocs/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]